#ifndef _SHOPMGR_H_
#define _SHOPMGR_H_


#include "Shop_define.h"
#include <map>
//#include "CmdAdapter.h"

struct s_net_cmd;

class ShopMgr
{
public:
	ShopMgr();
	~ShopMgr() {}

	bool	init();
	static ShopMgr* getInstance();
	void destroy();

	// 按照商店id获取商店数据;
	const tagShopProto* get_shop_data(unsigned int id);
	const tagRingShopProto* get_ring_shop_data(unsigned int id);
	
	// 买东西
	void onBuyItem(const tagShopItemProto* pShopItemProto, INT64 n64NPCID, short num);

	// 买特戒和灵石
	void onBuyRing(const tagRingShopItemProto* pRingShopItemProto);

	unsigned int onServerFeedbackFromShop(s_net_cmd* cmd);
	// 卖东西
	void onSellItem(INT64 n64NPCID, INT64 n64ItemID);
	void onSellAll();
	void comfirmSellAll();
	void confirmSelSignleItem();
	void concelSellSignleItem();
	// 修理
	void onRepair();
	unsigned int onServerRepair(s_net_cmd* cmd);
	void onNpcTalk(unsigned int dw_data_id, INT64 n64NPCID);
	void comfirmRepairAll();
	void onSelect(unsigned int qid);

	unsigned int getShopID(unsigned int dw_data_id);

	void setItemID(long long id){itemID = id;};
	long long getItemID(){return itemID;};
	void setItemNum(int num){itemNum = num;};
	int getItemNum(){return itemNum;};
	void setFollowShop(unsigned char isFollowShop){_isFollowShop=isFollowShop;};
	void unLockItem();//解锁因为过地图,造成界面关闭，而未解锁的物品
private:
	void init_shop_data();

	std::map<unsigned int, tagShopProto>	m_map_shop_data;
	std::map<unsigned int, tagRingShopProto> m_map_ringshop_data;
	INT64	_n64CurTalkNpcID;
    INT16   nSellType;
	INT64	_n64TempItemID;//临时存储卖出的物品ID
	long long itemID;//出售的物品id,卖出物品提示金额暂时用这个id变量
	int itemNum;//出售的物品数量
	int _isFollowShop;
};
#endif