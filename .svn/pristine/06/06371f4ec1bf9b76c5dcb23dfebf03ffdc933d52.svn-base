#ifndef TCPSOCKET_H_INCLUDE
#define TCPSOCKET_H_INCLUDE
#include "Socket.h"
#include "CmdAdapter.h"
#include <list>
enum e_socket_status
{
	SS_DONE , 
	SS_NOT_READY , 
	SS_DISCONNECTED , 
	SS_ERROR
};
class c_tcp_socket:public c_socket
{
private:
	c_mem_pool* _pool;
	c_cmd_adapter m_adapter;
	bool m_suspend;
public:
	c_tcp_socket(c_mem_pool* pool_);
	~c_tcp_socket();
public:
	bool open();
	void close();
	e_socket_status connect(const char* addresss_, unsigned short port_, unsigned int timeout_ = 150);
	e_socket_status send(s_net_cmd* msg_, bool compressed_);
	e_socket_status receive(std::list<s_net_cmd*>& msgs_, bool compressed_);
	int _wait(int ms_, bool read_);

	// hurui dns parse
	static std::string domainToIP(const char* pDomain);
	//hurui ≈–∂œ «∑ÒIPv6Õ¯¬Á
	static bool isIPV6Net(const std::string domainStr = "www.baidu.com");

private:
	e_socket_status _get_error_status() const;
};

#endif