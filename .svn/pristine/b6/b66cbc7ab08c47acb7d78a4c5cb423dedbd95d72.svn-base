#ifndef TEAMMATEHEADVIEW_H__
#define TEAMMATEHEADVIEW_H__

#include "SlotControl.h"
#include "CommonClient.h"

class UiInterface;
class RoleDisplayNode;
struct tagEquipDisplay;

class TeammateHeadView 
	: public SlotControl
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
	,private ft_replace_helper
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(TeammateHeadView, create);

	static TeammateHeadView* createFormCCBI(const char* szFilename,CCObject* pOwner,UiInterface* holder);

	TeammateHeadView();
	~TeammateHeadView();	

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName){return NULL;}
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void setData(unsigned int dwID,const char* name,int nClass,int nLv, int nScore,bool bMale);
	void setEmpty(bool is_match);
	void refreshOnLineState(bool bOnline);

	unsigned int getID()const{return mdwID;}
	void update_display(ePlayerDisplayAttr attr, unsigned int id);
	void load_animate();

private:
	void onAdd(CCObject * pSender, CCControlEvent pCCControlEvent);
	void setClass(int nClass,bool bMale);

private:
	cocos2d::CCSprite*			mpEnableRoot;
	cocos2d::CCSprite*			m_no_root;
	cocos2d::CCSprite*			m_match_cue;
	CCControlButton*			m_add_button;
	cocos2d::CCSprite*			mpClass;

	cocos2d::CCLabelTTF*		mpBattleScore;	
	cocos2d::CCLabelTTF*		mpName;
	cocos2d::CCLabelTTF*		mpLv;

	cocos2d::CCNode*			mpOffline;
	RoleDisplayNode*			m_display_node;

	unsigned int				mdwID;
};

class TeammateHeadViewLoader :public cocos2d::extension::CCControlLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TeammateHeadViewLoader,loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(TeammateHeadView);
};

#endif // TEAMMATEHEADVIEW_H__
