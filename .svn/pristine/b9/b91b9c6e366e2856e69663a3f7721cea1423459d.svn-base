#pragma once

#include "cocos2d.h"
#include "cocos-ext.h"
#include <time.h>
#include <stdlib.h>
using namespace cocos2d;
using namespace cocos2d::extension;

class CrossSceneUILayer;

class CrossSceneUI : public CCObject
{
	friend class CrossSceneUILayer;
public:
	static CrossSceneUI *getInstance();
	CrossSceneUI();
	~CrossSceneUI();
	void open(int id,bool isRepetLogin = false);
	void close(bool isRepetLogin = false);

	void closeWithDelay(float fDelay);

	bool isOpen();
	CrossSceneUILayer *getUiLayer();
	void setPec(int pec);
	void setPecAction(int per1, int per2);
	int getPec();
	void rand_message();
	std::string const& getMessage();
	bool isInCross() { return _inCross; };
	void setIsJoinjjc(bool flag){isJoinjjc = flag;};
	bool getIsJoinjjc()const {return isJoinjjc;};
	void retain();
	//void sim(int dt);
public:
	std::string _tipText;
private:
	void doClose(float);
private:
	bool _inCross;
	std::set<std::string> _usedPlistFile;
	bool isJoinjjc;
	CrossSceneUILayer* _layer;
};


class CrossSceneUILayer
	: public CCLayer
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class CrossSceneUI;

public:
	CrossSceneUILayer();
	~CrossSceneUILayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(CrossSceneUILayer, create);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void setPec(int per);
	//int setMessageId();
	std::string getMesseage()
	{
		return _xiaotieshi->getString();
	}
	void setMessage(std::string const& msg);
	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void update(float dt);

	void setPecAction(int per1, int per2);
	int getPec();

	void show_pro_bar(bool val);
protected:
	CCProgressTimer* _pro;
	CCSprite *_guangEffect;
	LabelFT *_xiaotieshi;
	bool _isPecAction;
	int _per1;
	int _per2;
	int _perCur;

	CCPoint _ori_sfx_pos;
};
