#ifndef ROLEINFOUI_H
#define ROLEINFOUI_H


#include "ListItem.h"
#include "VerticalList.h"
#include "FrameSprite.h"
#include "SocialMgr.h"
#include "UiInterface.h"
#include "GameActionNode.h"

class TouchSprite;

class XingzuoListItem : public ListItem
{
	enum eNodeTag
	{
		NT_Name = 0,
		NT_Sprite = 1,
	};

	enum eHorizonPos
	{
		HP_Pos = 63,
	};

public:
	XingzuoListItem();
	virtual ~XingzuoListItem();
	void setData(int index);
	unsigned int getIndex() const {return _index;}
	virtual CCSize getContentSize();
	virtual void onSelectChanged(bool select);
private:
	int _index;
};

class XingzuoListFrame 
	: public FrameSprite
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eNodeTag
	{
		NT_Content = 0
	};
public:
	XingzuoListFrame();
	virtual ~XingzuoListFrame();
	CREATE_FUNC(XingzuoListFrame);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	virtual void onNodeLoaded(CCNode * pNode, CCNodeLoader * pNodeLoader);
	void showFrame(bool show);
protected:
	void updateList();
private:
	CCPoint _stPt;
	CCScrollView *_scrollView;
	CCNode *_content;
	VerticalList<XingzuoListItem> *_verticalList;
	int _index;
	bool _isShow;
};


class RoleInfoUiLayer;

class RoleInfoUi : public UiInterface
{
	friend class RoleInfoUiLayer;
public:
	RoleInfoUi();
	~RoleInfoUi();
	virtual CCNode *openUi();
	virtual void popupUIOnEnd();
	RoleInfoUiLayer *getUiLayer();
	void setRoleId(unsigned int roleId);
	void updateData(unsigned int roleId);
};

class RoleInfoUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class RoleInfoUi;

	enum eNodeTag
	{
		NT_Frame = 0,
		NT_SelFrame = 1,
		NT_Name = 0,
		NT_Jingjie = 1,
		NT_Level = 2,
		NT_FightNumPosLabel,				//CCBI上的labelttf，用来取坐标摆放艺术字 3
		NT_Profession = 4,
		NT_Sex = 5,
		NT_Guanzhi = 6,
		NT_Peiou = 7,
		NT_Guild = 8,
		NT_Xingzuo = 9,
		NT_AddressLab = 10,
		NT_QianmingLab = 11,
		NT_AddressNode = 12,
		NT_QianmingNode = 13,
		NT_TiLiZhi=15,
		NT_EquipTab = 20,
		NT_AttrTab = 21,
		NT_TitleTab = 24,
		NT_FightNumSE = 30,				//战斗力特效			30
		NT_FightNumSP,					//战斗力字体			31
		NT_Zhandouli,					//战斗力数值			32
		NT_RoleID,						//id
		NT_MonthCard = 34,
	};

public:
	RoleInfoUiLayer();
	~RoleInfoUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(RoleInfoUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSelBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onEquipTabClicked(TouchSprite*, bool);
	void onAttrTabClicked(TouchSprite*, bool);
	void onTitleTabClicked(TouchSprite*, bool);

	void onAddressChanged(bool isOk, std::string str);
	void onQianMingChanged(bool isOk, std::string str);
	GameActionNode* getFightSuperEffect();							//获得战斗力特效

protected:
	void setRoleId(unsigned int roleId);
	unsigned int getRoleId() const { return _roleId; }
	void updateDisplayData(unsigned int roleId);

	void setAttr(eNodeTag tag, const char *value);
	void setAttr(eNodeTag tag, const wchar_t *value);
	void setAttr(eNodeTag tag, int value);
	void setAttrMonthCard(tagDWORDTime beginTime);
	void setXingzuo(EnumVCardConstellation index);
	void setTitleInfoVisible();

	void insertNewlineInString( std::string & str , int max_line_length );		// max_line_length : 行宽

private:
	void set_att_sign_no_cue(LabelFT* label, eNodeTag tag, const std::string str);

private:
	CCSprite *_frame;
	GameActionNode* _fightNumAcNode;						//战斗力特效
	XingzuoListFrame *_selectFrame;
	unsigned int _roleId;
	CCPoint _stPt;
	int _selectTitle;
	std::set<std::string> _plist;						//保存特效plist名称
	std::map<eNodeTag,bool>m_AttrRemoveMapInfo;
	CCLabelTTF* m_NoTagEnergy;
	CCLabelTTF* m_NoTagLevel;
	CCLabelTTF* m_NoTagRoleID;
};


#endif //ROLEINFOUI_H