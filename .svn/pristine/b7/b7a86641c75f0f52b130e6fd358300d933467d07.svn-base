#ifndef SELECTROLEHEADUI_H
#define SELECTROLEHEADUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "ProgressBar.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class Role;
class SelectRoleHeadUiLoaderLayer;
class TouchSprite;

class SelectRoleHeadUi : public CCLayer
{
public:
	SelectRoleHeadUi();
	~SelectRoleHeadUi();
	CREATE_FUNC(SelectRoleHeadUi);
	bool init();
	void setRoleName(const char *name);
	void setRoleName(const wchar_t *name);
	void setLevel(int level);
	void setBtnVisible(bool visible);
	void updateMonsterHead(Role *role);
	void updateNpcHead(Role *role);
	void updateHead(Role *role);
	void setRole();
	void setMonster();
public:
	void onHpChanged(int hp , int mhp);
	void onMpChanged(int mp , int mmp);
	bool isNeedShowXuanZhanBtn( int guild_ID );
private:
	CCSprite *_hp;
	CCSprite *_mp;
	ProgressBar *_hpProgress;
	ProgressBar *_mpProgress;
	CCLabelTTF *_name;
	CCSprite *_headSprite;
	CCControlButton* _xuanzhanbtn;
	CCLabelTTF *_level;
	CCSprite* _bg;
	SelectRoleHeadUiLoaderLayer *_uiLayer;
	CCPoint _bgPt;
	CCPoint _hpPt;
	CCPoint _namePt;
	CCPoint _levelPt;
};

class SelectRoleHeadUiLoaderLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eNodeTag
	{
		NT_BtnGroupMain = 6,
// 		NT_BtnGroupGuanxi = 22,
// 		NT_BtnGroupJiaohu = 23
	};
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(SelectRoleHeadUiLoaderLayer, create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	//void headPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onBaiShiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onShouTuBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onGuanZhuBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onLaHeiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onZuDuiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onLookUpBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSiliaoBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onShunagxiuBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSonghuaBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onTradeBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onRuHuiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onXuanZhanBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	
	//void onGuanxiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onJiaohuBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onRoleHeadPressed(TouchSprite *, bool);
	void setBtnVisible(bool visible);
private:
	void confirmXuanZhan();
	void showBtnGroup(eNodeTag tag, bool show);
	void showShiTu(bool show);

private:
	float _btnGroupSrcPosY[3];
	bool _btnGroupShow[3];
	CCControlButton* _baishibtn;
	CCControlButton* _shoutubtn;
};

class SelectRoleHeadUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(SelectRoleHeadUiLoader, loader);

protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(SelectRoleHeadUiLoaderLayer);
};


#endif //SELECTROLEHEADUI_H