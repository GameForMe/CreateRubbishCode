/**
 *	@file		TeamMatchApplyItem.h
 *	@author		guantiejun
 *	@date		2016/07/04
 *	@version	
 *	@brief		∂”ŒÈ∆•≈‰…Í«Î¡–±Ì
 */

#ifndef TEAM_MATCH_APPLY_ITEM_H__
#define TEAM_MATCH_APPLY_ITEM_H__

#include "NormalLayer.h"
#include "UiInterface.h"
#include "RoleDefine.h"
#include "TeamProto.h"

struct apply_team_success;

class TeamMatchApplyItem : public cocos2d::CCNode
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TeamMatchApplyItem,create);

	TeamMatchApplyItem();
	~TeamMatchApplyItem();

	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	static TeamMatchApplyItem* create_item(const char* szFile,CCObject*pOwner,UiInterface* holder = NULL);
	void refresh_info(STeamListInfo& info, DWORD role_name_crc, bool is_have_apply);

private:
	void on_event_apply_team_success(apply_team_success* event);

	void onApply(CCObject * pSender, CCControlEvent pCCControlEvent);
	string get_class_pic(bool is_male, EClassType role_class);
	void set_apply_state(bool is_apply);
	void on_sure_send_apply();

private:
	LabelFT*			m_name;
	LabelFT*			m_level;

	CCControlButton*	m_apply;
	CCSprite*			m_have_apply;
	CCSprite*			m_class[MAX_TEAM_NUM];

	DWORD				m_role_id;
};

#endif
