/**
 *	@file		UseOilUi.h
 *	@author		guantiejun
 *	@date		2016/05/06
 *	@version	
 *	@brief		祝福油使用界面
 */

#ifndef USE_OIL_UI_H
#define USE_OIL_UI_H

#include "UiInterface.h"
#include "NormalLayer.h"

USING_NS_CC;
USING_NS_CC_EXT;

class UseOilUiLayer;
class CheckButton;
struct use_oil_return_event;

class UseOilUi : public UiInterface
{
public:
	UseOilUi();
	~UseOilUi();

	virtual CCNode *openUi();
	UseOilUiLayer *getUiLayer();
};

class UseOilUiLayer: public NormalLayer
{
public:
	UseOilUiLayer();
	~UseOilUiLayer();

	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(UseOilUiLayer, create);

	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();

private:
	void onUse(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onStop(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onClick1(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onClick2(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onClose(CCObject * pSender, CCControlEvent pCCControlEvent);

	void on_check_1(CheckButton *check_button, bool check);
	void on_check_2(CheckButton *check_button, bool check);

	void update_second(float dt);

	void on_input_luck_num(bool is_ok, std::string str);
	void on_input_oil_num(bool is_ok, std::string str);
	void recive_role_info(use_oil_return_event* event);

	bool use_item();
	void create_fight_effect();
	void refresh_node();
	void refresh_check_info();
	void set_default_value();
	void set_update(bool is_update);

private:
	CheckButton*		m_check_1;
	CheckButton*		m_check_2;
	CCControlButton*	m_use;
	CCControlButton*	m_stop;
	CCControlButton*	m_button_1;
	CCControlButton*	m_button_2;
	CCLabelBMFont*		m_fight_num;
	CCNode*				m_item_node;
	LabelFT*			m_label_1;
	LabelFT*			m_label_2;
	LabelFT*			m_label_3;
	LabelFT*			m_label_4;
	LabelFT*			m_label_5;
	LabelFT*			m_label_6;
	LabelFT*			m_equip_name;
	LabelFT*			m_luck_num;
	LabelFT*			m_oil_num;

	INT64				m_equip_id;
	int					m_cur_oil_num;
	int					m_cur_weapon_luck;
	int					m_to_oil_num;
	int					m_to_luck_num;
	int					m_final_oil_num;
	bool				m_is_update;
	bool				m_is_receve_back;
};

#endif