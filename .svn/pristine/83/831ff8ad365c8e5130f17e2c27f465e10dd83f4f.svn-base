#pragma once

#include <map>
#include "cocos2d.h"
#include "cocos-ext.h"

#include "UiTools.h"
#include "UiInterface.h"
#include "DropDragDelegate.h"
#include "NewStallMgr.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class ItemNode;
class NewStallUiLayer;
class FrameSprite;

class NewStallUi : public UiInterface
{
public:
	NewStallUi();
	~NewStallUi();

	CCNode* openUi();

	void AddStallItem(f_item* pItem);
	void DelStallItem(int nIdx, bool IsBuy);
	void UpdateStallItem();
	void UpdateOnPerStall();
};

class NewStallUiLayer
	: public DropDragInterface
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:

	NewStallUiLayer(){}
	~NewStallUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(NewStallUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);

	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	//界面退出后执行
	virtual void onExit();

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	virtual short getItemBegin(CCTouch &touch, eGetResult &result);
	virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
	virtual bool onClicked(CCTouch &touch);
	virtual bool onDoubleClicked(CCTouch &touch);
	virtual EItemConType getConType() { return EICT_StallItem; }
	
	ItemNode* GetItem(CCTouch &touch);

	void clearui();
	void DelBuyStallItem(int nIdx);

	void OnPerStall();	//准备摆摊
	void OnStall();		//已经摆摊修改
	void OnBuy(s_net_cmd* cmd);		//购买

	void OnBuyConfrim();	//购买物品确认
	 void noticeRecharge();//跳转充值界面//add by vvv 2014.11.
	void OnBaitanConfrim(bool isOk, std::string str);	//摆摊确定

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onShouBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onBaiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMaiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onHelpBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);		 //界面左上角问号事件
	void onOkBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);			 //升级说明面板确定事件
	void AddStallItem(f_item* pItem);
	void UpdateStallItem();

private:
	FrameSprite *_descframe;      //升级说明界面//add by vvv 2014.11.11
	CCSprite* m_MainFrame;
	ItemNode* m_pItem[10];
	CCLabelTTF* m_pLabel[10];
	CCLabelTTF* m_pAllPriceLabel;
	
	CCControlButton* m_pShouBtn;	//收摊按钮
	CCControlButton* m_pBaiBtn;		//摆摊按钮
	CCControlButton* m_pMaiBtn;		//购买按钮
	
	E_STALL_STATE m_eState;	//0 == 准备摆摊 1 == 已经摆摊 2 == 购买
	
	signed char m_cBuySelect;				//购买时所选择的物品idx
	unsigned int m_dwStallRoleId;	//购买时贩卖者的RoleID
};


/* 3级界面 */
class NewStallChangeUiLayer;
class ItemMarixLayer;

class NewStallChangeUi : public UiInterface
{
public:
	NewStallChangeUi();
	~NewStallChangeUi();

	CCNode* openUi();
};

class NewStallChangeUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:

	NewStallChangeUiLayer(){}
	~NewStallChangeUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(NewStallChangeUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);

	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	//界面退出后执行
	virtual void onExit();

	//设置物品
	void SetItemData(f_item* pfitem, E_STALL_STATE eState);

	//得到所选中贩卖的物品 用于当物品被买走时比对用 若一样需要关闭该界面
	f_item* GetStallItem()
	{
		return m_pStallItem;
	}

	void onjianBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onjiaBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSureBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onChedanBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	unsigned int getItemStallPiece();//计算单个物品价格
private:

	NewStallMgr* m_pStallMgr;
	CCSprite* m_MainFrame;
	CCLayer* m_pLayer;			//0 主矩阵
	ItemNode* m_pItemNode;		//1 贩卖物品
	CCLabelTTF* m_pTotlePriceLabel;	//2 总价
	CCLabelTTF* m_pItemNameLabel;	//3 物品名称
	CCLabelTTF* m_pItemNumLabel;	//4 物品数量
	CCLabelTTF* m_pAddNumLabel;		//5 增加数量
	CCControlButton* m_pConfrimBtn; //6 确定
	CCControlButton* m_pCancelBtn; //7 撤单
	CCControlButton* m_pJianBtn;
	CCControlButton* m_pJiaBtn;

	f_item* m_pStallItem;	//所贩卖中的物品

	signed char m_uIdx;	//所选兑换物品idx
	unsigned int m_dwAllPrice;
	short	m_nUseCount;

	E_STALL_STATE m_eState;
};
