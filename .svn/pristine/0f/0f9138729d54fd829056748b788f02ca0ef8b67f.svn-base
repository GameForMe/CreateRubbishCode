/**************************************************************************************/
//   Copyright (C) 2009-2012 Marilyn Dafa
//   This file is part of the "Overdrive Engine".
//   For conditions of distribution and use, see copyright notice in config.h
/**************************************************************************************/
#include "Socket.h"
c_socket::c_socket(e_socket_type type_)
	:m_type(type_) , 
	m_socket(-1)
{}
//--------------------------------------------------------
c_socket::~c_socket(){}
//--------------------------------------------------------
void c_socket::set_block(bool flag_)
{
#ifdef OVD_PLATFORM_WINDOWS
	if (m_socket != INVALID_SOCKET)
	{
		u_long blocking = flag_ ? 0 : 1;
		ioctlsocket(m_socket, FIONBIO, &blocking);
	}
#else
	if (m_socket != -1)
	{
		int status = fcntl(m_socket, F_GETFL);
		if (flag_)
			fcntl(m_socket, F_SETFL, status & ~O_NONBLOCK);
		else
			fcntl(m_socket, F_SETFL, status | O_NONBLOCK);
	}
#endif
}
//--------------------------------------------------------
void c_socket::set_nagle(bool nagle_)
{
#ifdef OVD_PLATFORM_WINDOWS
	if(!nagle_)
	{
		int nodelay = 1;
		setsockopt(m_socket, IPPROTO_TCP, TCP_NODELAY, (char*)&nodelay, sizeof(nodelay));
	}
#else
	if(!nagle_)
	{
		int nodelay = 1;
		setsockopt(m_socket, IPPROTO_TCP, TCP_NODELAY, (char*)&nodelay, sizeof(nodelay));
	}
#endif
}
//--------------------------------------------------------
void c_socket::set_reuse(bool reuse_ /*= true*/)
{
#ifdef OVD_PLATFORM_WINDOWS
	int reuse = 1;
	setsockopt(m_socket, SOL_SOCKET, SO_REUSEADDR, (char*)&reuse, sizeof(reuse));
#else
	int reuse = 1;
	setsockopt(m_socket, SOL_SOCKET, SO_REUSEADDR, (char*)&reuse, sizeof(reuse));
#endif
}