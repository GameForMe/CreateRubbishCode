#ifndef ROLEPROXY_H
#define ROLEPROXY_H

#include "Role.h"

class RoleProxy : public Role
{
public:
	RoleProxy();
	virtual ~RoleProxy();

	virtual CCPoint getHeadPos() const;
	virtual void update(float dt);
	virtual void initFsm();
	virtual void runStandAni(){}
	virtual void runRunAni(){}
	virtual void runAttrackAni(){}
	virtual void runAttrackedAni(){}
	virtual void runSitAni(){}
	virtual void runDeadAni(){}
	virtual void stopAni() {}
	virtual void setAlpha(bool alpha);
	virtual int getRoleDir() { return 0; }
	virtual bool loadAnimate( unsigned int id = 0 ) { return false; }
	virtual void updateRealPosition();

	//代理是否是玩家
	bool isPlayer() { return IS_PLAYER(getId()); }

	virtual void destroyFsm();

	virtual void updateAnimConfig(){}
protected:	
	//CCSprite *_body;
	CCSprite *_shadow;
};


#endif //ROLEPROXY_H