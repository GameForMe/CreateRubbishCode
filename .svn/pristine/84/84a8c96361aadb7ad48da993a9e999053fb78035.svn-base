#ifndef SELECTROLEVIEWNODE_H
#define SELECTROLEVIEWNODE_H

#include "cocos2d.h"
#include "cocos-ext.h"
using namespace cocos2d;
using namespace cocos2d::extension;

#include "TouchSprite.h"
#include "Signals.h"
#include "BaseDefine.h"
#include "tagDWORDTime.h"

struct RoleInfo
{
	int roleNum;
	unsigned int id;
	eRoleTypeEnum type;
	int level;
	wchar_t name[32];
	tagDWORDTime roleCreateTime;
};

class SelectRoleViewNode 
	: public CCNode
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eNodeTag
	{
		NT_RoleInfo = 0,
		NT_RoleInfoType = 0,
		NT_RoleInfoName = 1,
		NT_RoleInfoCreate = 2,
		NT_RoleCreate = 1,
		NT_NanWarrior = 2,
		NT_NvWarrior = 3,
		NT_NanMage = 4,
		NT_NvMage = 5,
		NT_NanTaoist = 6,
		NT_NvTaoist = 7,
		RSP_FazhenEffect = 10,
		RSP_LiziEffect = 11
	};

public:
	CREATE_FUNC(SelectRoleViewNode);
	bool init();
	virtual void onNodeLoaded(CCNode * pNode, CCNodeLoader * pNodeLoader);
	void onRoleImgTouched(TouchSprite*, bool touched);
	int getState() const { return _roleViewState;}
	unsigned int getRoleId();
	unsigned int getRoleLevel();
	std::string getRoleName();
	void runShowAnimation();

	//state:
	// 0	创建角色
	// 1	角色
	// 2	角色高亮
	void setState(int state);
	void setRoleInfo(const RoleInfo &roleInfo);
protected:
	SelectRoleViewNode();
	~SelectRoleViewNode();

	void setRoleType(const std::string &str);
	void setRoleName(const std::string &name);

	void setAllVisible(bool visible);
	void setState1();
	void setState2();

SIGNALS:
	c_signal<void, SelectRoleViewNode*> signalRoleImgTouched;
protected:
	RoleInfo *_roleInfoData;
	int _roleViewState;
};

class SelectRoleViewNodeLoader : public cocos2d::extension::CCNodeLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(SelectRoleViewNodeLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(SelectRoleViewNode);
};


#endif //SELECTROLEVIEWNODE_H