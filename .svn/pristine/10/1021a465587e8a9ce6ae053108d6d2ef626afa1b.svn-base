#ifndef KAIFUHUODONGITEM_H
#define KAIFUHUODONGITEM_H


#include "UiManager.h"
#include "ProgressBar.h"
#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "kaifuhudong_protocol.h"
#include "ListItem.h"
#include "VerticalList.h"
#include <vector>

using namespace cocos2d;
using namespace cocos2d::extension;

class KaifuhuodongListItemLayer;
class KaifuhuodongListItemChild;
class KaifuhuodongUiLayer;

class KaifuhuodongListItem : public ListItem
{
public:
	KaifuhuodongListItem();
	virtual ~KaifuhuodongListItem();
	virtual void onTouch(CCTouch *touck);
	virtual void onSelectChanged(bool select);
	virtual CCSize getContentSize();
	void setData(const SPacket_Activity &data, KaifuhuodongUiLayer* layer);
	float getItemHeight();
	void updateData(CCNode* parent, VerticalList<KaifuhuodongListItemChild> *_verticalList, LabelFT* ziti);
	void updateBtnState(int);
	void updateDataListItem(bool isShow = true);
private:
	const char* getCCBIName(std::string& name);
	const char* getLayerName(std::string& name);
	void getLoader(std::map<std::string, CCNodeLoader*>& nodeLoaders);
	void update7DayLogin(CCNode* node);

protected:
	SPacket_Activity _data;
	CCSprite* _bg_sprite;
	std::vector<KaifuhuodongListItemLayer*> ccNodeList;
	LabelFT* ziti;
	KaifuhuodongUiLayer * pLayer;

	std::vector<int> indexVecForItem;//存储右侧活动条序列
};

class KaifuhuodongListItemChild : public ListItem
{
public :
	KaifuhuodongListItemChild();
	virtual ~KaifuhuodongListItemChild();
	virtual CCSize getContentSize();
	float getItemHeight();
	KaifuhuodongListItemLayer* createItem(const char* szFile,CCObject*pOwner,UiInterface* holder = NULL);
private:
	KaifuhuodongListItemLayer* ccNode;
};

class KaifuhuodongListItemLayer : public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	KaifuhuodongListItemLayer();
	virtual ~KaifuhuodongListItemLayer();
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName) = 0;
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader) = 0;
	virtual void updateData(const SPacket_Activity &data, int index);
	virtual void updateReceiveBtnState(int index,int sendBefore);
protected:
	void update7DayLogin(CCNode* node);
	SPacket_Activity _data;
	int m_Index;
};

class Tian7leUiLayer: public KaifuhuodongListItemLayer
{
public:
	Tian7leUiLayer();
	virtual ~Tian7leUiLayer();
	virtual void updateData(const SPacket_Activity &data, int index);
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(Tian7leUiLayer, create);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void onlingquBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	virtual void onEnter();
	virtual void onExit();

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void updateReceiveBtnState(int index,int sendBefore); 
private:
	CCScrollView *_scrollView;
	CCNode *_container;
	CCNode *_node;
	LabelFT* firstWenzi;
	LabelFT* secondWenzi;
};

//class KaifuhuodongListItemUiLoader :public cocos2d::extension::CCSpriteLoader
//{
//public:
//	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(KaifuhuodongListItemUiLoader,loader);
//protected:
//	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(KaifuhuodongListItemLayer);
//};

#endif