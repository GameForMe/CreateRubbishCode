#include "CrossSceneFuBenUI.h"
#include "World.h"
#include "UiLoader.h"
#include "UiTools.h"
#include "CfgReader.h"
#include "BaseDefine.h"
#include "UiResourceMgr.h"
#include "SelectRole.h"
#include "CreateRole.h"
#include "RoleManager.h"
#include "Login.h"
#include "UiManager.h"
#include "DBMgr.h"
#include "JoyStick.h"
#include "MapManager.h"
#include "World.h"
#include "MiniMapUi.h"
#include "AnimationCache.h"
#include "CrossSceneUI.h"
#include "Helper.h"
CrossSceneUIFuBen::CrossSceneUIFuBen()
	//: _inCross(false)
{
}

CrossSceneUIFuBen::~CrossSceneUIFuBen()
{
}

CCNode* CrossSceneUIFuBen::openUi()
{
	CCNodeLoaderLibrary * ccNodeLoaderLibrary = CCNodeLoaderLibrary::newDefaultCCNodeLoaderLibrary();
	ccNodeLoaderLibrary->registerCCNodeLoader("CrossSceneJingXiangUILayer", UiLayerLoader<CrossSceneUIFuBenLayer>::loader());
	cocos2d::extension::CCBReader * ccbReader = new cocos2d::extension::CCBReader(ccNodeLoaderLibrary);
	CCNode *node = ccbReader->readNodeGraphFromFile((CFGReader::instance()->get_profile_string("Art", "UI", "") + "crossSceneuijingxiang.ccbi").c_str());
	_usedPlistFile = ccbReader->getLoadedSpriteSheet();
	UiResourceMgr::getInstance()->retainPlistFile(_usedPlistFile);
	ccbReader->release();
	if(node != NULL) {
		CCSize winSize = CCDirector::sharedDirector()->getWinSize();
		CCNode *uiNode = CCNode::create();
		uiNode->addChild(CCLayerColor::create(ccc4(0, 0, 0, 255), winSize.width, winSize.height));
		uiNode->addChild(node);
		node->setTag(WCT_CROSSSCENEFUBEN);
		node->setPositionX(node->getPositionX() + UiMgr::getInstance()->getOffsetX());
		node->setPositionY(node->getPositionY() + UiMgr::getInstance()->getOffsetY());

		//[bing] 跨场景时停止播放音乐
		//AudioPlayer::getSigletonPtr()->stopMusic();
		return uiNode;
	}
	return NULL;
}
CrossSceneUIFuBenLayer::CrossSceneUIFuBenLayer()
{
	//_isPecAction = false;
	//_per1 = 0;
	//_per2 = 0;
	//_perCur = 0;
}

CrossSceneUIFuBenLayer::~CrossSceneUIFuBenLayer()
{
}

void CrossSceneUIFuBenLayer::onNodeLoaded( cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader )
{
	CCSprite* pro = dynamic_cast<CCSprite*>(getChildByTag(1));
	_guangEffect = dynamic_cast<CCSprite*>(getChildByTag(987));
	_guangEffect->setPositionX(_guangEffect->getPositionX() + pro->getContentSize().width * 0.97f);
	//addChild(_guangEffect,3);
	
	//场景切换界面进度条文字描边设为1


	_xiaotieshi=Helper::createLabelFT(16,1);
// 	_xiaotieshi = CCLabelTTF::create();//提示语
// 	_xiaotieshi->setFontSize(16.0f);
	_xiaotieshi->setPosition(ccp(400.0f, 95.0f));
	setMessage(CrossSceneUI::getInstance()->getMessage());
	addChild(_xiaotieshi, 1);

	CCSprite* backGround = dynamic_cast<CCSprite*>(getChildByTag(3));
	if(backGround)
	{
		const CCSize& winSize = CCDirector::sharedDirector()->getWinSize();
		CCSize backGroundSize = backGround->getContentSize();
		backGround->setScale(winSize.width / backGroundSize.width);
	}
}

void CrossSceneUIFuBenLayer::setMessage(std::string const& msg)
{
	_xiaotieshi->setString(msg.c_str());
}

bool CrossSceneUIFuBenLayer::ccTouchBegan( CCTouch *pTouch, CCEvent *pEvent )
{
	if ( !isVisible() || !isRunning() || !hasVisibleParents() )
	{
		return false;
	}
	return true;
}

void CrossSceneUIFuBenLayer::onEnter()
{
//	CCDirector::sharedDirector()->getTouchDispatcher()->addTargetedDelegate(this, -10, true);
	setTouchPriority(-10);
	setTouchEnabled(true);
	CCLayer::onEnter();
	CCAction* act = CCSequence::createWithTwoActions(CCDelayTime::create(0.3f),CCCallFunc::create(this,callfunc_selector(CrossSceneUIFuBenLayer::closeInDelay)));
	this->runAction(act);
}

void CrossSceneUIFuBenLayer::onExit()
{
	CCLayer::onExit();
//	CCDirector::sharedDirector()->getTouchDispatcher()->removeDelegate(this);
}

void CrossSceneUIFuBenLayer::closeInDelay()
{
	UiMgr::getInstance()->closeUi(WCT_CROSSSCENEFUBEN,false);
}
