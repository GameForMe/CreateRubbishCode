#pragma once
#include "NormalLayer.h"
#include "UiInterface.h"
#include "cocos-ext.h"
#include "NumKeypad.h"
#include "PackageManager.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class TradingSetPlane : public cocos2d::CCNode
	, public NumKeyPadDelegate
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TradingSetPlane,create);

	TradingSetPlane();
	~TradingSetPlane();

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName){return NULL;}
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	static TradingSetPlane* createItem(const char* szFile,CCObject*pOwner,UiInterface* holder = NULL);
private:
	void onClickBtnPressed( CCObject * pSender, CCControlEvent pCCControlEvent );
public:
	virtual int onAttach();
	virtual void onNumChange(int num);
	virtual void onFinished(int num, int srcNum);
	virtual void onCancel(int num);
public:
	int getValue();
	void setValue(std::string value);
	void setOtherData(TradingSetPlane *onther,LabelFT* totalLabel);
	void setParentNode(CCNode * node);
	void setZoomOnTouchDown(bool value);
	void SetItemData(INT64 itemId);
	void setClickEnabled(bool value);
	void setMinTotalPrice(int value){m_nMinTotalPrice = value;}
	void setShowMaxImage(bool value){m_bShowMaxImage = value;}
	void setRecomNum(int value){m_RecomNum = value;}
	void setMaxNum(int value){m_nMaxNum = value;}
	void setKeyState(int value){m_nKeyState = value;}
	void setMaxNumChangeFunCall(float dt);
	void setUpClickBtn(CCControlButton* ClickBtn);
	void setUpBtnEnabled(bool value);
	void setItemTypeID(unsigned int ptypeId);
private:
	TradingSetPlane*		m_pOnterNode;

	CCLabelTTF*				m_pNumLabel;

	LabelFT*				m_pNewNumLabel;

	LabelFT*				m_pTotalNumLabel;

	CCNode*					mpParentNode;

	CCControlButton*		m_pClickBtn;

	CCControlButton*		m_pUpClickBtn;

	int						m_RecomNum;

	int						m_nKeyState;

	INT64					m_n64ItemId;

	unsigned int			m_unItemTypeId;

	int						m_nMinTotalPrice;

	bool					m_bShowMaxImage;

	int						m_nMaxNum;
};