#ifndef CANGJINGGE_H
#define CANGJINGGE_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiTools.h"
#include "UiInterface.h"
#include "ItemNode.h"
#include "ListItem.h"
#include "VerticalList.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class CangJingGeUiLayer;
struct mohun_update_yuanbao_cost;

// enum eGongFaSETag				//用来播放对应功法特效		【Ji：】
// {
// 	GFT_Normal,					//普通
// 	GFT_Blue,					//蓝色
// 	GFT_Purple,					//紫色
// 	GFT_Gold,					//金色
// 	GFT_Orange,					//橘色
// };
struct CangJingGeListItemData
{
	std::string name;
	std::string att;
	int attNum;
	//std::string attNum;
	std::string att2;
	int att2Num;
	//std::string att2Num;
	int quality;
};
class CangJingGeListItem : public ListItem
{
	friend class CangJingGeUiLayer;
	enum eCangJingListItemTag
	{
		NT_Name = 0,
		NT_Att=1,
		NT_AttNum=2,
		NT_Att2=3,
		NT_Att2Num=4,
		NT_FUHAO=5,
	};
public:
	CangJingGeListItem();
	~CangJingGeListItem();
	virtual void onTouch(CCTouch *touck);
	virtual CCSize getContentSize() { return _contentSize; }
	void setData(const CangJingGeListItemData &data);
	float getItemHeight();
	/*const DayActivityData &getData() const { return _data; }
	void setSelect(bool sel);
	void updateContent();*/
protected:
	LabelFT *getLabel(eCangJingListItemTag tag);
protected:
	CangJingGeListItemData _data;
	CCSize _contentSize;
};

class CangJingGeListItemDataMgr
{
public:
	CangJingGeListItemDataMgr();
	~CangJingGeListItemDataMgr();
	static CangJingGeListItemDataMgr* getInstance();
	const std::vector<CangJingGeListItemData>& getData();
private:
	std::vector<CangJingGeListItemData> _allData;

};
class CangJingGeUi : public UiInterface
{
public:
	CangJingGeUi();
	~CangJingGeUi();

	CCNode* openUi();
	void setSENeed(bool needSE);
	void playSE(short idx);
	void updateGongFaTemp(short idx = - 1);
// 	void setSELoc(short idx);			//设置特效位置
 	void playSuperEffect(short idx, eVisualPattern seLevel);				//播放特效

	void playSuperEffect(short idx, string effect);	//融合特效



	void updateMoney();
	void updateBless(int curValue);
};

class ItemMarixLayer;

class CangJingGeUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum NodeTag
	{
		NT_JINBIFENGMO = 11,
		NT_YUANBAOFENGMO = 12,
		NT_YUANBAOLABEL = 13,
		NT_YIJIANFENGMO = 14,
	};
public:

	CangJingGeUiLayer(){}
	~CangJingGeUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(CangJingGeUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);

	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	virtual void onEnter();
	//界面退出后执行
	virtual void onExit();

	//点击物品
//	void onClickItem( short nPos1 );
	//交换物品
	void onChangeItemPos( short nPos1, short nPos2 );

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onClose1BtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);//玩法说明关闭
	void onGotowuxueBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onshiquBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onybhqBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onyjhqBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onijrhBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onjbhqBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onWuXueListBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);//说明按钮
	void onWuXueList1BtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onWuXueListCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
// 	void onDescPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
// 	void onKnowBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onExpShengliPressedBtn(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);


public:
	void updateGongFaTemp(short idx);
	void setGongfaSESwith(bool isNeedSE);
//	void doubleclickitemlayer(short idx);
	void clickitemlayer(short idx);
	void displaySuperEffect(short idx, eVisualPattern seLevel);
	void displaySuperEffect(short idx, string effect);
	void showLevelUpEffect(short idx, string effect);

	void getGongfaToWuxue();
	void showMoveAnim(short idx);
	//void onSECalback(CCNode* pSender);				
//	void setSELocation(short posIdx);				//设置特效位置
	void updateDisplay();

	void updateMoney();
	string getMoneyStr(INT64 num);
	void updateBless(int curValue);

	void updateYuanBaoCost(mohun_update_yuanbao_cost* trans);

	int _nState;									
private:
//	bool m_bAnim;						//是否有动画
//	int m_nAnimCount;					//有动画的功法个数
	CCSprite *_roleframe;
	CCNode* _seNode;						//播放特效标记位置
	bool m_bIsNeedSE;						//是否需要播放特效->目前用来判断单个拾取需要播放特效
	bool m_bIsMultiple;						//判断是否为多个拾取用来播放特效
	int m_SEItemIdx;						//播放特效的node用
	CCPoint _seNodePt;						//保存特效node位置
	//void setRoleVisible(bool visible);//藏经阁规则vvv
	CCSprite* m_MainFrame;
	ItemMarixLayer* m_pItemMarixLayer;
//	CCPoint _SELocation;							//特效播放位置
//	bool _firstClick;
	short _firstClickNode[2];
	std::set <std::string> _plist;				//存放特效plist名称
	std::string _gongfaType;					//存放功法品质以获得环绕特效
	std::map<short, short> _shiquMap;			//存放拾取时藏经阁和武学需要交换的位置索引
	CCSprite* mainListNode;							//藏经阁目录Node
//	CCSprite* m_desNode;							//藏经阁目录Node
	CCScrollView *_scrollView;
	CCNode *_container;
	VerticalList<CangJingGeListItem> *_verticalList;
	LabelFT * m_yuanBao;
	LabelFT * m_zuanShi;
	LabelFT * m_jinBi;
	CCProgressTimer * m_blessProgress;
	LabelFT * m_blessLabel;

	GameActionNode* m_blessDoneEffect;
	GameActionNode* m_blessGoEffect;

	LabelFT* m_jinbifengmo;
	LabelFT* m_yuanbaofengmo;
	LabelFT* m_yuanbaoLabel;
	LabelFT* m_yijianfengmo;
};

#endif //CANGJINGGE_H