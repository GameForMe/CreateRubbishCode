#ifndef SAFELIST_H_INCLUDE
#define SAFELIST_H_INCLUDE
#include <list>
#include "Socket.h"
template<typename T>
class c_safe_list : public std::list<T>
{
private:
#ifdef OVD_PLATFORM_WINDOWS
	CRITICAL_SECTION m_handle;
#else
	pthread_mutex_t m_handle;
#endif
public:
	c_safe_list()
	{
#ifdef OVD_PLATFORM_WINDOWS
		InitializeCriticalSection(&m_handle);
#else
		pthread_mutex_init(&m_handle, NULL);
#endif
	}
	~c_safe_list()
	{
#ifdef OVD_PLATFORM_WINDOWS
		DeleteCriticalSection(&m_handle);
#else
		pthread_mutex_destroy(&m_handle);
#endif
	}
	void lock()
	{
#ifdef OVD_PLATFORM_WINDOWS
		EnterCriticalSection(&m_handle);
#else
		pthread_mutex_lock(&m_handle);
#endif
	}
	void unlock()
	{
#ifdef OVD_PLATFORM_WINDOWS
		LeaveCriticalSection(&m_handle);
#else
		pthread_mutex_unlock(&m_handle);
#endif
	}
};
#endif