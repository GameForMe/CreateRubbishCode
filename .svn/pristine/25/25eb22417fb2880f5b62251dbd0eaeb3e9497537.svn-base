#include "TextTip.h"
#include "StringMgr.h"
#include "CfgReader.h"
#include "World.h"


TextTip* TextTip::m_pInstance = NULL;
TextTip::TextTip()
{
	m_pBase9Sp = NULL;
	m_pTextLabel = NULL;
}

TextTip::~TextTip()
{

}

TextTip* TextTip::getInstance()
{
	if (m_pInstance == NULL)
	{
		m_pInstance = new TextTip;
	}
	return m_pInstance;
}

void TextTip::open()
{
	if (m_pBase9Sp == NULL)
	{
		creatBaseSp();
	}
}

void TextTip::close()
{
	if (m_pBase9Sp)
	{
		m_pBase9Sp->removeFromParentAndCleanup(true);
	}
	m_pBase9Sp = NULL;
	m_pTextLabel = NULL;
}

void TextTip::setString( int index )
{
	if (m_pTextLabel == NULL)
	{
		if (m_pBase9Sp == NULL)
		{
			creatBaseSp();
			//如果还创建失败则返回
			if (m_pBase9Sp == NULL)
				return;
		}
		TTFConfig config;
		config.fontFilePath=  FT_FONTFACE;
		config.fontSize = 16;
		config.outlineSize = 1;

		m_pTextLabel = LabelFT::createWithTTF(config,"");
		//m_pTextLabel = CCLabelTTF::create();
		//m_pTextLabel->setFontSize(16);
		m_pTextLabel->setPosition(ccp(0.0,0.0));
		m_pTextLabel->setAnchorPoint(ccp(0.5,0.5));
		//m_pTextLabel->setDimensions(CCSize(208.f, 0.0f));
		m_pBase9Sp->addChild(m_pTextLabel);
	}
	m_pTextLabel->setString(GET_STR(index).c_str());
	CCSize size = m_pTextLabel->getContentSize();
	CCSize newSize = CCSize(size.width + ETTP_MarginWidth * 2,size.height + ETTP_MarginHeight * 2);
	m_pBase9Sp->setContentSize(newSize);
	m_pTextLabel->setPosition(ccp(newSize.width/2,newSize.height/2));
}

void TextTip::creatBaseSp()
{
	CCScene* scene = World::getInstance()->getScene();
	if (scene == NULL)
		return;
	std::string sSEDir = CFGReader::instance()->get_profile_string("Art","ICON","");
	std::string sSEImageName = sSEDir + "tips.png";
	m_pBase9Sp = CCScale9Sprite::create(sSEImageName.c_str());
	m_pBase9Sp->setAnchorPoint(ccp(0, 0));
	scene->addChild(m_pBase9Sp, WZ_MESSAGEBOX);
}

void TextTip::setPostion( CCNode* node,int dir /*= ETTD_Right*/ )
{
	CCNode* parent = node->getParent();
	CCPoint basePt;
	if (parent)
		basePt = parent->convertToWorldSpace(node->getPosition());
	else
		basePt = node->getPosition();
	CCSize size = node->getContentSize();
	if (dir == ETTD_Left)
	{
		CCPoint finalPt = ccp(basePt.x - size.width/2,basePt.y + size.height/2);
		if (m_pBase9Sp)
		{
			m_pBase9Sp->setPosition(finalPt);
			m_pBase9Sp->setAnchorPoint(ccp(1.0,0.0));
		}
	}
	else if (dir == ETTD_Right)
	{
		CCPoint finalPt = ccp(basePt.x + size.width/2,basePt.y + size.height/2);
		if (m_pBase9Sp)
		{
			m_pBase9Sp->setPosition(finalPt);
			m_pBase9Sp->setAnchorPoint(ccp(0.0,0.0));
		}
	}
}

void TextTip::destoryInstance()
{
	if (m_pInstance)
	{
		delete m_pInstance;
	}
}
