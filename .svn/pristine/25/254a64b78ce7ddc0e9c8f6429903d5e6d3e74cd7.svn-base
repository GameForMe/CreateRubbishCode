#ifndef CORETREE_H
#define CORETREE_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "RewardProto.h" 
#include "Attres.h"
#include "ListItem.h"
#include "VerticalList.h"
#include "UiInterface.h"
#include "ScrollImage.h"
#include "GameActionNode.h"
#include <stdlib.h>

using namespace cocos2d;
using namespace cocos2d::extension;

class CoreTreeUiLayer;

enum eNodeTag
{
    NT_CoretreeFrame = 0,
	NT_TreeNode = 1,
	NT_ScoreBord = 2,
	NT_LestCount = 3,
	NT_GetYuanbao = 4,
	NT_ReCharge = 5,
	NT_RockBtn = 50,
	NT_Thousands = 10,
	NT_Hundard = 11,
	NT_Ten = 12,
	NT_Unit = 13,
	NT_InstructFrame = 20,
	NT_CountDownLabel=21,
};

class CoreTreeUi : public UiInterface
{
public:
	virtual CCNode * openUi();
	CoreTreeUiLayer * getUiLayer();
	void updateData();
	CCPoint getNumPoint(int i);
	void setNumber(int number); 
	void setLestCount(int lastNumber);
	void setGetYuanBao(int getYuanbao);
	void setReCharge(int reCharge);
};

class CoreTreeUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class CoreTreeUi;

public:
	CoreTreeUiLayer();
	~CoreTreeUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(CoreTreeUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtn2Pressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onInstructBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onRechargeBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onRockBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void updateDisplay();
	void RefreshMoneyTreeOverDays( unsigned int dwDays ); //刷新摇钱树剩余天数
protected:
	void getUiLayer();
	void runAnimation();
//	void stopAnimation();
	void runNumRock();
	void setEnableRockBtn(bool enable);
	void setInstrcutshow(bool show);
	void setNumber(int number); 
	void setLestCount(int lastNumber);
	void setGetYuanBao(int getYuanbao);
	void setReCharge(int reCharge);
	void rockFinish(float dt);
	void AnimationBackFun();
private:
	GameActionNode* _coretreeAcNode;		//特效
	CCArray * _scrollArray;
    CCNode *_coretreeFrame;
	CCSprite *_coretreeSprite;
	CCNode *_thousandsSprite;
	CCNode *_hundardSprite;
	CCNode *_tenSprite;
	CCNode *_unitSprite;

	int _number;		//随机摇钱数目;
	int	_lestCount;		//剩余次数;
	int	_getYuanBao;	//积累获得;
	int	_reCharge;		//再充值;
	std::string m_sSEName;		//保存特效名称
	CCSprite *instructFrame;
	CCLabelBMFont* _lestCounBLabel;				//剩余次数艺术字label vv
	CCLabelBMFont* _getyuanbaoBLabel;
	CCLabelBMFont* _rechargeBLabel;
	CCLabelTTF* _CountDownLabel;

};
#endif //CORETREE_H
