#ifndef RANKUI_H
#define RANKUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
using namespace cocos2d;
using namespace cocos2d::extension;
#include "VerticalList.h"
#include "ListItem.h"
#include "RankListItem.h"
#include "UiInterface.h"
#include "RankMgr.h"
class RankUiLayer;
class TouchSprite;

class RankUi : public UiInterface
{
public:
	RankUi();
	~RankUi();
	virtual CCNode *openUi();
	RankUiLayer *getUiLayer();
	
	void updateData();
	void updategraduates(int num);
};

class RankUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class RankUi;

	enum eNodeTag
	{
		NT_Frame = 0,
		NT_Content = 0,
		NT_LevelTab = 1,
		NT_ZhanliTab = 2,
		NT_MeiliTab = 3,
		NT_GuildTab = 4,
		NT_Column1Name = 5,
		NT_ColumnNum = 5,
		NT_Content2 = 10,
		NT_DescLab = 11,
		NT_MineLab = 12,
		NT_MingShiTab = 13,
		NT_RichTab = 15,
		NT_MineName = 16,
		NT_MineVal = 17,
		NT_Prompt =18,
		NT_btnFrame = 20,
		NT_hanghuiguize=40,
		NT_fuhaoguize=60
	
	};

	enum eTab
	{
		T_Null = -1,
		T_Dengjibang = 0,
		T_Zhanlibang,
		T_Meilibang,
		T_Hanghuibang,
		T_MingShibang,
		T_FuHaobang,
		T_TabNum = 6
	};

public:
	RankUiLayer();
	~RankUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(RankUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onLookupBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onChatBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onGuanzhuBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSonghuaBtnPressd(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
protected:
	void setSelectTab(eTab tab);
	TouchSprite *getTouchSprite(eTab tab);

	void updateFilterBySelectTab();
	void updateTitleBySelectTab();
	void updateDataBySelectTab();
	void updateDataBySelectFilter();
	void updateDataBySelectTabGraduates(int num);
	void updateLevelByFilter();
	void updateZhanliByFilter();
	void updateMeiliByFilter();
	void updateGuildByFilter();
	void updateMingShiByFilter();
	void updateFuHaoByFilter();

	void onTabDengjibangTouch(TouchSprite*, bool);
	void onTabZhanlibangTouch(TouchSprite*, bool);
	void onTabMeilibangTouch(TouchSprite*, bool);
	void onTabHanghuibangTouch(TouchSprite*, bool);
	void onTabMingShiTouch(TouchSprite*, bool);
	void onTabFuHaoTouch(TouchSprite*, bool);
	void showBtnFrame(bool visible);
	void updateCurrentRoleRank(unsigned int roleId,int rank,eTab tab);
	void showBtnGroundFrame(bool visible);
protected:
	CCSprite *_frame;
	CCSprite *_btnFrame; 
	CCNode *_content;
	CCScrollView *_scrollView;
	VerticalList<RankListIItem> *_verticalList;

	CCNode *_content2;
	VerticalList<RankLabItem> *_verticalList2;

	VerticalList<RankListIItem> *_probattleList;
	CCPoint _starTouchPoint;

	typedef std::vector<std::string> StrList;
	StrList _tabFrameName;
	StrList _normalFilterFrameName[T_TabNum];
	StrList _highFilterFrameName[T_TabNum];
	StrList _titleName[T_TabNum];
	eTab _selectTab;
	int _selectFileterIndex;
	LabelFT *_descLab;
	LabelFT *_mineLab;
	LabelFT *_mineName; //我的等级/我的行会/我的排行榜。。。
	LabelFT *_mineVal;	//后面紧跟的值
	LabelFT *_promptTitle;
	int _warriorTopten;
	int _mageTopten;
	int _taoistTopten;
	int _manTopten;
	int _womanTopten;
	int _mingshiTopten;
	int _fuhaoTopten;
	CCPoint _mineNameStartPos;
	CCPoint _mineValStartPos;
};
#endif //RANKUI_H