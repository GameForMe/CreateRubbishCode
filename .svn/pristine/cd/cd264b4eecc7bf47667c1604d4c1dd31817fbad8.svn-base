#ifndef NOTICEBOARDUI_H
#define NOTICEBOARDUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "ListItem.h"
#include "VerticalList.h"

using namespace cocos2d;
using namespace cocos2d::extension;
#define OFFFLINEEXPUI_NAME_POSX 0

class NoticeBoardUiLayer;

class NoticeList : public ListItem
{
	enum eNonticTextTag  { NTT_Text = 0};
public:
	NoticeList();
	~NoticeList();
	virtual CCSize getContentSize();
	void setData(const std::string &text);

	//void setData(const tagMPMember_Local &dataInfo);
	//const tagMPMember_Local &getData() { return _memberInfo; }
private:
	CCLabelTTF *getLabel(eNonticTextTag tag);
	CCLabelTTF* createLabel(const std::string &text);
	void updateContent();
private:
	CCSize _contentSize;
	

	//tagMPMember_Local _memberInfo;
};

class NoticeBoardUi
{
	friend class NoticeBoardUiLayer;
public:
	NoticeBoardUi();
	~NoticeBoardUi();
	static NoticeBoardUi *getInstance();
	void open();
	void close();
	void destroy();
	NoticeBoardUiLayer *getUiLayer();
	void LoadNoticeListOnce();
	VerticalList<NoticeList> *GetNoticeList(){return m_verticalList;}
	CCScrollView *GetNoticeScroll(){return _scrollView;}
	std::set<std::string> _plist;
private:
	VerticalList<NoticeList> *m_verticalList;
	CCScrollView *_scrollView;
	bool IsListLoad;
};

class NoticeBoardUiLayer
	: public cocos2d::CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class NoticeBoardUi;
public:
	NoticeBoardUiLayer();
	~NoticeBoardUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(NoticeBoardUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	CCNode *GetContainerNode(){return _container;}
	void onOkBtnPressed(cocos2d::CCObject *pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(cocos2d::CCObject *pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void onExit();
private:
	CCLayer* _frame;
	CCNode *_container;

	void updateData();
	std::string getActBroad();//离线经验公告板上的提示内容
};

#endif