#ifndef WUXUEUI_H
#define WUXUEUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiTools.h"
#include "UiInterface.h"
#include "GameActionNode.h"
#include "ItemNode.h"
#include "GambleMgr.h"
#include "cangjinggeui.h"
#include "CommonDefine.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class WuXueUiLayer;
class ItemNode;
class ItemMarixLayer;
struct tagOtherGongFa;
class RealmItem
{
public:
	RealmItem(CCNode * _node);
	void addToParent(CCNode * _node);
	void setPositon(CCPoint point){if(m_node)m_node->setPosition(point);};
	void setData(GongFaRealm const& realmData);
	void setOtherData(GongFaRealm const& realmData,tagOtherGongFa const& otherGongFa);
	//LabelFT * createLabel(string str);
	LabelFT * createLabel(CCLabelTTF * _label);
	static const ccColor3B qualityColors[];
	CCNode * getNode(){return m_node;};
	int getId(){return m_id;};
	void setId(int _id){m_id=_id;};	
private:
	void refresh_special_soul_text(GongFaRealm const& realm);
private:
	CCNode * m_node;
	CCSprite * m_realmName;
	LabelFT * m_getLabel;
	LabelFT * m_qualityLabel;
	LabelFT * m_needNumLabel;
	LabelFT * m_needLvLabel;
	LabelFT * m_curNumLabel;
	LabelFT * m_addValueLabel;
	LabelFT*  m_special_soul;
	CCSprite* m_line;
	int m_id;
};



#define WUXUELOCKINDEX = 100;
class WuXueUi : public UiInterface
{
public:
	WuXueUi();
	~WuXueUi();

	CCNode* openUi();

	void updateMartialData();
	void updateEquip();
	void updateWare();
	void updateRealmTile();
	void updateRealmView();
	bool getKungfuLockState(int index);
};

class WuXueUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eWXTag
	{
		WXT_FightNumPosLabel = 14,				//CCBI上的坐标，用来取坐标摆放艺术字	14
		WXT_FightNumSE = 30,					//战斗力特效							30
		WXT_FightNumSP,							//战斗力字体							31
		WXT_FightNumValue,						//战斗力								32
	};

public:

	WuXueUiLayer();
	~WuXueUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(WuXueUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode); 
	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onZhengLiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onYJRongHeBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onTiaoZhuanBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onWuXueDescPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onKnowBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseDescBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMoJingBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onchakanjingjieBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	
	void clickitemlayer(short idx);
	void clickitemlayer2(short idx);
	void clickequiplayer(short idx);

	//界面退出后执行
	virtual void onExit();
	//int getItemNode(CCTouch *pTouch);
public:
	//刷新格子信息
	void updateMartialData();
	void updateEquip();
	void updateWare();
	void unlockpos(short nPos);

	//放下物品
	void onDropEndItem( CCNode* pNode, short nIdx );

//	void onDropEndItem2( CCNode* pNode, short nIdx );

	void onDropEndEquipItem( CCNode* pNode, short nIdx );

	//交换物品
	void onChangeItemPos( short nPos1, short nPos2 );

	void DropGongfaItem();
	//设置8个技能的图片开启
	void setLockitem();

	GameActionNode* getFightSuperEffect();					//创建一个战斗力特效

	bool getKungfuLockState(int index);

	CCRect GetItemRect(short nIdx);
	CCRect GetCloseBtnPos();
	void showFusionEffect(short idx, eVisualPattern seLevel,EItemConType conType);
	void showFusionEffect(short idx, string effect,EItemConType conType);
	void showTip(bool show);
	void showLevelUpEffect(short idx, string effect,EItemConType conType);

	void initRealmView();
	void updateRealmTile();
	void updateRealmView();
	void showWuXueList(bool _show);
	void closeAllUi();
	map<int,RealmItem*> m_realmItemMap;
private:
	//CCSprite *_roleframe;
	void setRoleVisible(bool visible);//武学规则vvv
	void onWuXueList1BtnPressed( cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent );
	void updateDisplay();
	void onClose1BtnPressed( cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent );

	void refresh_special_soul_num();
	//WuXueUiLayer* m_MainFrame;
	CCSprite* m_MainFrame;
	CCSprite* m_pBGFrame;

	CCNode*	  m_bag_bg;
	LabelFT*  m_special_soul;

	ItemMarixLayer* m_pItemMarixLayer;
	//ItemMarixLayer* m_pWareMarixLayer;
	ItemMarixLayer* m_pEquipMarixLayer;

	//ItemNode* m_pCycelItem[8];

	CCLabelTTF* m_pZhanDouLi;

	short nDelItemPos;

	bool _firstClick;
	short _firstClickNode[3];

	std::vector<CCSprite*> itemLock/*[MAX_GONGFA_EQUIP_NUM]*/;//8个功法的图标
	std::vector<bool> itemLockState/*[MAX_GONGFA_EQUIP_NUM]*/;//8个功法锁的状态

	GameActionNode* _fightNumAcNode;				//战斗力特效
	std::set<std::string> _plist;				//保存特效plist名称
	CCLabelBMFont* _fightNumBLabel;				//战斗力艺术字label 

	LabelFT * m_bagNum;
	CCSprite * m_realm;
	LabelFT * m_addtionDes;
	LabelFT * m_addtionValue;

	CCNode * m_tipNode;
	CCNode * m_tipContener;
	CCNode * m_tipItemModel;
	CCScrollView * m_tipScrollView;
	CCNode *_container;
	CCSprite* mainListNode;
	typedef std::unique_ptr<VerticalList<CangJingGeListItem> > verticalList_ptr;
	verticalList_ptr _verticalList;
	CCScrollView *_scrollView;

	int m_slot_max_num;
};


#endif //WUXUEUI_H