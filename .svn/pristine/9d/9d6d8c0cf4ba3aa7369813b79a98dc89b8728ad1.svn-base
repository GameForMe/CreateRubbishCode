#ifndef  NOTICELAYER_H
#define  NOTICELAYER_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include <list>
using namespace cocos2d;
using namespace cocos2d::extension;

enum enumNodePosition
{
	ENP_Interval		= 10,	//行间距
	ENP_StarWidth		= 22,	//
	ENP_StarHeigth		= 20,
	ENP_MaxTextWidth	= 250,	//文本最大宽度
	ENP_MaxTextHeight	= 500,	//文本最大高度

	EMP_AdapterMiniLayerWith = 322,  //适配最小layer框大小

	ENP_MinLayerWidth   = 365,	//界面最小宽度
	ENP_MinLayerHeight  = 360,	//界面最小高度
};

class NoticeLayer :public CCLayer
{
public:
	~NoticeLayer();
private:
	virtual bool init();
	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan( CCTouch *pTouch, CCEvent *pEvent );
	CREATE_FUNC(NoticeLayer);
	NoticeLayer();
	void clearAllItems();
public:
	///////////////////////必须按照从上到下的顺序设置
	void setTitle(unsigned int itemId,std::string nameStr,std::string numStr);	//带ICON的标题
	void setText(std::string nameStr,std::string twoStr);						//黄色选项，一般内容
	void setTextTwo(std::string nameStr,std::string twoStr);					//绿色选项，绿色内容
	void setLast(std::string nameStr,unsigned int *itemId,int num);				//最后的itemnode
	void updatePt();															//设置完所有内容后，一定要updat										
	int getLine(std::string str,CCNode* node);									//如果文本过长，需要换行，则需要此函数获得行数
	void setTextWithoutTitleAndColor(std::string nameStr);
	/**
	 *setIsLimitsWinSize Noticelayer是否大小可变
	 */
	void setIsLimitsWinSize(bool isWinChangeable);
	void hide();
	/**
	 *show 展示NoticeLayer
	 *param 相应该事件Node的世界坐标
	 */
	void show(CCPoint worldPoint);
	void positionAdjustment(CCPoint point);
	static NoticeLayer* getInstance();

	static void destroyInstance()
	{
		CC_SAFE_RELEASE_NULL(m_Singlton);
	}
private:
	CCScale9Sprite* m_pBase9Sp;
	float maxHeight;
	float maxWidth;
	typedef std::list<CCNode*> NodeMap;
	NodeMap m_pNodeList;
	bool m_pIsFirstGreenText;
	bool m_isLimitsWinSize;
	static NoticeLayer* m_Singlton;
};

#endif