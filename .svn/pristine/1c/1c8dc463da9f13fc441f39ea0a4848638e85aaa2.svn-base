#ifndef MAILREWARDUI_H
#define MAILREWARDUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiTools.h"
#include "UiInterface.h"
#include "MailRewardMgr.h"

using namespace cocos2d;
using namespace cocos2d::extension;

enum MailRewardUiTag
{
	MAILMAIN = 0,//邮件总界面
	MAILSCROLLVIEW = 0,//邮件滚动条
	MAILDEFINITE = 1,//具体邮件界面
	MAILTITLE = 1,//邮件标题
	MAILFRONT = 2,//邮件开头人名
	MAILBODY = 3,//邮件正文
	MAILINSCRIBE = 4,//邮件落款
	ITEMPIC_1 = 10,//第一个位置图片
	ITEMFONT_1 = 11,//第一个位置文字
	ITEMPIC_2 = 12,//第二个位置图片
	ITEMFONT_2 = 13,//第二个位置文字
	ITEMPIC_3 = 14,//第三个位置图片
	ITEMFONT_3 = 15,//第三个位置文字
	ITEMPIC_4 = 16,//第四个位置图片
	ITEMFONT_4 = 17,//第四个位置文字
	ITEMPIC_5 = 18,//第五个位置图片
	ITEMFONT_5 = 19,//第四个位置文字
	MAILREWARD_1 = 20,//奖励物品1
	MAILREWARD_2 = 21,//奖励物品2
	MAILREWARD_3 = 22,//奖励物品3
	MAILREWARD_4 = 23,//奖励物品4
	MAILREWARD_5 = 24,//奖励物品5
	MAILTITLE_2 = 30//邮件标题
};

class MailRewardUiLayer;

//item部分代码
class MailRewardUiItemFrame;

class MailRewardUiItem
{
	friend class MailRewardUiItemFrame;

	enum eMailRewardUiItemTag
	{
		ArenaDate_Icon = 0,
		ArenaDate_Msg,
	};
public:
	MailRewardUiItem();
	~MailRewardUiItem();
	MailRewardUiItemFrame *getUiFrame() { return _uiFrame; }

	void setSelect(bool flag);
	bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
protected:

private:
	MailRewardUiItemFrame *_uiFrame;
	std::set<std::string> _usedPlistFile;
};

class MailRewardUiItemFrame 
	: public CCSprite
	, public CCTouchDelegate
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class MailRewardUiItem;
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(MailRewardUiItemFrame, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void setData(tagMailReward const& mailRewardData);
	//std::string getChangeWenziType(wchar_t* roleName);

	virtual void onExit();

	void setSelect(bool flag);
protected:
	MailRewardUiItem *_item;
	CCPoint _stPt;
private:
	LabelFT* MailTitle;//邮件标题
	LabelFT* MailSend;//邮件发件人
	LabelFT* MailTime;//发邮件时间
	LabelFT* MailSendName;
	CCSprite* MailIcont;//图标
	ItemNode* _mailIcon;		//原精灵改为itemnode显示
};

class MailRewardUiItemLoader : public CCSpriteLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(MailRewardUiItemLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(MailRewardUiItemFrame);
};
//背景部分
class MailRewardUi : public UiInterface
{
public:
	MailRewardUi();
	~MailRewardUi();

	CCNode* openUi();
	virtual void closeUI();
	void updateMailData();
	void updateMailListData();
};

class MailRewardUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:

	MailRewardUiLayer(){};
	~MailRewardUiLayer() {};
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(MailRewardUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	//按钮处理方法
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed1(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReceiveBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	//界面退出后执行
	virtual void onExit();
	virtual void onEnter();
	void updateMailItem();
	void updateMailListItem();
	void clearData();
	void clearMailRewardUiItems();
private:
	CCScrollView *_scrollView;//邮件滚动条
	LabelFT* mailTitle;//邮件标题
	LabelFT* mailTitle_2;//邮件标题
	LabelFT* mailFront;//邮件开头人名
	LabelFT* mailBody;//邮件正文
	LabelFT* mailInscribe;//邮件落款
	CCSprite* mailitemPic_1;//第一个位置图片
	LabelFT* mailItemFont_1;//第一个位置文字
	CCSprite* mailitemPic_2;//第二个位置图片
	LabelFT* mailItemFont_2;//第二个位置文字
	CCSprite* mailitemPic_3;//第三个位置图片
	LabelFT* mailItemFont_3;//第三个位置文字
	CCSprite* mailitemPic_4;//第四个位置图片
	CCSprite* mailitemPic_5;//第四个位置图片
	LabelFT* mailItemFont_4;//第四个位置文字
	LabelFT* mailItemFont_5;//第五个位置文字


	ItemNode* mailReward_1;//奖励物品1
	ItemNode* mailReward_2;//奖励物品2
	ItemNode* mailReward_3;//奖励物品3
	ItemNode* mailReward_4;//奖励物品4
	ItemNode* mailReward_5;//奖励物品5

	CCNode* mailRewardItem_1;
	CCNode* mailRewardItem_2;
	CCNode* mailRewardItem_3;
	CCNode* mailRewardItem_4;
	CCNode* mailRewardItem_5;

	CCSprite* mailMain;//邮件总界面
	CCSprite* mailDefinite;//具体邮件界面
	CCNode* mailDown;
	CCLayer* _contentLayer;
	CCNode *_container;

	typedef std::list<MailRewardUiItem*> MailItemList;
	MailItemList _listMailRewardUiItems;
};

#endif //MAILREWARDUI_H