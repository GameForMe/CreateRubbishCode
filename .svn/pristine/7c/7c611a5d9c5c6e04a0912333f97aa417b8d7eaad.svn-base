#ifndef TUNINGSCROLLVIEW_H__
#define TUNINGSCROLLVIEW_H__

/********************************************************************
	created:	2015/08/06
	created:	6:8:2015   16:58
	filename: 	C:\chuanqi\trunk\Client\code\source\TuningScrollView.h
	file path:	C:\chuanqi\trunk\Client\code\source
	file base:	TuningScrollView
	file ext:	h
	author:		gh
	
	purpose:	一个按粒度移动的sv,停下来会回调一个函数
*********************************************************************/
#include "ListControl.h"

class TuningScrollView: public ListControl
{
public:
	typedef boost::function<void(TuningScrollView* sv,size_t centerIndex)>  StopCB;
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(TuningScrollView, create);

	TuningScrollView();
	~TuningScrollView();

	 virtual void ccTouchEnded(cocos2d::CCTouch *pTouch, cocos2d::CCEvent *pEvent);

	 void setVisibleCnt(size_t cnt){mnVisibleCnt = cnt;}

	 void setStopedCB(StopCB cb){mcb = cb;}
private:
	void adjustScrolling(); //调整到合适粒度
	void newDeaccelerateScrolling(float dt);
private:
	size_t	mnVisibleCnt;	//视觉区域里的元素数量,必须是奇数暂时
	StopCB	mcb;
};

class TuningScrollViewLoader : public ListControlLoader 
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TuningScrollViewLoader, loader);

protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(TuningScrollView);

	//virtual void onHandlePropTypeCheck(cocos2d::CCNode * pNode, cocos2d::CCNode * pParent, const char* pPropertyName, bool pCheck, cocos2d::extension::CCBReader * pCCBReader);
	virtual void onHandlePropTypeInteger(cocos2d::CCNode * pNode, cocos2d::CCNode * pParent, const char* pPropertyName, int pInteger, cocos2d::extension::CCBReader * pCCBReader);
};


#endif // TUNINGSCROLLVIEW_H__
