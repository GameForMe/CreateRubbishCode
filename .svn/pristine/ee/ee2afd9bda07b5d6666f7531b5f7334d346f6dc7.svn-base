/********************************************************************
	created:	2016/05/03
	created:	3:5:2016   14:01
	file base:	xzdd_protocol
	file ext:	h
	author:		willing
	
	purpose:	血战到底 玩法 通信协议
*********************************************************************/
#ifndef XZDD_PROTOCOL
#define XZDD_PROTOCOL

#include "BaseDefine.h"
#include "CmdAdapter.h"

#pragma pack(push, 1)

// 请求进入准备地图 [2016-5-3 by willing]
struct NET_C2S_Xzdd_Request_Enter : public s_net_cmd
{
   DECL_NETCMD(NET_C2S_Xzdd_Request_Enter)
};

// 请求进入血战到底的错误码 [2016-5-3 by willing]
struct NET_S2C_Xzdd_Request_Enter_Rst : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Request_Enter_Rst);
    int dwErrorCode;
};

// 请求进入匹配队列 [2016-5-3 by willing]
struct NET_C2S_Xzdd_Request_Match : public s_net_cmd
{
	DECL_NETCMD(NET_C2S_Xzdd_Request_Match);
	int nOpt;       // 1 请求匹配，0 取消匹配 [2016-5-10 by willing]
};

// 请求匹配的结果 [2016-5-10 by willing]
struct NET_S2C_Xzdd_Request_Match_Ret : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Request_Match_Ret);
	int nOpt;       // 1 请求匹配，0 取消匹配 [2016-5-10 by willing]
	int dwErrorCode;
};

// 向客户端发送个人积分排名 连胜 信息 [2016-5-13 by willing]
struct NET_S2C_Xzdd_Role_Score : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Role_Score);
	DWORD       dwScore;            // 积分 [2016-5-5 by willing]
	DWORD       dwSerialWin;        // 当前连胜 [2016-5-5 by willing]
	DWORD       dwRankings;         // 排名 [2016-5-5 by willing]
};

// 向客户端发送战斗得分 [2016-5-16 by willing]
struct NET_S2C_Xzdd_Battle_Score : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Battle_Score);
	short       nRet;               // 0 失败，1 胜利，2 平均 [2016-5-16 by willing]
	int         nScore;             // 胜败得分 [2016-5-16 by willing]
	DWORD       dwKillScore;        // 杀人积分 [2016-5-16 by willing]
	DWORD       dwSerialWinScore;   // 连胜积分 [2016-5-16 by willing]
	DWORD       dwEndScore;         // 终结敌人得分 [2016-5-16 by willing]
	DWORD       dwSerialWin;        // 当前连胜次数 [2016-5-16 by willing]
};

// 向客户端发送活动的剩余时间 [2016-5-16 by willing]
struct NET_S2C_Xzdd_Odd_Time : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Odd_Time);
	DWORD       dwTotalLen;           // 活动的总长度，秒数 [2016-5-16 by willing]
	DWORD       dwOddSecond;          // 活动剩余的秒数 [2016-5-16 by willing]
	DWORD       dwLimitMatchLen;      // 活动开始后，多少秒内不允许匹配 [2016-5-16 by willing]
	DWORD       dwLimitEndLen;      //  地图关闭倒计时需要的时间 [2016-5-16 by willing]
	DWORD       dwStartHour;          // 开始的小时数 [2016-5-25 by willing]
	DWORD       dwStartMinute;        // 开始的分钟数 [2016-5-25 by willing]
};

// 向客户端发送战斗地图 需要的各种 时间配置 [2016-5-16 by willing]
struct NET_S2C_Xzdd_Battle_Config : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Battle_Config);
	DWORD   dwBattleLen;            // 战斗时间的长度，单位秒 [2016-5-16 by willing]
};

// 客户端获取血战到底 排行榜 [2016-5-17 by willing]
struct NET_C2S_Get_Rank_List : public s_net_cmd
{
	DECL_NETCMD(NET_C2S_Get_Rank_List);
};

struct SXzddRankListItem
{
	DWORD dwRoleID;
	DWORD dwGuildID;
	DWORD dwScore;
	DWORD dwRating;
	DWORD dwMaxSerialWin;
};

// 向客户端返回 血战到底 排行榜 [2016-5-17 by willing]
struct NET_S2C_Xzdd_Rank_List : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Rank_List);
	DWORD       dwIsOpen;               // 活动是否开启 [2016-5-24 by willing]
	DWORD       dwIsOldRanking;         // 1 上期排行榜，0 实时排行榜 [2016-5-17 by willing]
	DWORD       dwSelfScore;            // 个人积分 [2016-5-5 by willing]
	DWORD       dwMaxSerialWin;         // 最大连胜 [2016-5-5 by willing]
	DWORD       dwRankings;             // 当前排名 [2016-5-5 by willing]
	int         nRankItemCount;         // 排行榜 item 的数量 [2016-5-17 by willing]
	SXzddRankListItem RankList[1];      // rank item 数组 [2016-5-17 by willing]
};

//进入战场
struct NET_S2C_XZDD_Broadcast_Role_Enter : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_XZDD_Broadcast_Role_Enter);
	DWORD   dwRoleID;                   // 角色ID [2016-5-18 by willing]
	DWORD   dwMaxHp;
	DWORD   dwHp;                       
	DWORD   dwMaxMp;
	DWORD   dwMp;
	DWORD   dwTeamID;
	DWORD   dwClass;                    // 职业类型 [2016-5-19 by willing]
};

// 广播玩家在战斗地图中死亡和离队 [2016-5-19 by willing]
struct NET_S2C_Xzdd_Broadcast_Role_Event : public s_net_cmd
{
	enum
	{
		XZDD_DIE,                   // 死亡 [2016-5-19 by willing]
		XZDD_LEAVE_TEAM             // 离开队伍 [2016-5-19 by willing]
	};
	DECL_NETCMD(NET_S2C_Xzdd_Broadcast_Role_Event);
	DWORD   dwRoleID;
	DWORD   dwTeamID;
	DWORD   dwEvent;
};

// 血战到底 结束时，向客户端发送 最终的成绩 [2016-5-20 by willing]
struct NET_S2C_Xzdd_Total_Score : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Total_Score);
	DWORD   dwScore;            // 最终得分 [2016-5-20 by willing]
	DWORD   dwMaxSerialWin;     // 最高连胜 [2016-5-20 by willing]
	DWORD   dwRanking;          // 最终排名 [2016-5-20 by willing]
};

// 血战到底 功能开关的状态改变 [2016-5-24 by willing]
struct NET_S2C_Xzdd_Open_State : public s_net_cmd
{
	DECL_NETCMD(NET_S2C_Xzdd_Open_State);
	DWORD dwIsOpen;
};

#pragma pack(pop)
#endif