/**
 *	@file		BFBattlePlayerListUi.h
 *	@author		zhangyajie
 *	@date		2016/05/010
 *	@version	
 *	@brief		血战到底玩家列表UI
 */

#ifndef __BF_BATTLE_PLAYER_LIST_UI__
#define __BF_BATTLE_PLAYER_LIST_UI__
#include "client_common_define.h"
#include "GameEventDefine.h"
using namespace cocos2d;
using namespace cocos2d::extension;

#define BF_MAX_PLAYER_NUM 6


#define BF_VS_FA_HEAD_PNG "rendui_fa"
#define BF_VS_ZHAN_HEAD_PNG "rendui_zhan"
#define BF_VS_DAO_HEAD_PNG "rendui_dao"
struct BFBattleRoleData;
struct BFBattlePlayerItem
{
	CCSprite*			m_pClass;
	CCSprite*			m_pDead;
	LabelFT*			m_pNameft;
	CCProgressTimer*	m_pHpBar;
	CCSprite*			m_pHpBg;

	BFBattlePlayerItem()
	{
		clear();
	}

	void clear()
	{
		m_pClass = NULL;
		m_pDead = NULL;
		m_pNameft = NULL;
		m_pHpBar = NULL;
		m_pHpBg = NULL;
	}
};

class BFBattlePlayerListUi : public cocos2d::CCNode
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	enum e_BFPlayerItemTag
	{
		BFPlayer_TTF_Name = 2,
		BFPlayer_Node_Class,
		BFPlayer_Node_HpBar,
		BFPlayer_Node_Dead,
		BFPlayer_Node_HpBg,
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(BFBattlePlayerListUi,create);

	BFBattlePlayerListUi();
	~BFBattlePlayerListUi();
	virtual void onEnter();
	virtual void onExit();
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

public:
	static BFBattlePlayerListUi* create_item();
	//初始化玩家信息
	void initPlayerInfo();
	void onReceiveRoleName( unsigned int roleid , const std::string& name );
	void pushPlayerInfoToList(BFBattleRoleData pData,int pIndex);
	void on_event_refresh_player_list( bf_refresh_playerlist* evt );
	void on_event_refresh_player_list_hp( bf_refresh_player_att* evt );
	CCProgressTimer* initHProgressBar(CCSprite* sprite);

private:
	CCNode*				m_pPlayerItemNode[BF_MAX_PLAYER_NUM];
	map<int ,int>		m_pFriendIDMap;
	map<int,int>		m_pEmemyIDMap;
	BFBattlePlayerItem	m_arrPlayerItem[BF_MAX_PLAYER_NUM];
};

#endif