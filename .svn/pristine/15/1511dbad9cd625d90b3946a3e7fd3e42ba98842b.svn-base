#ifndef MYSTERYBOXUI_H
#define MYSTERYBOXUI_H


#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "CmdAdapter.h"
#include "GameActionNode.h"
#include "MessageBoxUi.h"
#include "ItemNode.h"
#include "VerticalList.h"
#include "ListItem.h"
#include "BSAnimation.h"
#include "AnimationCache.h"
using namespace cocos2d;
using namespace cocos2d::extension;

#define CONVERT_NUMBER_TO_ANGLE(n) (45.0f * (0.5f + (n)))
#define BAIYIN_BOX 1004047				//白银宝箱id
#define HUANGJIN_BOX 1004048			//黄金宝箱id
#define BAIJIN_BOX 1004049				//白金宝箱id
#define ONEBOXMONEY  100000				
#define FIVEBOXMONEY 500000	

#define ONEBOXYUANBAO 30				
#define FIVEBOXYUANBAO 150		

#define ONEYUANBAOCANBUYMONEY 10000			

//#define BOXANIM_SHAKE_TIMES	2									//宝箱动画打开宝箱前晃动次数

class RewardBoxUiLayer;
class TouchSprite;


class MysteryBoxItem : public ListItem
{
	enum eNodeTag
	{
		NT_PlayerName		= 0 ,
		NT_CommonFont,
		NT_ItemName		
				
	};

	enum eHorizonPos
	{
		HP_Rank				= 48,//-25
		HP_GuildName			= 120,//-25
		HP_LeardName			= 195,
	};

public:
	MysteryBoxItem();
	virtual ~MysteryBoxItem();
	virtual CCSize getContentSize();
	void setData( unsigned int unRoleId, unsigned int ItemId, unsigned int nQuality,bool IsShop = false,int num = 0);
	float getItemHeight();
	void updateRoleName( int id, const std::string& name );
	
private:
	LabelFT *getLabel(eNodeTag tag);
	LabelFT* createLabel(const std::string &text);
	void updateContent();
	void updateShopContent();
private:
	CCSize _contentSize;
	unsigned int m_unRoleId;
};

class MysteryBoxUi : public UiInterface
{
public:
	MysteryBoxUi();
	~MysteryBoxUi();
	virtual CCNode* openUi();
	void getTresureData(s_net_cmd* cmd);		//请求打开宝箱信息
	void UpdateNoticeList();
	void InitFrame();
	void updateRoleName( int id, const std::string& name );
	void SetCurentBoxId(INT64 id);
	void SetCurentBindBoxId(INT64 id);
	INT64 GetCurentBoxId();
	INT64 GetCurentBindBoxId();
	void  SetIsYuanBox(bool bIs);
	bool  GetIsYuanBox();
	void getTresureResult(s_net_cmd* cmd);	
};

class KaiBaoXiangUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum BoxType
	{
		BType_Equip = 1 ,		// 装备宝箱
		BType_Gold = 2			// 金宝箱
	};
	enum MsteryBoxUiTag
	{
		TYPE_MONEY_NOAUTO = 2,
		TYPE_MONEY_AUTO = 3,
		TYPE_YUANBAO_BOX = 4
	};
	enum MsteryBoxAniTag
	{
		MTN7_BaoXiangPt = 6,
		MT_ItemUnderSP = 111,
		MTN_ITEM1 = 130,
		MTN_ITEM2 = 131,
		MTN_ITEM3 = 132,
		MTN_ITEM4 = 133,
		MTN_ITEM5 = 134,
		MTN_ITEMText1 = 135,
		MTN_ITEMText2 = 136,
		MTN_ITEMText3 = 137,
		MTN_ITEMText4 = 138,
		MTN_ITEMText5 = 139,
		MTN_ItemSupporter10 = 200,
		MTN_MysteryBoxId = 1102255,
		MTN_YuanBao_MysteryBoxId = 1102256
	};
	enum MsteryBoxNewMainNodeTag
	{
		MTN_YuanBaoNum = 1,
		MTN_MoneyNum = 2,					
		MTN_BoxNum = 3,
		MTN7_BagNum   = 4,
		MTN7_WillGetNum   = 5,
		MTN7_EffectBox   = 6,
		MTN_ScollNode = 8,
		MTN7_WillGetFont  = 9,
		MTN7_Consume1   = 10,
		MTN_HookFont    = 12,
		MTN_SpriteBox    = 13,
		MTN_OneButton   = 14,
		MTN7_FiveButton  = 15,
		MTN_CheckBox = 16,
		MTN_CloseButton   = 17,
		MTN_RightArrow   = 20,
		MTN_LeftArrow   = 21,
		MTN_ItemNodeScrollNode   = 22,
		MTN7_Consume2  = 50
		
	};
	enum MsteryBoxNode7Tag
	{
		MTN7_GetFont1 = 1,
		MTN7_GetFont2 = 2,					
		MTN7_GetFont3 = 3,
		MTN7_GetFont4 = 4,
		MTN7_GetFont5 = 5,
		MTN7_GetStuff1 = 11,
		MTN7_GetStuff2 = 22,
		MTN7_GetStuff3 = 33,
		MTN7_GetStuff4 = 44,
		MTN7_GetStuff5 = 55,
		MTN7_Item1Tag = 60,
		MTN7_Item2Tag = 61,
		MTN7_Item3Tag = 62,
		MTN7_Item4Tag = 63,
		MTN7_Item5Tag = 64
	};

public:
	struct tagTreasure 
	{
		unsigned int dwItemID; //物品ID
		int n16Count;			//物品数量
		int nQuality;
		tagTreasure()
			: dwItemID(0)
			, n16Count(0)
			,nQuality(0)
		{

		}
	};
	KaiBaoXiangUiLayer();
	~KaiBaoXiangUiLayer();

	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(KaiBaoXiangUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject* pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject* pTarget, const char* pSelectorName);

	void onNodeLoaded(cocos2d::CCNode* pNode, cocos2d::extension::CCNodeLoader* pNodeLoader);
	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	void setOpenResult(s_net_cmd* cmd);						
	void setTreasureOddNum();								
	float GetGroundHight(){return _content->getContentSize().height;};
	void  SetCurBoxId(INT64 nId){m_Box64Id = nId;};
	INT64 GetCurBoxId(){return m_Box64Id;}
	void  SetIsYuanBox(bool bIs);
	bool  GetIsYuanBox(){return IsYuanBox;}
	void upDataList();
	void updateRoleName( int id, const std::string& name );
	void InitFrame();
	void SetCurentBindBoxId(INT64 id){m_BindBox64Id = id;};
	INT64 GetCurentBindBoxId(){return m_BindBox64Id;}
private:
	//new
	void onAutoBuyMoney(CheckButton *checkBtn, bool check);

	
	
	void SendFiveBoxMsg(unsigned char silver,INT64 Box64Id);
	
	void SendOneBoxMsg(unsigned char silver,INT64 Box64Id);

	void onBuySilverPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onBuyGoldPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void TipOK();
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void showErrorMessage(unsigned int errorNum);		//显示开宝箱失败内容
	void setItemPos(unsigned char itemCount,int type);			//显示宝箱物品
	void runBoxAni();//播放宝箱动画
	void UpdateRunAnimate(float dt);
	void NeedWaitMsgRunAnimate(float dt);
	void runMysteryBox();
	void setFiveItemCalback(float dt);
	void setFiveItemCalbackNext(float dt);
	void setBoxVisibleCalback(CCNode *node);
	void setOneItemCalback(float dt);//抽取十个物品激活按钮用
	void setTenItemName(CCNode* mapItem, int labelTag,int nQuality = 0);	//设置十连抽物品名称
	void setItemColumeName( CCNode* mapItem, int labelTag ,int eQuality);	//设置十连抽物品名称
	void IsYuanBaoInit();
	void LoadEffectBox();
	void setItemNameLabelVisible(bool canSee,bool IsFiveBox,bool IsTouch = false);			//设置十连抽名称label是否可见
	void initItemNodeScrollview();
	void updateScrollview(float dt);
	int getTableIndexByBoxType(BoxType Type);
private:

	CCNode* _itemSupportNode10;				//10个奖励物品父类
	CCNode* _currentItemNode;				//当前的操作板
	CCArray* _showItemAry;					//存放需要显示的奖品
	std::vector<tagTreasure> _BoxItemMap; //by zhang 存放宝箱物品ID和数量
	std::map<CCNode*, CCPoint> _itemPosMap;				//存放每个物品对应的位置
	std::map<CCNode*, std::string> _itemNameMap;		//存放十连抽每个物品的名字

	CCSprite * frame;
	LabelFT *m_YuanBaoNum;
	LabelFT *m_MoneyNum;
	LabelFT *m_BoxNum;
	LabelFT *m_GetFont1;
	LabelFT *m_GetFont2;
	LabelFT *m_GetFont3;
	LabelFT *m_GetFont4;
	LabelFT *m_GetFont5;
	LabelFT *m_GetStuff1;
	LabelFT *m_GetStuff2;
	LabelFT *m_GetStuff3;
	LabelFT *m_GetStuff4;
	LabelFT *m_GetStuff5;
	
	CCSprite*m_HookFont;

	LabelFT *m_BagNum;

	LabelFT *m_Consume1;
	LabelFT *m_Consume2;

	LabelFT *m_WillGetNum;
	LabelFT *m_WillGetFont;

	LabelFT* m_BoxNameText1;
	LabelFT* m_BoxNameText2;
	LabelFT* m_BoxNameText3;
	LabelFT* m_BoxNameText4;
	LabelFT* m_BoxNameText5;
	CCSprite* m_BoxSprite;
	CheckButton *checkAutoBuyMoney;
	CCNode *_content;
	bool m_AutoBuyMoney;
	VerticalList<MysteryBoxItem>*_verticalList;
	CCScrollView *_scrollView;
	CCNode* button1;
	CCNode* button2 ;
	CCNode* button3;
	CCNode* button4;
	INT64  m_Box64Id;
	CCSprite* m_effectBox;
	bool   IsFiveBox;
	int    FiveBoxNum;
	bool   IsYuanBox;
	bool   IsAnimate;
	bool   IsRuningAni;
	bool   bNeedRunAni;
	unsigned int dwDiff;
	 CCSprite *m_sprite;
	 bool bCanRun;
	 bool nCanClick;
	 CCSequence *m_action;
	AnimationCache::AnimateList m_anims;
	INT64 m_BindBox64Id;

	CCNode *_itemNodeContent;
	CCScrollView *_itemNodeScrollView;
	CCNode *_itemNodeScrollViewContainer;
	bool bTouchMoved;
};
class KaiBaoXiangUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(KaiBaoXiangUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(KaiBaoXiangUiLayer);
};
#endif //MYSTERYBOXUI_H