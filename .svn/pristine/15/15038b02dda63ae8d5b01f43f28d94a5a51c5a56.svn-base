#ifndef	MARTAILOBTAINUI_H
#define  MARTAILOBTIANUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "DropDragDelegate.h"
#include "ItemNode.h"
#include "UiInterface.h"
#include "UiManager.h"
#include "Signals.h"
#include "ListItem.h"
#include "VerticalList.h"
#include "AnimationCache.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class ItemNode;
class f_equipment;
class BSAnimation;
class TouchSprite;

class InstructList : public ListItem
{
	enum eNonticTextTag  { NTT_Text = 0};
public:
	InstructList();
	~InstructList();
	virtual CCSize getContentSize();
	void setData(const std::string &text);
private:
	CCLabelTTF *getLabel(eNonticTextTag tag);
	CCLabelTTF* createLabel(const std::string &text);
	void updateContent();
private:
	CCSize _contentSize;
};
class MartialObtainUiLayer;
class MartialObtainUi : public UiInterface
{
	friend class MartialObtainUiLayer;
public:
	MartialObtainUi();
	~MartialObtainUi();
	virtual CCNode* openUi();
	MartialObtainUiLayer *getUiLayer();
	void setInstructFrameShow(bool show);
	void updateData();
	void onServerResult(bool success);

	//new player guild
	CCRect getCloseBtnPos();
	CCRect getCloseBtn2Pos();
	CCRect getBtnPos(int tag);
	
};

class MartialObtainUiLayer
	: public CCLayer
	,public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class MartialObtainUi;

public:
	enum eMatialObtainUiTag
	{
		MOT_Frame = 0,
		MOT_ItemBegin = 0,
		MOT_ItemEnd = MOT_ItemBegin + 10,
		MOT_ItemNum = 10,
		MOT_NodeFrame = 10,
		MOT_MagicNode = 11,
		MOT_MagicSprite = 12,
		MOT_ItemSpecial = 15,

		MOT_GoldBtn = 16,
		MOT_YuanBaoBtn = 17,
		MOT_OneKeyBtn = 18,

		MOT_ItemNodeBegin = 100,	

		MOT_PracticeTab = 31,  //功法修炼页签;
		MOT_SelectSprite = 25  //
	};

public:
	MartialObtainUiLayer();
	~MartialObtainUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(MartialObtainUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtn2Pressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onGoldObtainBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onYuanBaoObtianBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onOneKeyObtainBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	//new player guild
	CCRect getCloseBtnPos();
	CCRect getCloseBtn2Pos();
	CCRect getBtnPos(int tag);
//	void runObtainAnimation(bool show = true);
protected:
	void onServerResult(bool success);
	void setInstructFrameShow(bool show);
	void onMartialPracticeTabClicked(TouchSprite* ,bool);  //点击功法装备页签，切换UI;
	CCSprite *getSelectSprite(CCPoint pos,std::string &iconName);
	void runOneKeyAnimation();
	void runOnlyAnimation();
	void animCallback(CCNode* node);
	void stopOnekeyAnimation();
	void stopOnlyAnimation();
	void updateData();
	void setEnableObtain(bool enable);
/*	void onMartialUpgradTabClicked(TouchSprite*, bool); //点击功法升级页签，切换UI;*/
protected:
	CCSprite* _frame;
	CCSprite* _nodeFrame;
	CCSprite *_instructframe;
	CCNode *_container;
	CCSprite *_onekeyEffect;
	CCSprite *_onlyEffect;
	CCNode *_magicNode;
	bool _enableObtain;
	VerticalList<InstructList> *_verticalList;
	CCScrollView *_scrollView;
	ItemNode *_itemNode[MOT_ItemNum]; //一键获取创建新node;
	ItemNode *_itemSpecial;  //金币、元宝获取创建新node;
	CCPoint _itemPos[MOT_ItemNum];
	CCPoint _itemSpecialPos;
};

class MatialObtainUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(MatialObtainUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(MartialObtainUiLayer);
};

#endif //MARTAILOBTIANUI_H