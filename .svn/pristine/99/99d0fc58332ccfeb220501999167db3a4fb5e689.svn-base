#ifndef BEPKREMINDEFFECT_H
#define BEPKREMINDEFFECT_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class BePKRemindEffect : public CCLayer
{
public:
	CREATE_FUNC(BePKRemindEffect);
	bool init();
	virtual void onExit();

protected:

	std::set<std::string> _loadSpriteSheet;
};

class BePKRemindEffectLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(BePKRemindEffectLayer,create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
};

class BePKRemindEffectLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(BePKRemindEffectLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(BePKRemindEffectLayer);
};


#endif //BEPKREMINDEFFECT_H