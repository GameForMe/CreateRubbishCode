#ifndef __WORLD_LEVEL_MGR__
#define __WORLD_LEVEL_MGR__

#include "GameEventDefine.h"
#include "client_common_define.h"

enum eWorldLevelAddedType
{
	E_ADDED_EXP_NULL = -1,
	E_ADDED_MONSTER_EXP_PER,
	E_ADDED_STATUE_EXP_PER,
	E_ADDED_BIQI_EXP_PER,
	E_ADDED_GUAJI_EXP_PER,
	E_ADDED_QUEST_EXP_PER,
};

struct WorldLevelAddData
{
	unsigned int m_nId;
	int m_fMonsterExpPercent;//打怪加成
	int m_fStatueExpPercent;//雕像膜拜经验加成
	int m_fBiQiExpPercent;//比奇任务加成
	int m_fGuaJiExpPercent;//挂机经验加成
	int m_fQuestExpPercent;//其他任务加成
	WorldLevelAddData()
	{
		m_nId = 0;
		m_fMonsterExpPercent = 0;//打怪加成
		m_fStatueExpPercent = 0;//雕像膜拜经验加
		m_fBiQiExpPercent = 0;//比奇任务加成
		m_fGuaJiExpPercent = 0;//挂机经验加成
		m_fQuestExpPercent = 0;//其他任务加成
	}
};

class WorldLevelMgr
{
private:
	WorldLevelMgr();
public:
	static WorldLevelMgr* getInstance();
	void Init();
	void Destroy();
	bool ifWorldLevelOpen();
	bool ifLvLowThanWorldLv();
	unsigned int getCurrentWorldLv();
	int getWorldLevelAddedExpPercentByType(eWorldLevelAddedType ptype);
	WorldLevelAddData getWorldLvAddData();
	void refersh_world_lv(int lv);
	unsigned int on_server_recv_refersh_world_lv(s_net_cmd *cmd);//刷新世界等级
protected:
	int getWorldLvDValue();
	void loadWorldLevelDataByXML();
private:
	unsigned int m_unCurrWorldLv;//与世界等级
	typedef std::map<unsigned int,WorldLevelAddData> WorldLevelDataMap;
	WorldLevelDataMap m_mapAddData;
};

#endif