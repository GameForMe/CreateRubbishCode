#ifndef STORAGEUI_H
#define STORAGEUI_H


#include "BaseDefine.h"
#include "cocos2d.h"
#include "cocos-ext.h"
using namespace cocos2d;
using namespace cocos2d::extension;
#include "DropDragDelegate.h"
#include "UiInterface.h"

#define STORAGE_PAGE_COUNT 5
#define TOPSPACE 113.5
#define LEFTSPACE 55.6
#define HORIZONTALSPACE 67.5
#define VERTICALSPACE 62
#define HORIZONTALCOUNT 5
#define VERTICALCOUNT 4


class TouchSprite;
class ItemNode;

class StorageUi;

class Storage : public UiInterface
{
public:
	virtual CCNode *openUi();
	StorageUi *getUiLayer();
	void updateData();
};

class StorageUi : public DropDragInterface
{
	friend class Storage;

	enum eItemNodeTag
	{
		INT_BEGIN = 1000,
		INT_END = INT_BEGIN + 20
	};

	enum eMenuTag
	{
		MT_USE = 1,
		MT_PUTDOWN
	};

public:
	CREATE_FUNC(StorageUi);
	bool init();
	void updatePackage();
	virtual void onEnter();
	virtual void onExit();
	short getItem(CCTouch &touch, eGetResult &result);
	virtual short getItemBegin(CCTouch &touch, eGetResult &result);
	virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
	virtual EItemConType getConType() {return EICT_RoleWare;}
	virtual bool onClicked(CCTouch &touch);
	virtual bool onDoubleClicked(CCTouch &touch);
	std::set<std::string> getUsedPlistFile() { return _loadSpriteSheet; }
private:
	void onPage1Select(TouchSprite*, bool);
	void onPage2Select(TouchSprite*, bool);
	void onPage3Select(TouchSprite*, bool);
	void onPage4Select(TouchSprite*, bool);
	void onPage5Select(TouchSprite*, bool);

	void setSelectPage(int page);
	int getItemUnderPoint(const CCPoint &pos);
	bool setItemSelect(int index);
	ItemNode *getItemNode(int index);
	CCPoint getIndexPosition(int index);
private:
	TouchSprite *_pageSprite[STORAGE_PAGE_COUNT];
	CCSprite *_pageSpriteH[STORAGE_PAGE_COUNT];
	CCSprite *_frame;
	CCSprite *_selectSprite;
	int _currentPage;
	CCPoint _beginTouch;
	bool _beginWithMovableItem;
	int _selectIndex;
	ItemNode *_movingItem;
	std::set<std::string> _loadSpriteSheet;
	const static int COPY_NODE_TAG = 100;
	const static int MENU_BTN = 101;
	int m_nTmpEquipLevel;						//装备强化等级特效用来保存强化等级
};

class StorageUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StorageUiLayer, create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSortBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
};


#endif //STORAGEUI_H