/**
 *	@file		TeamApplyItem.h
 *	@author		guantiejun
 *	@date		2016/07/04
 *	@version	
 *	@brief		∂”ŒÈ…Í«Î¡–±Ì
 */

#ifndef TEAM_APPLY_ITEM_H__
#define TEAM_APPLY_ITEM_H__

#include "NormalLayer.h"
#include "UiInterface.h"
#include "RoleDefine.h"
#include "WaitRespQueue.h"

class RespItem;

class TeamApplyItem : public cocos2d::CCNode
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TeamApplyItem,create);

	TeamApplyItem();
	~TeamApplyItem();

	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	static TeamApplyItem* create_item(const char* szFile,CCObject*pOwner,UiInterface* holder = NULL);
	void refresh_info(boost::shared_ptr<RespItem> const& item);

private:
	void onRefuse(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onAgree(CCObject * pSender, CCControlEvent pCCControlEvent);

	void set_class(bool is_male, EClassType role_class);

private:
	LabelFT*			m_name;
	LabelFT*			m_level;
	LabelFT*			m_war_point;

	CCSprite*			m_head;
	CCSprite*			m_class;

	DWORD				m_role_id;
};

#endif
