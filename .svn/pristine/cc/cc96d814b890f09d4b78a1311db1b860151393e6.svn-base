#ifndef BUYSETUI_H
#define BUYSETUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "NumKeypad.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class BuySetUiFrame;

class BuySetUi
{
public:
	typedef std::function<void(bool,int/*,int,unsigned int*/)> buy_goods_callback;
	typedef std::function<void(bool,int)> add_item_callback;
public:
	static BuySetUi *getInstance();
	BuySetUi();
	~BuySetUi();
	void open();
	void close();
	bool isOpen();
	void SetXianGouVisiabl(bool IsShow);
	BuySetUiFrame *getFrame();
	void setPrice(int price);
	void setDataId( unsigned int id , unsigned int unQuality = 0);
	void setNum(int num);
	void SetXianGouNum(int num);
	void setMaxCount(int maxCount);
	void setChangeIcon(const char *name);
	CCRect getGuildBtnPos(int tag);
	void setNumKeypadState( bool value);
	void setNumKeyIsOpen( bool value );

	void set_buy_goods_cb(buy_goods_callback cb){_gcb = cb;}
	void set_add_item_cb(add_item_callback cb){_icb = cb;}
	void setGuildBossAdd();

	void invoke(bool ok,int num);
	void invokeAddItem(bool ok,int num);
SIGNALS:
	c_signal<void, bool, int> *_signalBtnPressed;
	buy_goods_callback			_gcb;
	add_item_callback           _icb;
private:
	std::set<std::string> _usedPlistFile;
};

class BuySetUiFrame
	: public CCSprite
	, public NumKeyPadDelegate
	, public CCTouchDelegate
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eNodeTag
	{
		NT_Icon = 0,
		NT_Name = 1,
		NT_Num = 2,
		NT_SumPrice = 3,
		NT_NumNode = 4,
		NT_GoldIcon = 5,
		NT_NumLabel = 8,
		NT_PriceLabel = 9,
		NT_BtnOk = 10,
		NT_ItemNode = 20,
	};
public:
	BuySetUiFrame();
	~BuySetUiFrame();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(BuySetUiFrame, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void SetXianGouVisiabl(bool IsShow);
	void SetXianGouNum(int num);
	virtual void onEnter();
	virtual void onExit();

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onOkBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCancelBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	int getPirce();
	void setPrice(int price);
	void setDataId( unsigned int id , unsigned int unQuality = 0);

	int getNum();
	void setNum(int num);
	//如果手动调用，则最大设置为传入的值，否则最大为数据库中的值
	void setMaxCount(int maxCount);
	void setChangeIcon(const char *name);
	CCRect getGuildBtnPos(int tag);
	void setGuildBossAdd();
public:
	virtual int onAttach();
	virtual void onNumChange(int num);
	virtual void onFinished(int num, int srcNum);
	virtual void onCancel(int num);
	void setNumKeypadState( bool value);
	void setNumKeyIsOpen(bool value){m_NumKeypad = value;}
private:
	int _price;
	int _stackNum;
	unsigned int itemId;
	bool m_NumKeypad;
	LabelFT *m_XianGou;
	LabelFT *m_XianGouNum;
	LabelFT* m_numLabel;
	LabelFT* m_priceLabel;

	bool b_touched;
};

extern void try_to_buy_goods_with_number_panel(unsigned int item_model_id,int price ,int num=1,int currency_type =-1);

#endif //BUYSETUI_H