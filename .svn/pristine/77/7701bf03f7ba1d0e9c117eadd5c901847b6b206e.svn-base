#include "PlayerTitleUi.h"
#include "Attres.h"
#include "CfgReader.h"
#include "AnimationCache.h"
#include "BSAnimate.h"
#include "BaseDefine.h"
#include "GameEventDefine.h"
#include "Player.h"

#define PLAYERTITLE_POSY 115.f

PlayerTitleUi::PlayerTitleUi()
	: _index(0)
{
	_node = CCNode::create();
	_node->retain();
}

PlayerTitleUi::~PlayerTitleUi()
{
	if(_node != NULL)
	{
		_node->release();
		_node = NULL;
	}
}

void PlayerTitleUi::clear()
{
	_node->removeAllChildren();
	_index = 0;
}

void PlayerTitleUi::addTitle( unsigned int titleId )
{
	const tagTitleProto *titleProto = Attres::getInstance()->getTitleProto(titleId);
	if(titleProto != NULL)
	{
		CCSprite *sprite = CCSprite::create();
		if (titleProto->b_eft)
		{
			AnimationCache::AnimateList anims;
			AnimationCache::createDefList(1,anims);
			AnimationCache::getInstance()->getSinEffect(0,titleProto->colorStr,anims);
			BSAnimate* animste = anims[0];
			sprite->runAction(CCRepeatForever::create(animste));
		}
		else
		{
			std::string uiDir = CFGReader::instance()->get_profile_string("Art","UI","");
			std::string mainuiList = uiDir + std::string("ccbResources/rendui.plist");
			CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile(mainuiList.c_str());//vv 2014.9.26 改变图片读取路径
			CCSpriteFrame *spriteFrame = CCSpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName(titleProto->colorStr.c_str());
			CC_ASSERT(spriteFrame != NULL);
			sprite->setDisplayFrame(spriteFrame);
		}
		sprite->setAnchorPoint(ccp(0.5f,0.5f));
		sprite->setPositionY(/*PLAYERTITLE_POSY + */line_spcae * _index);
		_node->addChild(sprite);
		//_node->addChild(sprite);
		_index++;
		//CCSprite *sprite = CCSprite::create();
		//sprite->
		//CCLabelTTF *label = CCLabelTTF::create();
		//label->setFontSize(16);
		//label->setString(titleProto->stName.c_str());
		//_node->addChild(label);
		//label->setPositionY(PLAYERTITLE_POSY + line_spcae * _index);
		//
		//std::ostringstream ostr;
		//ostr << "0x" << titleProto->colorStr;
		//char *endPtr;
		//int color = strtol(ostr.str().c_str(), &endPtr, 16);
		//ccColor3B color3b = ccc3((color >> 16) & 0xff, (color >> 8) & 0xff, color & 0xff);
		//label->setColor(color3b);
	/////	_index ++;
		//label->setTag(_index ++);
	}
}

void PlayerTitleUi::removeTitle( unsigned int titleId )
{
	const tagTitleProto *titleProto = Attres::getInstance()->getTitleProto(titleId);
	if (titleProto != NULL)
	{
		_node->removeChildByTag(titleId);
	}
}
