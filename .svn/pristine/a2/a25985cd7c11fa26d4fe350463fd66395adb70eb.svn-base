#ifndef SIGNINUI_H
#define SIGNINUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "RewardProto.h"
#include "RewardMgr.h"
#include "UiInterface.h"

using namespace cocos2d;
using namespace cocos2d::extension;

//#define AWARD_ITEM_NUM 8
#define DAY_NUM 28
#define DAY_CONTENTSIZE 45
#define MASK_CONTENTSIZE 50
#define NORMAL_SIGN 0
#define	REPAIR_SIGN 1

class SignInUiFrame;
class ItemNode;
class FrameSprite;
class FrameSprite;

class SignInUi : public UiInterface
{
public:
	virtual CCNode *openUi();
	SignInUiFrame *getUiFrame();
// 	void setItemData(short index, unsigned int typeId, int num);
// 	void setSelectItem(short index);
};

class SignInUiFrame
	: public CCSprite
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
	, public CCTouchDelegate
{
	friend class SignInUi;

	enum eNodeTag
	{
		NT_DayBegin = 0,
		NT_DayEnd = 28,
		NT_ItemNum = 31,//33
		NT_Award = 34,
		NT_AwardItem = 33,
		NT_Btn = 50,
		NT_ItemNodeBegin = 100,
		NT_AwardBegin = 200,
	};

public:
	SignInUiFrame();
	~SignInUiFrame();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(SignInUiFrame, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void onSignInBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onDescBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);		 //界面左上角问号事件
	void onOkBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);			 //升级说明面板确定事件
	void runSignInAni();
	void setButtonTouchEnable(bool canTouch);
	void updateAwardShow();
protected:
	void updateDisplay();
	int getItemUnderPoint(const CCPoint &point);
	//bool setItemSelect(int index);
	ItemNode *getItemNode(int i);
	void showSignInIcon(int i);
	void showReciveIcon(bool show);
	bool isAward(int i);
	void ToRepairSign();
	void ToCharge();//充值
	void callbackShowSignIn(CCNode *pSender);
	void setClickEnable();
	void leakConfirm();
	void setAwardReciveState(bool isGet, int nDay);
protected:
	FrameSprite *_descframe;      //说明界面
	CCSprite *_vipsprite;//add by vvv 2014.12.16 双倍精灵
	AwardInfo _awardInfo;
	CCSprite *_frame;
	CCPoint _pos[NT_ItemNum];
	int _curSelect;
	int _curDay;
	unsigned char _byType;
	CCSprite *_selectSprite;
	CCSprite *_signInIcon;
	bool _clickenable;
	CCSprite *_curSelectSprite;
};

#endif //SIGNINUI_H