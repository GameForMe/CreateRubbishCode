#ifndef STALLPROTO_H
#define STALLPROTO_H
#include "BaseDefine.h"
#include "CmdAdapter.h"

#pragma pack(push, 1)

//常量定义
#define Role_Stall_Min_Level		35//玩家摆摊最低等级
//-----------------------------------------------------------------------------
// 摊位商品结构
//-----------------------------------------------------------------------------
struct tagMsgStallGoods
{
	INT64	n64UnitPrice;		// 单价
	unsigned char byIndex;			// 所在格子索引(从0开始)
	unsigned char	byItem;				// 1表示物品，0表示装备
	unsigned char	byData[1];			// 物品或装备数据
};

//-----------------------------------------------------------------------------
// 摆摊者发送的消息
//-----------------------------------------------------------------------------
// 打开摆摊界面
struct NET_SIC_stall_start : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_start)
	unsigned int	dw_safe_code;
};

struct NET_SIS_stall_start : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_start)
	unsigned int dw_error_code;
	unsigned char  byMaxIndex;
	unsigned char  byStallLevel;			// 摊位模型等级
};

// 商品上架
struct NET_SIC_stall_set_goods : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_set_goods)
	INT64	n64_serial;
	INT64	n64UnitPrice;
	unsigned char	byIndex;				// 货架上的索引，从0开始
};

struct NET_SIS_stall_set_goods : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_set_goods)
	unsigned int	dw_error_code;
};

// 商品下架
struct NET_SIC_stall_unset_goods : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_unset_goods)
	unsigned char	byIndex;
};

struct NET_SIS_stall_unset_goods : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_unset_goods)
	unsigned int	dw_error_code;
};

// 设置标题
struct NET_SIC_stall_set_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_set_title)
	wchar_t	szData[1];// 标题
};

struct NET_SIS_stall_set_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_set_title)
	unsigned int	dw_error_code;
};
// 完成摆摊设置，告诉周围玩家
struct NET_SIC_stall_set_finish : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_set_finish)
};

struct NET_SIS_stall_set_finish : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_set_finish)
	unsigned int	dw_error_code;
	unsigned int	dw_role_id;				// 摆摊者ID
	unsigned char	byStallLevel;			// 摊位模型等级
};

// 收摊
struct NET_SIC_stall_close : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_close)
};

struct NET_SIS_stall_close : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_close)
	unsigned int	dw_error_code;
	unsigned int	dwStallRoleID;			// 收摊者ID
};

struct NET_SIS_stall_buy_refresh : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_buy_refresh)
	unsigned int	dwStallRoleID;			// 摆摊者ID
	short			n16Num;					// 更新后摊位上商品个数
	unsigned char	byIndex;				// 摊位上商品的位置索引
};

// 商品上架广播
struct NET_SIS_stall_set_refresh : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_set_refresh)
	unsigned int	dwStallRoleID;			// 摆摊者ID
	unsigned char	byIndex;				// 摊位上商品的位置索引
};

// 商品下架广播
struct NET_SIS_stall_unset_refresh : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_unset_refresh)
	unsigned int	dwStallRoleID;			// 摆摊者ID
	unsigned char	byIndex;
};

struct NET_SIS_stall_buy_message : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_buy_message)
	unsigned int dw_role_id;	//购买者ID
	unsigned int dw_time;	//购买时间
	unsigned int dw_data_id;//购买物品类型
	short		  n16Number;//购买数量
	INT64		  n64_price;//购买单价
};

//-----------------------------------------------------------------------------
// 购买者发送的消息
//-----------------------------------------------------------------------------
struct NET_SIC_stall_get : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_get)
	unsigned int	dwStallRoleID;			// 摆摊者ID
};

struct NET_SIS_stall_get : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_get)
	unsigned int	dw_error_code;
	unsigned int	dwStallRoleID;			// 摆摊者ID
	unsigned char	byNum;					// 商品个数
	unsigned char	byData[1];				// tagMsgStallGoods
};

struct NET_SIC_stall_get_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_get_title)
	int nNumber;
	unsigned int	dwStallRoleID[1];			// 摆摊者ID
};

struct NET_SIS_stall_get_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_get_title)
	unsigned int	dw_error_code;
	unsigned int	dwStallRoleID;			// 摆摊者ID
	wchar_t	szTitle[STALL_MAX_TITLE_NUM];
};

// 购买商品
struct NET_SIC_stall_buy : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_buy)
	INT64	n64_serial;				// 要购买的商品64位ID
	INT64	n64UnitPrice;			// 商品单价(检查商品是否有过更新用)
	unsigned int	dwStallRoleID;			// 摆摊者ID
	short	n16Num;					// 商品个数
	unsigned char	byIndex;				// 所在摊位的格子索引(从0开始)
	unsigned int	dw_safe_code;
};

struct NET_SIS_stall_buy : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_buy)
	unsigned int	dw_error_code;
};

// 获取指定摊位上的商品
struct NET_SIC_stall_get_special : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_stall_get_special)
	unsigned int	dwStallRoleID;			// 摆摊者ID
	unsigned char	byIndex;				// 摊位上商品的位置索引
};

struct NET_SIS_stall_get_special : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_stall_get_special)
	unsigned int	dw_error_code;
	unsigned int	dwStallRoleID;			// 摆摊者ID
	unsigned char	byData[1];				// tagMsgStallGoods
};


#pragma pack(pop)
#endif