#ifndef ONLINEREWARD_H
#define ONLINEREWARD_H

#include "cocos2d.h"
#include "cocos-ext.h"

#include "RewardProto.h"
#include "RewardMgr.h"
#include "UiInterface.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class OnlineUiLayer;
class ItemNode;

struct OnlineInfo
{
	int Id;
	int ItemId;
	int ItemNum;	
	int ItemTime;
};
struct OnlineIconInfo
{
	int Id;
	std::string IconName;
};
class OnlineUiMgr
{
public:
	OnlineUiMgr();
	~OnlineUiMgr();
	static OnlineUiMgr* GetInstance();	
	void openOnlineUi();
	void updateDisplay();
};
class OnLineUi : public UiInterface
{
public:
	virtual CCNode* openUi();
	void close();
	OnlineUiLayer *getUiLayer();
};

class OnlineUiLayer
	: public CCSprite
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
	, public CCTouchDelegate
{
	friend class OnLineUi;
	enum eNodeTag
	{
		NT_ItemBegin = 1,
		NT_ItemEnd = 4,
		NT_ItemNum = 4,

		NT_ITEMNAME_1 = 21,
		NT_ITEMNAME_2 = 22,
		NT_ITEMNAME_3 = 23,
		NT_ITEMNAME_4 = 24,		


		NT_LABLETAG_0 = 0,
		NT_LABLENAME_1 = 11,
		NT_LABLENAME_2 = 12,
		NT_LABLENAME_3 = 13,
		NT_LABLENAME_4 = 14,

		NT_LABLETIME_1 = 35,
		NT_LABLETIME_2 = 36,
		NT_LABLETIME_3 = 37,
		NT_LABLETIME_4 = 38,

		NT_ItemNodeBegin = 100

		//NT_StarEffect = 20,
		//NT_HeartEffect = 21
	};
public:
	OnlineUiLayer();
	virtual ~OnlineUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(OnlineUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual void update(float dt);
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReceiveBtnPressed1(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReceiveBtnPressed2(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReceiveBtnPressed3(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReceiveBtnPressed4(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	//void onReciveBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onReciveBtnPressed(CCObject* pObject);
	void setReceiveBtnState(CCObject *obj,int index);
	OnlineInfo* getRewardByID(int id);
	void updateDisplay();
protected:
	std::vector<OnlineInfo> online_vec;
	std::vector<OnlineIconInfo> onlineIcon_vec;
	LabelFT* itemName1;
	LabelFT* itemName2;
	LabelFT* itemName3;
	LabelFT* itemName4;

	LabelFT* lableName1;
	LabelFT* lableName2;
	LabelFT* lableName3;
	LabelFT* lableName4;

	OnlineInfo _IconInfo;
	void GetIconInfo();
	std::vector<OnlineIconInfo> GetIconName(int iconId);
	void setCurTime(float dt);
	void UpdateCurTime(float dt);
	int _lastTime;
	int _giftID;
	int _bShow;
	int _nodeStep;
	LabelFT *_lbLastTime;
	bool isCurrentID;
	int _currentGiftID;
	int _currentIndex;
	/*ItemNode *getItemNode(int index);
	void setActivityCount(int count);
	void setSelectItem(int index);*/



	CCPoint _itemPos[NT_ItemNum];
};


#endif