#pragma once
#include "Mutex.h"
class c_mem_pool
{
	struct s_mem_node
	{
		s_mem_node* next;
		s_mem_node* prev;
		unsigned int index;
		unsigned int size;
		unsigned int use_time;
		unsigned int mem[1];
	};
private:
	struct
	{
		s_mem_node* first;
		s_mem_node* last;
	} m_pool[16];
	c_mutex m_mutex;
	unsigned int m_maxsz;	
	unsigned int m_malloc;
	unsigned int m_gc_times;
	volatile unsigned int m_currentsz;
public:
	c_mem_pool();
	~c_mem_pool();
public:
	void* alloc(unsigned int bytes_);
	void dealloc(void* mem);
private:
	void _gc(unsigned int expectsz_, unsigned int usetime_);
	unsigned int _size2idx(unsigned int size_, unsigned int& realsz_);
};