#ifndef ROLEATTRUI_H
#define ROLEATTRUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "GameActionNode.h"
#include "GongFa2Tip.h"
using namespace cocos2d;
using namespace  cocos2d::extension;

class TouchSprite;
class RoleAttrUiLayer;
class RoleAttrUi : public UiInterface
{
public:
	RoleAttrUi() {}
	virtual CCNode *openUi();
	virtual void popupUIOnEnd();
	void setPlayerId(unsigned int playerId);
	unsigned int getPlayerId() const;
	void updateAttr();
};

struct WorldLvDesNode{
	CCNode* m_pNodeTitle;
	CCNode* m_pNodeAddValue;
	CCScale9Sprite* m_pBgSprite;
	LabelFT* m_ftWorldLv;
	LabelFT* m_ftWorldLvDes;
	LabelFT* m_ftGetDes;
	LabelFT* m_arrftAddValueDes[5];
	LabelFT* m_arrftAddValue[5];
};

class RoleAttrUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class RoleAttrUi;

	enum eRoleAttrTag
	{
		RAT_BEGIN = 0,
		RAT_NAME,	//名字
		RAT_JINGJIE,	//境界
		RAT_LEVEL,	//等级
		RAT_ZHANDOULI,	//战斗力
		RAT_HP,		//生命
		RAT_EXATTRACK,	//物攻
		RAT_MP,	//魔力
		RAT_INATTRACK,		//魔攻
		RAT_HITRATE,	//命中
		RAT_ARMORATTRACK,		//道攻
		RAT_DODGE,		//闪避
		RAT_EXDEFENSE,		//物防
		RAT_CRIT_RATE,		//暴击
		RAT_INDEFENSE,		//魔防
		RAT_UNCRIT_RATE,	//免爆
		RAT_LUCK,		//幸运
		RAT_PKZHI,	//pk值
		RAT_MEILIZHI,	//魅力值
		RAT_SHENGWANG,	//声望
		RAT_RONGYUDIAN	,	//荣誉点
		RAT_Exp,	//经验
		RAT_NUM,
		RAT_EquipTab = 22,		//装备标签
		RAT_InfoTab = 23,		//信息标签
		RAT_TitleTab = 24,		//称号标签
		RAT_TiLiZhi=31,
		RAT_FightNumSE,		//战斗力特效	32
		RAT_FightNumSP,		//战斗力字体	33
		RAT_FightNumPosLabel,	//CCBI上的坐标，用来取坐标摆放艺术字34
		RAT_GonfFaLevel=50,
		RAT_GongFaButton=51,
		RAT_WroldLevelButton=53,
		RAT_WroldLevelFtLabel=54,
		RAT_WorldLevelTitle = 55,
	};

	enum eRoleAttLabelTag
	{
		RAT_LabelHp = 41,   //体力
		RAT_LabelLucky,     //幸运
		RAT_LabelPK,        //PK值
		RAT_LabelCharm,     //魅力值
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(RoleAttrUiLayer, create);

	RoleAttrUiLayer();
	~RoleAttrUiLayer();

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onchakanjingjieBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void ongengduoBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	void updateAttr();
	void setAttr(eRoleAttrTag attr, int value);
	void setAttr(eRoleAttrTag attr, INT64 cur, INT64 max, const char *sp);
	void setAttr(eRoleAttrTag attr, const char *value);
	void setAttr(eRoleAttrTag attr, const wchar_t *value);

	void setPlayerId(unsigned int playerId);
	unsigned int getPlayerId() const { return _playerId; }
	GameActionNode* getFightSuperEffect();										//获得战斗力特效
	void setTitleAttVisible();

	void showTips(CCNode* labelNode);


	void refershWorldLvAddLabelAndBtn();
	void refershWorldLevelNode();
	void onWorldLevelBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
protected:
	void onEquipTabClicked(TouchSprite*, bool);
	void onTitleTabClicked(TouchSprite*, bool);
	void onInfoTabClicked(TouchSprite*, bool);
private:
	CCSprite *_frame;
	GameActionNode* _fightNumAcNode;									//战斗力特效
	unsigned int _playerId;
	std::set<std::string> _plist;									//保存特效plist名称
	CCScale9Sprite *_tipsBgSprite;
	std::map<eRoleAttrTag,bool>m_AttrRemoveMap;
	CCControlButton *m_gongfaButton; 
	tagOtherGongFa m_otherGongFa;

	CCNode* m_otherPro;
	CCLabelTTF* m_morePro;
	CCLabelTTF* m_resistTitle;
	CCLabelTTF* m_shiMoTitle;
	CCLabelTTF* m_fuShiTitle;
	CCLabelTTF* m_zhenShangTitle;
	CCLabelTTF* m_poDunTitle;
	CCLabelTTF* m_diKangNum;
	CCLabelTTF* m_shiMoNum;
	CCLabelTTF* m_fuShiNum;
	CCLabelTTF* m_zhenShangNum;
	CCLabelTTF* m_poDunNum;

	LabelFT* m_diKangLabel;
	LabelFT* m_shiMoLabel;
	LabelFT* m_fuShiLabel;
	LabelFT* m_zhenShangLabel;
	LabelFT* m_poDunLabel;

	LabelFT* m_pftWorldLvAdd;
	LabelFT* m_worldLevelTitle;
	CCControlButton* m_pBtnWroldLvAddShow;
	CCNode* m_pNodeWorldLevel;
	WorldLvDesNode m_stNodeWroldLvDes;
};

#endif //ROLEATTRUI_H