#ifndef PACKAGEUI_H
#define PACKAGEUI_H

#include "BaseDefine.h"
#include "cocos2d.h"
#include "cocos-ext.h"
#include "ListItem.h"
#include "VerticalList.h"   
using namespace cocos2d;
using namespace cocos2d::extension;
#include "DropDragDelegate.h"
#include "UiInterface.h"

#define PACKAGE_PAGE_COUNT 4
#define TOPSPACE 113.5//106.5   116.5
#define LEFTSPACE 55.6
#define HORIZONTALSPACE 67.5   
#define VERTICALSPACE 62//56.5	
#define HORIZONTALCOUNT 5//列
#define VERTICALCOUNT 4//行

#define PACKAGEUI_INSTRUCT_POX 0

class TouchSprite;
class ItemNode;

class PackageUi;
class OpenPackageUiLayer;

class OpenPackageUi : public UiInterface
{
public:
	static OpenPackageUi *getInstace();
	CCNode* openUi();
	void open();
	bool isOpen();
	void setType(int type);
	int getType();
private:
	std::set<std::string>  _usedPlistFile;
	int _type;
};
class OpenPackageUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	OpenPackageUiLayer():_addNum(1),packNumLabel(NULL),yuanBaoLabel(NULL){}

	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(OpenPackageUiLayer, create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	bool ccTouchBegan( CCTouch *pTouch, CCEvent *pEvent );
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMinBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMaxBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSubBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onAddBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onOkBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	virtual void onEnter();
	virtual void onExit();
private:
	void		update_cost();
	int			get_unlocked()const;
	size_t			get_max()const;
private:
	size_t _addNum;
	LabelFT* packNumLabel;
	LabelFT* yuanBaoLabel;
};

class Package : public UiInterface
{
public:
	virtual CCNode *openUi();
	virtual void closeUI();

	PackageUi *getUiLayer();
	void updateData(int dataindex = -1);
	void updateJinqian();
	void changePackageBtn(bool change);
	CCPoint getItemPos(int index);
	CCRect getItemRect( int index );
	void gotoIndexPage(int index);	//跳到指定的页;
	//new player guide
	CCRect getCloseBtnPos();
	CCPoint getPagepos();
	CCRect getBtnPos(int tag);
	void setBtnShow(bool showBtn);
};

class PackageUi : public DropDragInterface
{
	friend class Package;
public:
	enum eItemNodeTag
	{
		INT_BEGIN = 100,
		INT_END = INT_BEGIN + 20
	};

	enum eMenuTag
	{
		MT_USE = 1,
		MT_PUTDOWN,
		MT_InstructBtn = 16,
		MT_EquipTip,
	};

	PackageUi():_selectItemId(-1)
	{

	}
public:
	CREATE_FUNC(PackageUi);
	bool init();
	void updatePackage(int dataindex = -1);
	void updateJinQian();
	void updateEquipItem(f_item *item);
	void changePackageBtn(bool change);
	virtual void onEnter();
	virtual void onExit();
	short getItem(CCTouch &touch, eGetResult &result);
	virtual short getItemBegin(CCTouch &touch, eGetResult &result);
	virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
	virtual EItemConType getConType() {return EICT_Bag;}
	virtual bool onClicked(CCTouch &touch);
	virtual bool onDoubleClicked(CCTouch &touch);
	std::set<std::string> getUsedPlistFile() { return _loadSpriteSheet; }
	CCPoint getItemPos(short index);
	CCRect getItemRect( short index );
	CCPoint getPagepos();
	//new player guide
	CCRect getCloseBtnPos();
	CCRect getBtnPos(int tag);
	//virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	//virtual void ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
	//virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	int GetSelectIndex()
	{
		return _selectIndex;
	}
	int GetSelectPage()
	{
		return _currentPage;
	}
	void SetSelectIndex( int nIdx )
	{
		_selectIndex = nIdx;
	}
	void updateSaleEffect(bool isShow = true);
	void setBtnShow(bool show);
	void showConfirmUseUi();
	void onConfirmUseBtnPressed();//确认使用按钮
	void onCancelUseBtnPressed();//取消使用按钮);
private:
	void onPage1Select(TouchSprite*, bool);
	void onPage2Select(TouchSprite*, bool);
	void onPage3Select(TouchSprite*, bool);
	void onPage4Select(TouchSprite*, bool);
	void setSelectPage(int page);
	int getItemUnderPoint(const CCPoint &pos);
	bool setItemSelect(int index);
	ItemNode *getItemNode(int index);
	void setYuanBao(INT64 num);
	void setBangDingYuanBao(INT64 num);
	void setCoin(INT64 num);

private:
	TouchSprite *_pageSprite[PACKAGE_PAGE_COUNT];
	CCSprite *_pageSpriteH[PACKAGE_PAGE_COUNT];
	CCSprite *_frame;
	CCSprite *_selectSprite;
	LabelFT *_yuanBao;
	LabelFT *_bangDingYuanBao;
	LabelFT *_coin;
	CCControlButton* _sortbtn;
	CCControlButton* _stallbtn;
	CCControlButton* _instructbtn;
	CCControlButton* _syzthenbtn;
	int _currentPage;
	CCPoint _beginTouch;
	bool _beginWithMovableItem;
	int _selectIndex;
	INT64 _selectItemId;
	//ItemNode *_movingItem;
	std::set<std::string> _loadSpriteSheet;
	int m_nTmpEquipLevel;									//装备强化等级特效用来保存强化等级
	const static int COPY_NODE_TAG = 100;
	const static int MENU_BTN = 101;
};

class PackageUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(PackageUiLayer, create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onCloseBtn2Pressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSortBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onShopBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onStallBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onOnekeySyzBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onInstructBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onHeChengBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onStorageBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onConfirmBuyBtnPressed();

};

class PackageUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(PackageUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(PackageUiLayer);
};


#endif //PACKAGEUI_H