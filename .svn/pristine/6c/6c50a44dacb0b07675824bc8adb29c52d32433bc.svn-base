#ifndef TOUCHLABEL_H
#define TOUCHLABEL_H

#include "cocos2d.h"
#include "cocos-ext.h"
using namespace cocos2d;
using namespace cocos2d::extension;

#include "Signals.h"

class TouchLabel : public CCLabelTTF, public CCTouchDelegate
{
	friend class TouchLabelLoader;
public:
	TouchLabel();
	~TouchLabel();
	CREATE_FUNC(TouchLabel);
	bool init();
	void setEmitWhenNotTouched(bool v) { _signalWhenNotTouched = v; }
	virtual void onEnter();
	virtual void onExit();
	virtual void ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
SIGNALS:
	c_signal<void, TouchLabel*, bool> signalTouched;
protected:
	bool _signalWhenNotTouched;
	int _touchPriority;
	bool _isMoved;
	CCPoint _touchPt;
};

class TouchLabelLoader : public cocos2d::extension::CCLabelTTFLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TouchLabelLoader, loader);
	virtual void onHandlePropTypeInteger(CCNode * pNode, CCNode * pParent, const char* pPropertyName, int pInteger, CCBReader * pCCBReader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(TouchLabel);
};


#endif //TOUCHLABEL_H