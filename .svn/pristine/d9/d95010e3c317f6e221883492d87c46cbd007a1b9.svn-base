#pragma once
#include <vector>
#include <string>
#include "RankProto.h"
#include "BaseDefine.h"

#define FIRSTLEVLETITLE 0 //天下无双
#define SECONDLEVLETITLE 37 //王者风范
#define THIRDLEVLETITLE 38 //傲视群雄

#define FIRSTZHANSHI 3
#define FIRSTFASHI 4
#define FIRSTDAOSHI 5

#define OTHERZHANSHI 8
#define OTHERFASHI 9
#define OTHERDAOSHI 10

#define FIRSTNAN 7
#define FIRSTNV 6

#define MASTERRANK1 19  //一代宗师
#define MASTERRANK2 20	//举世皆知
#define MASTERRANK3 21	//闻名遐迩
#define MASTERRANK4 22	//德高望重

#define	REACHRANK_ZHAN	25	//富豪榜第二 战士 真龙天子
#define	REACHRANK_FA	26	//富豪榜第二 法师
#define	REACHRANK_DAO	27	//富豪榜第二 道士

#define	XUANHUANG_ZHAN	39	//富豪榜第一 战士 炎帝玄黄
#define	XUANHUANG_FA	40	//富豪榜第一 法师
#define	XUANHUANG_DAO	41	//富豪榜第一 道士

#define	BAWANG_ZHAN	42	//富豪榜第三 战士 西楚霸王
#define	BAWANG_FA	43	//富豪榜第三 法师
#define	BAWANG_DAO	44	//富豪榜第三 道士

#define RANK_SEND_TIME_LIMIT 10

struct LevelTopten
{
	std::string name;
	EClassType pro;
	int level;
	unsigned int id;
	int ntitle_id;
};
struct GuildTopten
{

	std::string guildName;
	std::string leaderName;
	int lvl;
	int nProsperity;	
	unsigned int gid;
	unsigned int roleid;
	int	nAttackSBK;		//帮会攻占沙城夺冠次数
	GuildTopten()
		: guildName("")
	{

	}
};
struct sBeauTopten
{
	std::string name;
	unsigned int id;
	EClassType pro;
	int sex;
	unsigned int meili;
	int ntitle;//称号id
};
struct sBattleTopten
{
	std::string name;
	unsigned int id;
	EClassType pro;
	int battleval;
	int justice;
	int ntitle_id;//称号id
};
struct sMasterTopten
{
	std::string name;
	unsigned int id;
	int n_Graduates;//出师人数
	int			n_level_;
	EClassType		e_class;
	unsigned char	by_Sex;
	unsigned char	by_online;
	int				ntitle_id;//称号id
};
struct sReachTopten
{
	std::string name;
	unsigned int dw_role_id;//其实是account_id
	unsigned int dw_role_id_true;//真正的role_id
	int			n_total_reach;
	int			n_level_;
	EClassType		e_class;
	unsigned char	by_Sex;
	int				ntitle_id;//称号id
};
enum e_topten_type
{
	TT_LEVEL = 0, 
	TT_BATTLE , 
	TT_BEAUTIFUL , 
	TT_GUILD,
	TT_MASTER,
	TT_REACH,
	TT_All
};

class RankMgr
{
private:
	std::vector<LevelTopten> _lvlTopten;//!等级榜
	std::vector<GuildTopten> _guildTopten;//!帮会帮
	std::vector<sBeauTopten> _beauTopten;//!魅力榜
	std::vector<sBattleTopten> _battleTopten;//!战力榜
	std::vector<sMasterTopten> _masterTopten;//!师徒榜
	std::vector<sReachTopten> _reachTopten;//充值榜

	std::map<unsigned int, int> _lvlRoleNameMap;
	std::map<unsigned int, int> _guildRoleNameMap;
	std::map<unsigned int, int> _beauRoleNameMap;
	std::map<unsigned int, int> _battleRoleNameMap;
	std::map<unsigned int, int> _guildGuildNameMap;
	std::map<unsigned int, int> _masterNameMap;
	std::map<unsigned int, int> _reachNameMap;
	bool _init[TT_All];

	DWORD	m_levelTime;	//等级排行榜刷新的时间
	DWORD	m_battleTime;	//战力排行榜刷新的时间
	DWORD	m_beautifulTime;//行会排行榜刷新的时间
	DWORD	m_guildTime;	//魅力排行榜刷新的时间
	DWORD	m_masterTime;	//师徒排行榜刷新的时间
	DWORD	m_reachTime;	//富豪排行榜刷新的时间
public:
	RankMgr();
	~RankMgr();
	void init();
	void Destroy();
public:
	static RankMgr* getInstance();
	void sendLvlTopten(bool isInit = false);//!发送获取等级榜信息
	void sendBattleTopten(bool isInit = false);//!发送战力榜信息
	void sendBeautifulTopten(bool isInit = false);//!发送魅力榜
	void sendGuildTopten(bool isInit = false);//!发送帮会帮
	void sendMasterTopten(bool isInit = false);//!发送师徒榜
	void sendReachTopten(bool isInit = false);//发送充值榜
	const std::vector<LevelTopten> &getLevelTopten() const { return _lvlTopten; }
	const std::vector<GuildTopten> &getGuildTopten() const { return _guildTopten; }
	const std::vector<sBeauTopten> &getBeauTopten() const { return _beauTopten; }
	const std::vector<sBattleTopten> &getBattleTopten() const { return _battleTopten; }
	const std::vector<sMasterTopten> &getMasterTopten() const { return _masterTopten;}
	const std::vector<sReachTopten> &getReachTopten() const{ return _reachTopten;}
	bool isInit(e_topten_type type) const { return  _init[type];}
	int  getLocalTotalRechargeRank();//获取本地玩家在富豪榜上的排名
private:
	unsigned int onLvlTopten(s_net_cmd* cmd);
	unsigned int onGuildTopten(s_net_cmd* cmd);
	unsigned int onBeautifulTopten(s_net_cmd* cmd);
	unsigned int onBattleTopten(s_net_cmd* cmd);
	unsigned int onMasterTopten(s_net_cmd* cmd);
	unsigned int onReachTopten(s_net_cmd* cmd);
	unsigned int onMasterToptenGraduates(s_net_cmd* cmd);
	void onGetMemberName(unsigned int id , const std::string& name);
	void onGetGuildName(unsigned int id , const std::string& name);
	void assignName(const std::string& name , unsigned int id);
};