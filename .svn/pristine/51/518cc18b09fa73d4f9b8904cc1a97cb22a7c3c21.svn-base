#ifndef STRENGTHENUI_H
#define STRENGTHENUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "DropDragDelegate.h"
#include "ItemNode.h"
#include "UiInterface.h"
#include "Signals.h"
//#include "AnimationCache.h"
#include "CmdAdapter.h"
#include "GameActionNode.h"
using namespace cocos2d;
using namespace cocos2d::extension;

#define STRENGTHENUI_LINE_SPACE 25
#define STRENGTHENUI_LINE_SPACE_2 150

class StrengthenUiLayer;
class ItemNode;
class f_equipment;
class BSAnimation;
class TouchSprite;
class FrameSprite;
class CheckButton;
struct EquipReinforcementPro
{
	int id;//装备的强化等级
	unsigned int StuffId;//所需强化物品的id
	int Num;//所需强化物品的数量
	int LvUpPro;//升级的成功率
	std::string equipName;//装备名称
	std::string equipProfession;//装备的职业
	int equipLevel;//装备的等级
	std::string equipItemName;//强化的物品名字
	std::string equipPos;//装备的部位
	int equipPosIndex;//装备部位的编号
	int equipDurability;//上限耐久
};

class StrengthenUi : public UiInterface
{
public:
	enum eButtonTag
	{
		BT_AutoPut,
		BT_Conlidate,
	};
public:
	virtual CCNode *openUi();
	void onSuccess(/*INT64 equipID*/);				//注释掉原参数,主要用来播特效	【Ji：】2014.11.6
	void onFailed(/*INT64 equipId*/);
	void setPermission(bool canContinue);
	StrengthenUiLayer *getUiLayer() const;

	//new player guide
	CCRect getBtnPos(int tag);
	CCRect getCloseBtnPos();
};

class StrengthenUiLayer 
	//: public DropDragInterface
	:public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
	//, public CCTouchDelegate
{
	friend class StrengthenUi;

public:
	enum eStrengthenUiTag
	{
		STUT_PosBegin = 0,
		STUT_Equip = 0,
		STUT_Mat1,
		STUT_Mat2,
		STUT_Mat3,
		STUT_Mat4,
		STUT_PosEnd = 5,
		STUT_Container = 5,

		STUT_IndentifyTab, // 鉴定页签tag
		STUT_InlayTab,	   // 镶嵌页签tag

		STUT_StrengBtn = 8,
		STUT_AutoPutBtn = 9,
		STUT_EQUIPHIGHLEVEL = 16,
		STUT_ItemBegin = 20
	};

	enum eNewStrengthenUiTag
	{
		UI_AUTOBUY = 1,
		UI_AUTOBUYRECT = 2,
		UI_COIN = 3,
		UI_NEXTLEVEL = 4,//下一等级
		UI_SUCCESSRATE = 5,
		UI_EQUIPSTRENGTHENITEM = 6,
		UI_EQUIPNAME = 10,
		UI_JOB = 11,
		UI_LEVEL = 12,
		UI_EQUIPPLACE = 13,
		UI_DURABLE = 14,
		UI_ATTRFRAME = 20,
		UI_CUREQUIP = 30,
		UI_CUREQUIPITEM = 31,
		UI_CUREQUIPHEAD = 32,		//add by vvv 2014.10.28
		UI_WENDING_CHECK = 40,
		UI_WENDING_ICON = 41,
		UI_WENDING_LAB = 42,
		ui_GOODNAME=44,
		UI_CURLEVEL = 108,			//add by vvv 2014.10.31
		UI_STRENGTHENBTN = 101,		//强化按钮
		UI_WENGUOSHILABEL = 115,	//稳固石文字
		UI_AUTOBUYLABEL = 118,		//自动购买文字
	};

	enum eConsolidStuffId
	{
		CSI_MiYin = 1400015,
		CSI_HuoShi = 1400016,
		CSI_XuanTie = 1400017,
		CSI_TianJieXuanTie = 1400018,
		CSI_QiangHuaShenShi = 1400085,
		CSI_QiangHua_3 = 1400150,
		CSI_QiangHua_5 = 1400151,
		CSI_QiangHua_8 = 1400152,
	};

	enum eEquipAttrTag
	{
		EAT_NextLevel = 0,	//下一级
		EAT_SucceeRate,	//成功率
		EAT_Hp,	//生命
		EAT_HpUp,	//生命提升
		EAT_Mp,	//魔力
		EAT_MpUp,	
		EAT_WAttrack,	//物攻 
		EAT_WAttrackUp,
		EAT_MAttrack, //魔攻
		EAT_MAttrackUp,
		EAT_TAttrack,//道攻
		EAT_TAttrackUp,
		EAT_WDeffence,//物防
		EAT_WDeffenceUp,
		EAT_MDeffence,//魔防
		EAT_MDeffenceUp,
		EAT_HitRate,//命中
		EAT_HitRateUp,
		EAT_Dodge,//闪避
		EAT_DodgeUp,
		EAT_CritRate,//暴击
		EAT_CritRateUp,
		EAT_UnCritRate,//免爆
		EAT_UnCritRateUp,
		EAT_UpSign
	};

	enum eStrengthenAnim
	{
		SA_Disappear = 0,
		SA_Failed,
		SA_Success
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StrengthenUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	virtual void onEnter();
	virtual void onExit();

	//virtual short getItemBegin(CCTouch &touch, eGetResult &result);
	//virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
	//virtual bool onClicked(CCTouch &touch);
	//virtual bool onDoubleClicked(CCTouch &touch) { return false; }
	virtual EItemConType getConType();

	int getItemUnderPoint(const CCPoint &point);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onAutoPutBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onOneKeyBuyBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onStrengThenBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSubbtn(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onAddbtn(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	void onStrongDescPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onCloseDescBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);		 //说明面板关闭事件
	//void onKnowBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);			 //说明面板确定事件

	//new player guide
	CCRect getBtnPos(int tag);
	CCRect getCloseBtnPos();

	void setIsSuccess(bool flag){_isSuccess = flag;};
	bool getIsSuccess(){return _isSuccess;};
	void setPermition(bool canContinue);
	void onSECalback(float dt);

	void update_wending_stone();
	void updateEquipStrengDate();
	void updateEquipBaseDate();//更新装备基础数据到控件
	void setStrengthenData();
	void setEquipDataInTable();//设置装备数据表里的信息
protected:
	ItemNode *getItemNode(eStrengthenUiTag tag);
	void setContainerData(f_equipment *equipInfo);
	unsigned int getStuffIdByEquipLevel(int equipLevel);
	int calculateProbability();
	void addStuff(unsigned int stuffId, eStrengthenUiTag pos);
	void autoAddStuff();
	int getStuffNum();
	void clearAllStuff();
	eStrengthenUiTag getValidStuffPos(eStrengthenUiTag pos);
	void updateContainerData();
	void addBaseAttrLabel(int n, const char *attrName, int v1, int v2 = -1, const char *split = "-");
// 	void runSuccessAnimation();						//老特效，全注释掉	【J】
// 	void runFailedAnimation();
// 	void runDisapperAnimation();
//	void loadAnimation();
//	void runAnimation(eStrengthenUiTag pos, eStrengthenAnim anim);
//	void animationCallback(CCNode *node);
	void setEnableStrengthen(bool enable);
	void onSetAutoBuy(TouchSprite*, bool);//设置自动购买
/*
 	void onIndentifyTabClicked(TouchSprite*, bool);    //点击鉴定页签切换到鉴定UI
 	void onInlayTabClicked(TouchSprite*, bool);		//点击镶嵌页签切换到镶嵌UI*/
	void strengthItemLackInfo(INT64 equipId);	//强化材料不足时，应提示用户在商城购买适当的材料 gx add 
	void OpenMall();//统一响应打开商城购买
	void sendStrengthenEquipMsg(float dt);//发送装备强化信息
	void setEquipthenItem();
	GameActionNode* getSuccessAcNode();					//创建强化成功特效
	GameActionNode* getFailedAcNode();					//创建强化失败特效
	void playSuccessSE();							//播放强化成功特效
	void playFailedSE();							//播放强化失败特效
	void setButtonFunc(bool isUseble);				//设置强化按钮可点击状态
	void updateAllHideControl();					//当强化等级达到16级时，隐藏所有不需要显示的Node
protected:
	CCSprite *bgsprite;
	//FrameSprite *_descframe;     //升级说明界面
	EquipReinforcementPro *_equipPro;
	bool _isSuccess;
	bool _isAutoBuy;
	int _strengTimes;
	int _stringCurTimes;
	LabelFT* _coin;//所需金币
	LabelFT* _strengTimesLabel;
	LabelFT* _equipName;//装备名称
	LabelFT* _job;//职业
	LabelFT* _level;//等级
	LabelFT* _equipPlace;//部位
	LabelFT* _durable;//耐久
	LabelFT* _nextLevel;//下一等级
	LabelFT* _curLevel;//当前等级
	LabelFT* _successRate;//成功率
	LabelFT* _equipStrengthenItem;//装备强化需要的物品
	LabelFT* _goodsName;
	TouchSprite* _autoBuyRect;
	CCSprite* _autoBuy;
	CCSprite* _frame;
	CCSprite* _curEquip;//当前装备图
	CCSprite* _curEquipitem;//当前升级需要的物品
	CCSprite* _curEquipHead;//当前装备图标 //add by vvv 2014.10.28
	CCSprite* _iconSp;//玄铁
	CCSprite* _autoBuyTip;//自动使用提示
	CCSprite* _iconTip;//使用玄铁提示
	CCNode* _container;
	CCPoint _pos[STUT_PosEnd];
	INT64 _equipId;
	int _equipLevel;
	unsigned int _stuffId;
	int _stuffNum;
	std::map<eEquipAttrTag, std::string> _strMap;
	std::map<ERoleAttribute, std::string> _baseAttrNameStr;
	//AnimationCache::AnimateList _anims;
//	AnimationCache::AnimateList _anims2;
	bool _enableStrengthen;
	bool m_bIsPermissible;							//判断强化是否可以继续
	//特效增加	【J】
	CCControlButton* _strengthenBtn;				//强化按钮
	GameActionNode* _successAcNode;						//强化成功特效
	GameActionNode* _failedAcNode;						//强化失败特效
	std::set<std::string> _plist;					//保存plist资源名称
};

class StrengthenUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(StrengthenUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(StrengthenUiLayer);
};


#endif //STRENGTHENUI_H