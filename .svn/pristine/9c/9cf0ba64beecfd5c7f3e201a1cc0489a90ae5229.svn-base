#include "ChongZhiActivityMgr.h"

//////////////////////////////////////////////////////////////////////////

ChongZhiActivityMgr::ChongZhiActivityMgr()
{
	fisrtRechargeState = 0;
	m_second_recharge_state = 0;
	_isOpenXiaomi	   = false;
	_openLevel		   = 0;
	_openMoney		   = 0;
	_openPic		   = 0;
	_openPicStr        = "";
	_openQQ			   = "";
}

ChongZhiActivityMgr::~ChongZhiActivityMgr()
{

}

ChongZhiActivityMgr * ChongZhiActivityMgr::getInstance()
{
	static ChongZhiActivityMgr instance;
	return &instance;
}

bool ChongZhiActivityMgr::deleteChongzhiActivitySignList( eWroldChildTag tag )
{
	int size = chongzhiActivitySignList.size();
	eWroldChildTag tempTag;
	for (int i = 0;i < size;++i)
	{
		if (chongzhiActivitySignList.front() == tag)
		{
			chongzhiActivitySignList.pop_front();
			return true;
		}
		else
		{
			tempTag = chongzhiActivitySignList.front();
			chongzhiActivitySignList.pop_front();
			chongzhiActivitySignList.push_back(tempTag);
		}
	}
	return false;
}

void ChongZhiActivityMgr::setChongzhiActivitySignList( eWroldChildTag tag )
{
	int size = chongzhiActivitySignList.size();
	eWroldChildTag tempTag;
	for (int i = 0;i < size;++i)
	{
		if (chongzhiActivitySignList.front() == tag)
		{
			return;
		}
		else
		{
			tempTag = chongzhiActivitySignList.front();
			chongzhiActivitySignList.pop_front();
			chongzhiActivitySignList.push_back(tempTag);
		}
	}
	chongzhiActivitySignList.push_back(tag);
}

bool ChongZhiActivityMgr::destroy()
{
	_isOpenXiaomi = false;
	_openLevel	  = 0;
	_openMoney	  = 0;
	_openPic	  = 0;
	_openPicStr   = "";
	_openQQ		  = "";

	int tempSize = chongzhiActivitySignList.size();
	for (int i = 0;i < tempSize;++i)
	{
		chongzhiActivitySignList.pop_front();
	}
	return true;
}

void ChongZhiActivityMgr::setXiaomiInfo(int level, int money, int picIdx, std::string qqInfo)
{
	_isOpenXiaomi = true;
	_openLevel = level;
	_openMoney = money;
	_openPic = picIdx;
	_openQQ = qqInfo;

	if(_openPic < 0)
		return;

	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM Sweetassistant WHERE id = ?1");
	cmd->set_integer32(1 , picIdx);
	c_sql_table* table = c_db_manager::getSingleton()->create_table();
	if(table->retrieve_row())
	{
		unsigned int idx = table->get_index("beautys");
		_openPicStr = table->get_text(idx);
	}
	c_db_manager::getSingleton()->destroy_table(table);
	c_db_manager::getSingleton()->end_operation(cmd);
}
