#ifndef PLAYERSTALLUI_H
#define PLAYERSTALLUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "DropDragDelegate.h"
#include "NumKeypad.h"
#include "FilterMgr.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class PlayerStallUiLayer
	: public DropDragInterface
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	public:
		PlayerStallUiLayer();
		virtual ~PlayerStallUiLayer();
		typedef std::vector<ItemNode*> ItemNode_List;
		CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(PlayerStallUiLayer, create);
		virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
		virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
		virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

		void setStallState(int state);
		virtual void onExit();
		virtual void onEnter();

		virtual short getItemBegin(CCTouch &touch, eGetResult &result);
		virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
		virtual bool onClicked(CCTouch &touch);
		virtual bool onDoubleClicked(CCTouch &touch);
		bool setItemSelect(int index);
		virtual EItemConType getConType();

		void updateItem(unsigned int id);

		void onBaiTanBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		void onShouTanBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		void onBuyBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		void onClose1BtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		void onHelpBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		//void onOkBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
		unsigned int getId();
		void CloseStall(int id);
		ItemNode* getNewItemNode();
		
	private:
		PlayerStallUiLayer *getUI();
		void onBaiTan();
		void onShouTan();
		void onBuy();
		void onClose();	
		//void onHelp();
		//void onOk();
		void onBuyImpl( bool isOk, int num );
		void OnBaitanConfrim(bool isOk, std::string str);
		


		void createItemNode();
		void clearItemNode();
		void clearOtherInfo();

		short getItemNode(CCTouch &touch, eGetResult &result);
		ItemNode* getItemNode(CCTouch &touch);
		f_item* getItem(CCTouch &touch);
		ItemNode_List _nodeList;

		unsigned int _id;
		INT64 _selectItemId;

		CCControlButton* m_shouTanBtn;
		CCControlButton* m_BaiTanBtn;
		CCControlButton* m_BuyTanBtn;
		CCLabelTTF* m_BaiTanLabel;
		CCLabelTTF* m_BuyLabel;
		CCNode* m_HelpNode;
	
		enum {SHOU = 1, BAI, BUY};

};

class TouchPriorityLayer 
	: public CCLayer
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(TouchPriorityLayer, create);
	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan( CCTouch *pTouch, CCEvent *pEvent );
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
};

class PlayerStall_Ui: public UiInterface
{
public:
	PlayerStall_Ui();
	virtual ~PlayerStall_Ui();
	virtual CCNode *openUi();
	virtual void closeUI();
private:
	TouchPriorityLayer* mTouchPriorityLayer;
};

class Stallbuyui: public UiInterface
{
public:
	Stallbuyui();
	virtual ~Stallbuyui();
	virtual CCNode *openUi();
};

class StallBuyUiLayer
	: public CCSprite
	, public NumKeyPadDelegate
	, public CCTouchDelegate
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	StallBuyUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StallBuyUiLayer, create);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void onCancelBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onOKBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onClosePressedBtn(CCObject * pSender, CCControlEvent pCCControlEvent);

	virtual void onExit();
	virtual void onEnter();
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void setItemNodeData(f_item* item, unsigned int pid=0);
	virtual int onAttach();
	virtual void onNumChange(int num);
	virtual void onFinished(int num, int srcNum);
	virtual void onCancel(int num);
	int getNum();
	void setNum(int num);

	CCLabelTTF* m_nameLabel;
	LabelFT*	m_nameNewLabel;	
	CCLabelTTF* m_onePriceLabel;
	LabelFT*	m_pOneNewPriceLabel;	
	CCLabelTTF* m_allPriceLabel;
	LabelFT*	m_pAllNewPriceLabel;	
	CCNode* m_pNode;
	CCNode* m_priceNode;
	CCNode* m_pNumPad;
	CCControlButton* m_OkNode;    
	CCNode* m_CancelNode;
	CCNode* m_CloseNode; 

	ItemNode* m_pItemNode;
	INT64 _id;
	unsigned int _itemID;
	unsigned int _playerid;
	int _stallPrice;
	int _stallNum;
	int _maxPrice;

	CCLabelTTF*			m_pBuyPriceText;
	LabelFT*			m_pBuyNewPriceText;	

	bool				b_touched;
};

class StallUnSetUi: public UiInterface
{
public:
	StallUnSetUi();
	virtual ~StallUnSetUi();
	virtual CCNode *openUi();

};

class StallUnsetUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	StallUnsetUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StallUnsetUiLayer, create);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void onEnter();
	void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void onUnuseBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
	void setData(f_item* item,int idx);
private:
	int _id;
	CCLabelTTF* m_nameLabel;
	LabelFT*	m_nameNewLabel;	
	CCLabelTTF* m_onePriceLabel;
	LabelFT*	m_pOneNewPriceLabel;	
	CCLabelTTF* m_allPriceLabel;
	LabelFT*	m_pAllNewPriceLabel;	
	CCLabelTTF*	m_pBuyPriceText;
	LabelFT*	m_pBuyNewPriceText;	
	CCNode* m_pNode;
	CCNode* m_UnuseNode;
	CCNode* m_CloseNode;
	ItemNode* m_pItemNode;
	f_item* m_pStallItem;
	int _stallPrice;
	int _stallNum;
};

//////////////////////////////////////////////////////////////////////////
//add by 15.10.29 tips与摆摊界面分开，解决打开遮挡问题
class StallTipsUI : public UiInterface
{
public:
	StallTipsUI();
	virtual ~StallTipsUI();
	virtual CCNode* openUi();
};

class StallTipsLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StallTipsLayer, create);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void onEnter();
	void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void onOkBtnPressed(CCObject * pSender, CCControlEvent pCCControlEvent);
};

#endif //STALLUI_H