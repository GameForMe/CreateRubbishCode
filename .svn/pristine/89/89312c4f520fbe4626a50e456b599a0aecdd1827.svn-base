#ifndef	MARTIALUPGRADUI_H
#define MARTIALUPGRADUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "ItemNode.h"
#include "DropDragDelegate.h"
#include "AnimationCache.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class TouchSprite;
class MartialUpgradUiLayer;
class f_equipment;
class BSAnimation;
class f_item;

class MartialUpgradUi : public UiInterface
{
public:
	virtual CCNode *openUi();
	MartialUpgradUiLayer *getUiLayer();
	void updateData();
};

class MartialUpgradUiLayer
	:public DropDragInterface
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class MartialUpgradUi;

	enum eMartialUpgradUiTag
	{
		MUT_Frame = 0,
		MUT_Container = 1,
		MUT_ItemNode = 2,
		MUT_NodeFame = 3,
		MUT_Progress = 4,
		MUT_MagicNode = 5,

		MUT_EquipTab = 31, //功法装备页签;
		MUT_ObtainTab = 32,  //功法获取页签;

	};
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(MartialUpgradUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();	

	void updateData();
	virtual short getItemBegin(CCTouch &touch, eGetResult &result);
	virtual short getItemEnd(CCTouch &touch, eGetResult &result, EItemConType src, short itemIndex);
	virtual bool onClicked(CCTouch &touch);
	virtual bool onDoubleClicked(CCTouch &touch) { return false; }
	virtual EItemConType getConType() { return EICT_CLIENT; }

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMartialInstructBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onMartialfusionBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
protected:
	ItemNode *getItemNode(eMartialUpgradUiTag tag);
// 	void setEquipData(f_equipment *equip);
// 	void setStuffData(f_item *stuff);
// 	void updateContainer();
// 	void reduceStuff();
// 	INT64 getMartialId() const { return _martialId; }
// 	void autoPutStuff();
// 	void runAnimation();
// 	void animationCallback(CCNode *node);
// 	void loadAnimation();
	void onMartialEquipTabClicked(TouchSprite*, bool);	// 点击功法装备页签切换
	void onMartialObtainTabClicked(TouchSprite*, bool);		// 点击功法获取页签切换
private:
	CCSprite *_frame;
	CCNode *_container;
	CCPoint _posItem;
	INT64 _martialId;
	INT64 _stuffId;
	std::map<ERoleAttribute, std::string> _indentifyAttrStr;
	AnimationCache::AnimateList _anims;
};

#endif //MARTIALUPGRADUI_H