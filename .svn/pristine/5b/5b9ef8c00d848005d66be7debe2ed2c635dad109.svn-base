#ifndef ITEMAUTOUSEDAOJUTIP_H
#define ITEMAUTOUSEDAOJUTIP_H
#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "item.h"

using namespace cocos2d;
using namespace cocos2d::extension;


class kuaijieshiyongUiLayer;
class ItemNode;

struct autoItem
{
	f_item*		item;
	short		num;	//可使用数量
	//short		index;	//使用先后顺序
	autoItem()
	{
		this->item	= NULL;
		this->num	= NULL;
		//this->index	= NULL;
	}
	autoItem(f_item* item,short num)
	{
		this->item	= item;
		this->num	= num;
		//this->index	= index;
	}
	~autoItem()
	{
		this->item	= NULL;
		this->num	= NULL;
		//this->index	= NULL;
	}
};

class ItemAutoUseDaojuTip

{
public:
	
	static ItemAutoUseDaojuTip *getInstace();//单例
	void open();//自动使用道具
	void close();//关闭提示框 1
	bool isOpen();//是否已打开过 1
	void setDataId(f_item* pItem,int num = 1,bool isNew = false);//设置id,增加数量，是否新增堆
	kuaijieshiyongUiLayer *getUiLayer(); //1
	INT64 getDataId();
	void updateItem(f_item* pItem,int num,bool isNew);
	autoItem* getMapFront();
	void delMapFront();
	bool onUseItem( INT64 n64_serial );
	void clearMap();
private:
	std::set<std::string> _usedPlistFile; 

	std::list<autoItem>  m_pAutoItemMap;
};


class kuaijieshiyongUiLayer
	:public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
	//, public CCTouchDelegate

{
	friend class ItemAutoUseDaojuTip;
public:
	kuaijieshiyongUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(kuaijieshiyongUiLayer, create);  // 1
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);  //选中菜单项
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);	//按钮选项
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);  //节点
	
	void onUseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);//点击按钮事件
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);//关闭按钮
	virtual void onExit();
	virtual void onEnter();
	
	bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	INT64 getDataId() { return _n64ItemId;}
	cocos2d::CCRect getUseBtnPos();
	void onUseItem( INT64 n64_serial );			// 道具被使用时会调用此函数

protected:
	void setDataId(f_item* pItem,int num = 1);
	void setNum(int num);
	void setName(const std::string &name , int itemColorType); //设置名字
	ccColor3B getChangeColor(int colorType);           //转换label颜色
protected:
	CCNode* _bg;
	CCSprite*  _spr;
	CCLabelTTF* _lbName;
	CCNode* _node;
	CCControlButton* _usebutton; //使用按钮
	CCControlButton* _closebutton; //使用按钮
	f_item* _pItem;
	static INT64 _n64ItemId;
	ItemNode* _itemNode;
};




#endif