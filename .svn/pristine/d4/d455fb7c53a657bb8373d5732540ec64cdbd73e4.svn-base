#ifndef EQUIPFUSIONITEMNODE_H
#define EQUIPFUSIONITEMNODE_H

#include "cocos2d.h"
using namespace cocos2d;

class f_item;
struct tagEquipViewInfo;

#define EQUIPFUSIONITEMNODE_CONTENTWIDTH 54
#define EQUIPFUSIONITEMNODE_CONTENTHEIGHT 54

class EquipFusionItemNode : public CCNode,public CCTouchDelegate
{
public:
	enum ItemTag
	{
		IT_MAIN = 0,
		IT_LABEL,
		IT_LEVELLABEL,
		IT_LOCK,
		IT_Bind, //绑定;
		IT_SinEffect,  //装备特效;
		IT_QualityBox //品质框;
	};
public:
	CREATE_FUNC(EquipFusionItemNode);
	bool init();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void onEnter();
	virtual void onExit();
	void initWithItem( f_item *item);
	void initWithItem(const tagEquipViewInfo *equipInfo);
	void setBlank();
	void setBlock();
	void setLock(bool lock);
	void setDataId(unsigned int id);
	void setNum(int num);
	void setLevel(int lv); //针对功法;
	void setBind(bool bind = true);
	void copy(EquipFusionItemNode &node);
	void setBlankSpriteFrame(const std::string &frameName) { _blankSpriteFrame = frameName; }
	std::string getBlankSpriteFrame() const { return _blankSpriteFrame; } 
	void setBlockSpriteFrameName(const std::string &frameName) { _blockSpriteFrame = frameName; }
	void runAnimation(const char *animName);
	void stopAnimation();
	void runSpecialAnima(int id, const char *animName);
	void setQualityBox(const char* boxname);
	void removeQualityBox();
	void changeItemNumPositon();
	void showReciveIcon(const char *spritename);
	void removeReciveIcon();
	void runMoveAction(const CCPoint &start, const CCPoint &end,int index,bool mulitpe);
	CCSprite* getItemSprite(unsigned int id);
	void animCallback(CCNode* node);
	void setItemTag(int i){itemTag = i;};
	int setItemTag(){return itemTag;};
private:
	bool _block;
	unsigned int _dataId;
	int _num;
	int _lv;
	bool _lock;
	std::string _blankSpriteFrame;
	std::string _blockSpriteFrame;
	int itemTag;
	CCSprite* _sprite;
	CCSprite *_qualitybox;
	CCSprite *_reciveIcon;
};


#endif //ITEMNODE_H