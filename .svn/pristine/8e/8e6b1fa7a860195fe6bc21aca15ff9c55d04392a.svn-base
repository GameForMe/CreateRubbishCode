#ifndef TASKUI_H
#define TASKUI_H


#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class TouchSprite;

class TaskUi : public CCLayer
{
	friend class TaskUiLayer;
public:
	CREATE_FUNC(TaskUi);
	~TaskUi();
	bool init();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void onExit();
	void setMasterTaskTitle(const char *title);
	void setBranchTaskTitle(const char *title);
	void setBranchTaskTitle2(const char *title);
	void setExerciseTaskTitle(const char *title);
	void setDetailTaskName(const char *name);
	void setDetailTaskDesc(const char *desc);
	void setDetailTaskAim(const char *aim);
	void setDetailTaskReward(const char *str);
protected:
	void onMasterTaskPressed(TouchSprite *, bool);
	void onBrachTaskPressed(TouchSprite *, bool);
	void onExerciseTaskPressed(TouchSprite *, bool);
	void setDetailTaskUiVisiable(bool visiable);
SIGNALS:
	c_signal<void> signalMasterTaskPressed;
	c_signal<void> signalBranchTaskPressed;
	c_signal<void> signalExerciseTaskPressed;
	c_signal<void> signalFindAimBtnPressed;
private:
	//当前任务
	CCLabelTTF *_masterTaskName;
	CCLabelTTF *_brachTaskName;
	CCLabelTTF *_brachTaskName2;
	CCLabelTTF *_exerciseTaskName;
	CCLabelTTF *_taskName;
	CCLabelTTF *_taskDesc;
	CCLabelTTF *_taskAim;
	CCLabelTTF *_taskReward;
};

class TaskUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(TaskUiLayer, create);

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onDetailCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onFindAimBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
};

class TaskUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TaskUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(TaskUiLayer);
};

#endif //TASKUI_H