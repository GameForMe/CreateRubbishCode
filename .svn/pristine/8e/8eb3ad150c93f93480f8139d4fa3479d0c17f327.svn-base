#ifndef BATTLEFIELDUI_H
#define BATTLEFIELDUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "Attres.h"
#include "ListItem.h"
#include "VerticalList.h"
#include "UiInterface.h"
#include "BattlefieldMgr.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class BattlefieldUiLayer;
class TouchSprite;

class BattlefieldListItem : public ListItem
{
	enum eNodeTag
	{
		NT_Name = 0,
		NT_Level,
		NT_Enemy,
		NT_Leader,
		NT_Guard,
		NT_Ranking,
		NT_Reward,
		NT_Honor,
		NT_Num
	};
	enum eHorizonPos
	{
		HP_Name = 5,
		HP_Level = 80 + HP_Name,
		HP_Enemy = 160 + HP_Name,
		HP_Leader = 240 + HP_Name,
		HP_Guard = 320 + HP_Name,
		HP_Ranking = 400 + HP_Name,
		HP_Reward = 480 + HP_Name,
		HP_Honor = 560 + HP_Name,
		HP_ContentWidth = 630,
	};

public:
	BattlefieldListItem();
	virtual ~BattlefieldListItem();
	static BattlefieldListItem *getInstance();
	virtual CCSize getContentSzie();
	virtual void onTouch(CCTouch *touch);
	virtual void onSelectChanged(bool select);
	void setData(const BattlefieldProto &data);
	BattlefieldProto getData() { return _data; }
private:
	CCLabelTTF *getLabel(eNodeTag tag);
	std::string getString(const BattlefieldProto &result, int index);
	void updateContent();
private:
	BattlefieldProto _data;
	CCSize _contentSize;
};

class BattlefieldUi : public UiInterface
{

public:
	BattlefieldUi();
	~BattlefieldUi();
	virtual CCNode *openUi();
	BattlefieldUiLayer *getUiLayer();
	void updateData();
};

class BattlefieldUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
/*	, public CCTouchDelegate*/
{
	friend class BattlefieldUi;
	enum eNodeTag
	{
		NT_Frame			= 0,
		NT_AllCamp			= 1,
		NT_MFWC				= 2,
		NT_BRDG				= 3,
		NT_Victory			= 4,
		NT_ScrollView		= 5,
		NT_MineInfo			= 6,
		NT_Result			= 15
	};
	enum eTab
	{
		T_NULL		= -1,
		T_AllCamp,
		T_MFWC,
		T_BRDG,
		T_TabNum	= 3,
	};
public:
	BattlefieldUiLayer();
	~BattlefieldUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(BattlefieldUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject *pTarget, const char *pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject *pTarget, const char *pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode *pNode, cocos2d::extension::CCNodeLoader *pNodeLoader);
	
	virtual void onEnter();
	virtual void onExit();
	
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject *pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onConfirmBtnPressed(cocos2d::CCObject *pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
protected:
	void setSelectTab(eTab tab);
	TouchSprite *getTouchSprite(eTab tab);

	void updateDataBySelectTab();

protected:
	void onTabAllCampTouch(TouchSprite*, bool);
	void onTabMFWCTouch(TouchSprite*, bool);
	void onTabBRDGTouch(TouchSprite*, bool);
protected:
	CCSprite *_frame;
	CCNode *_content;
	CCScrollView *_scrollView;
	VerticalList<BattlefieldListItem> *_verticalList;
	CCPoint _starTouchPoint;

	typedef std::vector<std::string> StrList;
	StrList _tabFrameName;
	StrList _normalFilterFrameName[T_TabNum];
	StrList _hightFilterFrameName[T_TabNum];
	StrList _titleName[T_TabNum];

	eTab _selectTab;
	int _selectFileterIndex;
protected:
	CCLabelTTF *_victoryLab;
	CCLabelTTF *_mineLab;
	CCSprite *_vSp;
};

#endif//BATTLEFIELD_H