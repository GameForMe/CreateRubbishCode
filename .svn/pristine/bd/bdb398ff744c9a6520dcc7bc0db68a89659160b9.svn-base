#ifndef ARANARANKUI_H
#define ARANARANKUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiTools.h"
#include "UiInterface.h"
#include "ArenaMainMgr.h"
#include <string.h>
using namespace cocos2d;
using namespace cocos2d::extension;

const int MAX_JJC_RANK_COUNT = 30; //保存对战记录最大数
const int itemTipsY = 50;

class ArenaRankUiLayer;

//item部分代码
class ArenaRankUiItemFrame;

class ArenaRankUiItem
{
	friend class ArenaRankUiItemFrame;

	enum eArenaRankUiItemTag
	{
		ArenaRank_Name = 0,
		ArenaRank_HeadIcon,
		ArenaRank_Level,
		ArenaRank_Power,
		ArenaRank_WinSteark,//连胜
		ArenaRank_RankIcon,
	};
public:
	ArenaRankUiItem();
	~ArenaRankUiItem();
	ArenaRankUiItemFrame *getUiFrame() { return _uiFrame; }
	void setSelectVisible(bool visible);
protected:

private:
	ArenaRankUiItemFrame *_uiFrame;
	std::set<std::string> _usedPlistFile;
};

class ArenaRankUiItemFrame 
	: public CCSprite
	, public CCTouchDelegate
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class ArenaRankUiItem;
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(ArenaRankUiItemFrame, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	void setData(tagJJCTargetRoleInfo attr);
	std::string getRoleHeadName(EClassType _eClassType,BYTE bySex);

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	//std::string getChangeRoleNameType(wchar_t* roleName);
	virtual void onExit();
	virtual void onEnter();

protected:
	ArenaRankUiItem *_item;
	CCPoint _stPt;
private:
	LabelFT* _roleName;
	CCSprite* _rolehead;
	LabelFT* _roleLv;
	LabelFT* _rolePower;
	LabelFT* _roleWinSteark;
	CCSprite* _rewardIcon;
};

class ArenaRankUiItemLoader : public CCSpriteLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(ArenaRankUiItemLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(ArenaRankUiItemFrame);
};
//背景部分
class ArenaRankUi : public UiInterface
{
public:
	ArenaRankUi();
	~ArenaRankUi();

	CCNode* openUi();
	void updateRewardData();
	void updateRankData();
	CCNode* getRankFrame();
};

class ArenaRankUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	enum eArenaRankUiLayerTag
	{
		ArenaRank_Quality1=21,
		ArenaRank_Quality2=22,
		ArenaRank_Quality3=23,
		ArenaRank_Quality4=24,
		ArenaRank_Quality5=25,
	};
public:

	ArenaRankUiLayer(){}
	~ArenaRankUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(ArenaRankUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	//按钮处理方法
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	//界面退出后执行
	virtual void onExit();
	virtual void onEnter();
	void updateArenaRankData();
	void updateRewardItem();
	void updateRewardItemName(int checked,int index);
	void updateSelect();
	void setQuality(int tag,int quality);
	void RemoveAllItem();
	void setItemTipsId(unsigned int id,CCSprite* sprite);
private:
	CCScrollView *_scrollView;
	typedef std::list<ArenaRankUiItem*> ArenaRankUiItemList;
	ArenaRankUiItemList _items;
	CCLayer* _contentLayer;
	CCNode *_container;
	CCSprite* reward_6;//此精灵为排名图标
	std::set<std::string> _plist;				//保存特效plist名称
	CCNode*		_frame;
	CCNode*		_node[5];
	ItemNode*	_rewardNode[5];
	LabelFT* _rewardName[5];
};

#endif //FUBENRANKUI_H