#pragma once
#include "ItemNode.h"
#include "cocos-ext.h"
#include "NormalLayer.h"
#include "UiInterface.h"
#include "TradingProto.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class TradingGetItemList : public cocos2d::CCNode
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCBMemberVariableAssigner
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TradingGetItemList,create);

	TradingGetItemList();
	~TradingGetItemList();

	virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName){return NULL;}
	virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual void onExit();
public:
	void SetTimeText();
	void setOverTime(float at);
	void SetItemSelect(bool value);
	void UpdateState(DWORD dwUpRoleID,tradingState nState);
	void refreshData(tagTradingGetItemDataMsg* item);
	static TradingGetItemList* createItem(const char* szFile,CCObject*pOwner,UiInterface* holder = NULL);
	LabelFT* getItemTime() { return m_pNewItemTime;}
private:
	long GetOverTime();
	void OnGetItemClick(CCObject * pSender, CCControlEvent pCCControlEvent);
private:
	cocos2d::CCLabelTTF*			m_pItemName;

	LabelFT*						m_pNewItemName;

	cocos2d::CCLabelTTF*			m_pItemTime;

	LabelFT*						m_pNewItemTime;

	cocos2d::CCLabelTTF*			m_pItemPrice;

	LabelFT*						m_pNewItemPrice;

	cocos2d::CCLabelTTF*			m_pItemState;

	LabelFT*						m_pNewItemState;

public:
	static cocos2d::CCSprite*		m_pItemOldSelect;

	cocos2d::CCSprite*				m_pItemSelect;

	static INT64					m_n64_serial;

	static DWORD					m_dwItemId;

	static INT32					m_nNum;

private:
	tagTradingGetItemDataMsg		m_sItem;
};	
								   