/*******************************************************************************

Copyright 2010 by tiankong Interactive Game Co., Ltd.
All rights reserved.

This software is the confidential and proprietary information of
tiankong Interactive Game Co., Ltd. ('Confidential Information'). You shall
not disclose such Confidential Information and shall use it only in
accordance with the terms of the license agreement you entered into with
tiankong Interactive  Co., Ltd.

*******************************************************************************/

#ifndef ROLE_TITLE_PROTOCOL
#define ROLE_TITLE_PROTOCOL

#include <string>
#include "CmdAdapter.h"
#include "BaseDefine.h"

#pragma pack(push, 1)

//----------------------------------------------------------------------------
// 错误码枚举
//----------------------------------------------------------------------------
enum
{
	E_Title_Success					= 0,	// 成功
	E_Title_NotVisible				= 1,			// 称号不可见
	E_Title_TitleNotObtained		= 2,			// 称号尚未获得
	E_Title_NoTitleActived			= 3,			// 角色尚未激活称号
	E_Title_TitleActivateFailed		= 4,			// 激活称号失败
	E_Title_UnknownError			= 5,			// 未知错误

	E_Title_Buy_Not_Find			= 6,			// 称号未找到
	E_Title_Buy_Not_point			= 7,			// 成就点数不足
	E_Title_Buy_Not_level			= 8,			// 等级不足	
	E_Titel_Buy_Not_Before			= 9,			// 无前置等级称号
	E_Title_Buy_Realy_Have			= 10,			// 称号已经有了
	E_Title_Buy_Cannot_buy			= 11,			// 该称号不能购买
	E_Title_Buy_Account_level_not	= 12,			// 账号充值数不足
	E_Title_Buy_Achievement_level_not= 13,			// 需求成就纹章等级不符
	E_Title_Buy_Has_Color			= 14,			// 该等级称号已有

	E_Title_Return_Cannot			= 20,			// 该称号不能归还
};

// 称号数据
struct tagTitleData
{
	unsigned int dwTitleID;	// 称号id
	unsigned int dwTime;		// 获得时间
};

struct tagTitleProto
{
	unsigned int dwID;	// 称号id
	std::string				stName;//名称
	std::string				stAtt;//属性
	std::string				stDesc;//描述
	std::string				stDesc2;//描述
	std::string				colorStr;//颜色
	std::string				bodyEft;//周身特效
	std::string				stGetMode;//获取方式
	unsigned int			nLinkGetUi;//获取方式 
	unsigned int			classType;//显示类型，0不显示  1 战士显示，2法师显示，3道士显示，4全职业显示
	unsigned int			nTimeLimit;//称号的时限
	unsigned int			nShwoForce;//称号的时限
	bool					b_normal_eft;//周身特效是否是普通特效 false为贴地特效
	bool					b_eft;//是否是特效
};
//-----------------------------------------------------------------------------
// 设置角色使用某称号（u16TitleID无效时，表示不使用称号）
//-----------------------------------------------------------------------------
struct NET_SIC_use_role_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_use_role_title)
	unsigned int			dw_role_id;		// 角色ID
	unsigned int			u16TitleID[MAX_REFRESH_TITLE_NUM];		// 当前使用的称号ID
};

struct NET_SIS_use_role_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_use_role_title)
	unsigned int			dw_error_code;	// 错误码
	unsigned int			dw_role_id;		// 角色ID
	unsigned int			u16TitleID[MAX_REFRESH_TITLE_NUM];		// 称号ID		
};

//-----------------------------------------------------------------------------
// 请求获得角色拥有的所有称号
//-----------------------------------------------------------------------------
struct NET_SIC_get_role_titles : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_get_role_titles)
	unsigned int			dw_role_id;		// 角色ID
};

//-----------------------------------------------------------------------------
// 返回角色拥有的所有称号(变长列表)
//-----------------------------------------------------------------------------
struct NET_SIS_get_role_titles : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_get_role_titles)
	unsigned int			dw_error_code;	// 错误码
	unsigned int			dw_role_id;		// 角色ID
	unsigned int			u16TitleNum;	// 当前本地角色已获得的称号数量
	tagTitleData	byData[1];		// 当前本地角色已获得的称号ID
};

//-----------------------------------------------------------------------------
// 角色获得新称号(用来通知客户端)
//-----------------------------------------------------------------------------
struct NET_SIS_net_titles : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_net_titles)
	unsigned int			dw_role_id;		// 角色ID
	unsigned int			dw_title_id;	// 新获得称号
	unsigned int			dw_time;		// 获得时间
};

//-----------------------------------------------------------------------------
// 删除称号
//-----------------------------------------------------------------------------
struct NET_SIS_delete_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_delete_title)
	unsigned int			dw_role_id;		// 角色ID
	unsigned int			dw_title_id;	// 删除的称号
};


//-----------------------------------------------------------------------------
// 角色正在使用称号发生改变，给周围玩家广播
//-----------------------------------------------------------------------------
struct NET_SIS_role_title_change_broad : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_role_title_change_broad)
	unsigned int			dw_role_id;
	int				nIndex;
	unsigned int			dwTitleID;		// 若玩家选择隐藏称号，该字段为INVALID_VALUE
};

//-----------------------------------------------------------------------------
//通知服务器是否显示当前激活的称号 gx add 2013.10.31
//-----------------------------------------------------------------------------
struct NET_SIC_show_active_title : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_show_active_title)
	int bshow_title[3];//记录激活的三个称号是否显示给其他玩家
};

#pragma pack(pop)
#endif