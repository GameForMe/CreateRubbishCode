#include "TeammateMenu.h"
#include "CommonClient.h"
#include "CfgReader.h"

TeammateMenu::TeammateMenu()
	:mpBG(NULL)
{
	mvecMenuBtns.assign(eTotal,NULL);
}

TeammateMenu::~TeammateMenu()
{

}

void TeammateMenu::onNodeLoaded( CCNode * pNode, CCNodeLoader * pNodeLoader )
{
	PopMenu::onNodeLoaded(pNode,pNodeLoader);

	for (int i = 0; i < 5 ; ++i)
	{
		mvecMenuBtns[i] = this->getChildByTag(i);
	}

	std::vector<CCNode*> tmp;
	tmp.push_back(mvecMenuBtns[eAddFriend]);
	tmp.push_back(mvecMenuBtns[eProfile]);
	tmp.push_back(mvecMenuBtns[ePrivateTalk]);
	tmp.push_back(mvecMenuBtns[eAssignLeader]);
	tmp.push_back(mvecMenuBtns[eKick]);
	moAligner.setupNodes(tmp,AlignComponent::ead_vertical);
	
}

void TeammateMenu::popByStyle( CCPoint const& pt,bool bTeamleader,bool bFriend )
{
	CCPoint adjust = pt;
	arrange(adjust,bTeamleader,bFriend);
	pop(adjust);
}

void TeammateMenu::arrange(CCPoint& pt, bool bTeamleader ,bool bFriend)
{
	int nInvisibleCnt= bTeamleader?0:2;
	float fHeight = mvecMenuBtns[eAssignLeader]->getContentSize().height;
	mvecMenuBtns[eAssignLeader]->setVisible(bTeamleader);
	mvecMenuBtns[eKick]->setVisible(bTeamleader);

	mvecMenuBtns[eAddFriend]->setVisible(!bFriend);
	if (bFriend)
	{
		++nInvisibleCnt;
	}
	moAligner.arrange();

	CCSize newSize = getContentSize();
	newSize.height -= fHeight*nInvisibleCnt;
	setContentSize(newSize);

	newSize = mpBG->getContentSize();
	newSize.height -= fHeight*nInvisibleCnt;
	mpBG->setContentSize(newSize);
	
	pt.y -=  fHeight*nInvisibleCnt;
}

bool TeammateMenu::onAssignCCBMemberVariable( CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode )
{
	SIMPLE_MEMBERVARIABLEASSIGNER_GLUE_WEEK(CCNode*,mpBG);
	return false;
}

TeammateMenu* TeammateMenu::createMenu( const char* szFile,CCObject* pOwner )
{
	CCNodeLoaderLibrary* lib  = CCNodeLoaderLibrary::sharedCCNodeLoaderLibrary();
	CCBReader* reader = new CCBReader(lib);
	reader->autorelease();
	std::string strFilepath = CFGReader::instance()->get_ui_ccbi_filepath(szFile);
	CCNode* node = reader->readNodeGraphFromFile(strFilepath.c_str(),pOwner);
	CC_ASSERT(node);

	TeammateMenu* menu = dynamic_cast<TeammateMenu*>(node);
	return menu;
}
