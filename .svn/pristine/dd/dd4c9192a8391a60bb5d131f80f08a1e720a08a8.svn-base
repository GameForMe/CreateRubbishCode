#include "ItemTipDataMgr.h"
#include "SQLCommand.h"
#include "DBMgr.h"

ItemTipDataMgr::ItemTipDataMgr()
{
	getItemTipInfo();
}

ItemTipDataMgr::~ItemTipDataMgr()
{
}


ItemTipDataMgr* ItemTipDataMgr::getInstance()
{
	static ItemTipDataMgr mgr;
	return &mgr; 
}

void ItemTipDataMgr::getItemTipInfo()
{
	ItemTipData info;
	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM ItemTipData");
	c_sql_table* table = c_db_manager::getSingleton()->create_table();
	while(table->retrieve_row())
	{
		unsigned int idx = table->get_index("id");
		info.id = table->get_integer32(idx);
		idx = table->get_index("name");
		info.name = table->get_text(idx);
		idx = table->get_index("desc");
		info.desc = table->get_text(idx);
		idx = table->get_index("sdesc");
		info.sdesc = table->get_text(idx);
		idx = table->get_index("price");
		info.price = table->get_integer32(idx);
		idx = table->get_index("quality");
		info.quality = table->get_integer32(idx);
		_ItemTipInfo.insert(std::make_pair(info.id,info));
	}

	c_db_manager::getSingleton()->destroy_table(table);
	c_db_manager::getSingleton()->end_operation(cmd);

}

ItemTipData ItemTipDataMgr::FindItemTipById( int id )
{
	if(id == 0)
		return ItemTipData();

	ItemTipDataMap::iterator iter = _ItemTipInfo.find(id);
	if(iter == _ItemTipInfo.end())
	{
		ItemTipData info;
		c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM ItemTipData WHERE id = ?1");
		c_sql_table* table = c_db_manager::getSingleton()->create_table();
		cmd->set_integer32(1 ,id);
		while(table->retrieve_row())
		{
			unsigned int idx = table->get_index("id");
			info.id = table->get_integer32(idx);
			idx = table->get_index("name");
			info.name = table->get_text(idx);
			idx = table->get_index("desc");
			info.desc = table->get_text(idx);
			idx = table->get_index("sdesc");
			info.sdesc = table->get_text(idx);
			idx = table->get_index("price");
			info.price = table->get_integer32(idx);
			idx = table->get_index("quality");
			info.quality = table->get_integer32(idx);
			_ItemTipInfo.insert(std::make_pair(info.id,info));

			_ItemTipInfo[info.id] = info;
		}

		c_db_manager::getSingleton()->destroy_table(table);
		c_db_manager::getSingleton()->end_operation(cmd);

		return info;
	}
	else
	{
		return iter->second;
	}
}