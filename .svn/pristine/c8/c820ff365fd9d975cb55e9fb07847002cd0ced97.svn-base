#include "ChongZhiActivityFarmeUI.h"
#include "UiLoader.h"
#include "World.h"
#include "JuhuasuanUi.h"
#include "FirstRechargeUi.h"
#include "RechargeGiftUi.h"
#include "RebateUi.h"
#include "CommonMsgDefine.h"
#include "TCPClient.h"
#include "ToolTip.h"
#include "StringMgr.h"
#include "WorldPacket.h"
#include "ChongZhiActivityMgr.h"
#include "AudioPlayer.h"
#include "AudioProto.h"
#include "PackageManager.h"
#include "CfgReader.h"
#include "UiResourceMgr.h"
#include "SQLCommand.h"
#include "DBMgr.h"
#include "RoleManager.h"
#include "LocalPlayer.h"
#include "RewardMgr.h"
#include "PackageManager.h"
#include "ItemTip.h"
#include "EquipTipUi.h"
#include "RebateMgr.h"
#include "StoreRechargeUi.h"
#include "GongfaTip.h"
#include "KaifuHuodongMgr.h"
#include "SecondRechargeUi.h"
//////////////////////////////////////////////////////////////////////////

ChongZhiActivityFarmeUI::ChongZhiActivityFarmeUI()
{

}

ChongZhiActivityFarmeUI::~ChongZhiActivityFarmeUI()
{

}

CCNode* ChongZhiActivityFarmeUI::openUi()
{
	std::map<std::string, CCNodeLoader*> nodeLoaders;
	nodeLoaders["RechargeActUiLayer"] = UiLayerLoader<ChongZhiActivityFarmeUILayer>::loader();
	CCNode* pNode = readUiFromCCBI("RechargeAct", nodeLoaders, _loadSpriteSheet);

	return pNode;
}

ChongZhiActivityFarmeUILayer * ChongZhiActivityFarmeUI::getUiLayer()
{
	return getUiNodeByTag<ChongZhiActivityFarmeUILayer>(WCT_ChongZhiActivityFarmeUI);
}

void ChongZhiActivityFarmeUI::updateRebateUi()
{
	ChongZhiActivityFarmeUILayer* ui = getUiNodeByTag<ChongZhiActivityFarmeUILayer>(WCT_ChongZhiActivityFarmeUI);
	if (ui != NULL)
	{
		ui->updateRebateUiLayer();
	}
}

cocos2d::CCRect ChongZhiActivityFarmeUI::getGuildPosition( int tag )
{
	ChongZhiActivityFarmeUILayer* ui = getUiNodeByTag<ChongZhiActivityFarmeUILayer>(WCT_ChongZhiActivityFarmeUI);
	if (ui != NULL)
	{
		return ui->getGuildPosition(tag);
	}
	return CCRect();
}

void ChongZhiActivityFarmeUI::setShowShouChong( bool visible )
{
	ChongZhiActivityFarmeUILayer* ui = getUiNodeByTag<ChongZhiActivityFarmeUILayer>(WCT_ChongZhiActivityFarmeUI);
	if (ui != NULL)
	{
		ui->setShowShouChong(visible);
	}
}

//////////////////////////////////////////////////////////////////////////

cocos2d::SEL_MenuHandler ChongZhiActivityFarmeUILayer::onResolveCCBCCMenuItemSelector( CCObject * pTarget, const char* pSelectorName )
{
	return NULL;
}

cocos2d::extension::SEL_CCControlHandler ChongZhiActivityFarmeUILayer::onResolveCCBCCControlSelector( CCObject * pTarget, const char* pSelectorName )
{
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onRechargeRewardBtnPressed", ChongZhiActivityFarmeUILayer::onRechargeRewardBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onFirstRechargeBtnPressed", ChongZhiActivityFarmeUILayer::onFirstRechargeBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onSecondRecharge", ChongZhiActivityFarmeUILayer::onSecondRechargeBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onJuHuaSuanBtnPressed", ChongZhiActivityFarmeUILayer::onJuHuaSuanBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onRebateBtnPressed", ChongZhiActivityFarmeUILayer::onRebateBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onCloseBtnPressed", ChongZhiActivityFarmeUILayer::onCloseBtnPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onPrepaidPressed", ChongZhiActivityFarmeUILayer::onPrepaidPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onshouchongfanbeiPressed", ChongZhiActivityFarmeUILayer::onshouchongfanbeiPressed);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onfanliPressed", ChongZhiActivityFarmeUILayer::onfanliPressed);
	return NULL;
}

bool ChongZhiActivityFarmeUILayer::ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent)
{
	if ( !isVisible() || !isRunning() || !hasVisibleParents() )
	{
		return false;
	}
	if(isTouchOnNodeContent(_bg, pTouch))
	{
		return true;
	}
	else
	{
		CLOSE_UI(WCT_ChongZhiActivityFarmeUI);//关闭充值活动界面
		return false;
	}
	
}
void ChongZhiActivityFarmeUILayer::updateSelectTab()
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn2,false);
	selectTab(CZA_ChongZhiHaoLi);
}
//按钮处理事件
void ChongZhiActivityFarmeUILayer::onRechargeRewardBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn2,false);
	selectTab(CZA_ChongZhiHaoLi);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onFirstRechargeBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
    AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn1,false);
	selectTab(CZA_MeiRiShouChong);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onSecondRechargeBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);
	setChongzhiButton(CZA_SecondRechargeBtn,false);
	selectTab(CZA_SecondRechargeCue);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onJuHuaSuanBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn3,false);
	selectTab(CZA_JuHuaSuan);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onRebateBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn4,false);
	selectTab(CZA_XiaoFeiFanLi);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_5);//vv
	CLOSE_UI(WCT_ChongZhiActivityFarmeUI);
	if (_isShowShouChong)
	{
		OPEN_UI(WCT_ShouChongUi);
	}
}

void ChongZhiActivityFarmeUILayer::onPrepaidPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent)
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_Btn10,false);
	selectTab(CZA_ChongZhi);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::selectTab( eChongZhiActivityFarmeTag tag )
{
	if (KaifuHuodongMgr::getInstance()->getIosShowRecharge() == false)
	{
		tag = CZA_ChongZhi;
	}
	if(tag != _selectTab)
	{
		//WaitLoading::getInstance()->stop();
		if(setSelectLabel(tag, true))
		{
			setSelectLabel(_selectTab, false);
			_selectTab = tag;
		}
	}
	//updateInternal(); 防止二次刷新界面,原本界面open时就刷新了
}

void ChongZhiActivityFarmeUILayer::updateInternal()
{
	ChongZhiInternalUi *ui = _rechargeInternallUi[_selectTab];
	if(ui != NULL)
	{
		ui->updateDisplay();
	}
}

bool ChongZhiActivityFarmeUILayer::setSelectLabel( eChongZhiActivityFarmeTag tag, bool select )
{
	ChongZhiInternalUi *ui = _rechargeInternallUi[tag];
	if(ui != NULL)
	{
		if(select)
		{
			if (!ui->isOpen())
				ui->open();
			else
				ui->setVisible(true);
		}
		else
		{
			if (ui->isOpen())
				ui->setVisible(false);
		}
	}
	return true;
}

void ChongZhiActivityFarmeUILayer::onNodeLoaded( cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader )
{
	_rechargeInternallUi[CZA_MeiRiShouChong] = FirstRechargeUi::getInstance();
	_rechargeInternallUi[CZA_SecondRechargeCue] = SecondRechargeUi::getInstance();
	_rechargeInternallUi[CZA_ChongZhiHaoLi] = RechargeGiftUi::getInstance();
	_rechargeInternallUi[CZA_JuHuaSuan] = JuhuasuanUi::getInstance();
	_rechargeInternallUi[CZA_ChongZhi] = StoreRechargeUi::getInstance();
	
	_selectTab = CZA_Null;
	
	isDrawReward_1 = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(1));
	isDrawReward_2 = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(2));
	isDrawReward_3 = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(3));
	isDrawReward_4 = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(4));

	second_recharge_cue = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(16));

	_timeLimitLabel = dynamic_cast<CCSprite*>(getChildByTag(0)->getChildByTag(9));
	_timeLimitLabel->setVisible(false);
	
	_rebateButton = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_Btn4));
	_rebateButton->setVisible(false);

	_bg = dynamic_cast<CCSprite*>(getChildByTag(0));
	_containNode = dynamic_cast<CCNode*>(getChildByTag(4));
	_containNode->setVisible(false);

	_fanBeiBg = dynamic_cast<CCNode*>(_bg->getChildByTag(CZA_FanBeiSp));
	_fanBeiBg->setVisible(false);
	_fanLiBg = dynamic_cast<CCNode*>(_bg->getChildByTag(CZA_FanLiSp));
	_fanLiBg->setVisible(false);
	setBtnVisible();	
	_isShowShouChong=false;
	this->showRebateButton();

	_recharge_btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(10));

	if (KaifuHuodongMgr::getInstance()->getIosShowRecharge() == false)
	{
		hideIosRechargeFunction();
	}

	CCNotificationCenter::sharedNotificationCenter()->addObserver(this, SEL_CallFuncO(&ChongZhiActivityFarmeUILayer::hideRebateButton), "HIDEREBATEBUTTON", NULL);
    CCControlButton *fanBeiBtn=(CCControlButton*)(_bg->getChildByTag(CZA_FanBeiBtn));
	if(fanBeiBtn)
	{
		fanBeiBtn->setVisible(false);
		CCControlButton *fanLiBtn=(CCControlButton*)(_bg->getChildByTag(CZA_FanLiBtn));
		if(fanLiBtn)
		{
			fanLiBtn->setPosition(fanBeiBtn->getPosition());
		}
	}

}

void ChongZhiActivityFarmeUILayer::showRebateButton()
{
	if (RebateMgr::getInstance()->isHasRebateActivity())
	{
		_rechargeInternallUi[CZA_XiaoFeiFanLi] = RebateUi::getInstance();
		switchRebateButtonVisible(true);
	}
}

void ChongZhiActivityFarmeUILayer::switchRebateButtonVisible(bool isVisible)
{
	_rebateButton->setVisible(isVisible);
	_timeLimitLabel->setVisible(isVisible);
	if (isVisible == false)
	{
		isDrawReward_4->setVisible(false);
	}else
	{
		setBtnVisible();
	}
}

void ChongZhiActivityFarmeUILayer::hideRebateButton(CCObject *pSender)
{
	switchRebateButtonVisible(false);
	setChongzhiButton(CZA_Btn4, false);
	selectTab(CZA_MeiRiShouChong);
	if (_rechargeInternallUi[CZA_XiaoFeiFanLi] != NULL)
	{
		ChongZhiInternalUi *ui = _rechargeInternallUi[CZA_XiaoFeiFanLi];
		ui->close();
	}
}

void ChongZhiActivityFarmeUILayer::setBtnVisible()
{
	isDrawReward_1->setVisible(false);
	isDrawReward_2->setVisible(false);
	isDrawReward_3->setVisible(false);
	isDrawReward_4->setVisible(false);
	second_recharge_cue->setVisible(false);
	if (KaifuHuodongMgr::getInstance()->getIosShowRecharge() == false)
	{
		return;
	}
	eWroldChildTag tempTag;
	std::list<eWroldChildTag> tempList = ChongZhiActivityMgr::getInstance()->getChongzhiActivitySignList();
	int tempSize = ChongZhiActivityMgr::getInstance()->getChongzhiActivitySignList().size();
	for (int i = 0;i < tempSize;++i)
	{
		switch(tempList.front())
		{
		case WCT_FIRSTRECHARGEUI://每日首冲
			{
				isDrawReward_1->setVisible(true);
			}
			break;
		case WCT_SECONDRECHARGEUI://次冲豪礼
			{
				second_recharge_cue->setVisible(true);
			}
			break;
		case WCT_RECHARGEGIFTUI://充值好礼
			{
				isDrawReward_2->setVisible(true);
			}
			break;
		case WCT_JUHUASUANUI://聚划算
			{
				isDrawReward_3->setVisible(true);
			}
			break;
		case WCT_REBATEUI://消费返利
			{
				if (_rebateButton->isVisible())
				{
					isDrawReward_4->setVisible(true);
				}
			}
			break;
		}
		tempTag = tempList.front();
		tempList.pop_front();
		tempList.push_back(tempTag);
	}
}

void ChongZhiActivityFarmeUILayer::onExit()
{
	std::map<eChongZhiActivityFarmeTag, ChongZhiInternalUi*>::iterator it = _rechargeInternallUi.begin();
	for (; it != _rechargeInternallUi.end(); it++)
	{
		if ((*it).second && (*it).second->isOpen())
		{
			(*it).second->close();
		}
	}

	TCP_CLIENT->unregister_net_cmd(NET_G2C_REQUEST_BUY_YUANBAO_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestBuyYuanBaoReward);
	TCP_CLIENT->unregister_net_cmd(NET_G2C_REQUEST_GET_YUANBAO_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetYuanBaoReward);
	TCP_CLIENT->unregister_net_cmd(NET_G2C_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetDayFirstRechargeRaward);
	TCP_CLIENT->unregister_net_cmd(NET_G2C_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetDaySecondRechargeRaward);
	TCP_CLIENT->unregister_net_cmd(NET_G2C_REQUEST_GET_TOTAL_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetTotalRechargeReward);
//	CCDirector::sharedDirector()->getTouchDispatcher()->removeDelegate(this);
	CCNotificationCenter::sharedNotificationCenter()->removeObserver(this, "HIDEREBATEBUTTON");
	CCLayer::onExit();

	UNREGISTER_EVENT(OpenChongZhiUI,ChongZhiActivityFarmeUILayer,getMaPai);
	UNREGISTER_EVENT(jump_to_recharge,ChongZhiActivityFarmeUILayer,on_event_jump_to_recharge);
	UNREGISTER_EVENT(refresh_second_recharge,ChongZhiActivityFarmeUILayer,on_refresh_second_recharge);
	
}

void ChongZhiActivityFarmeUILayer::onEnter()
{
//	CCDirector::sharedDirector()->getTouchDispatcher()->addTargetedDelegate(this, 1, true);
	setTouchEnabled(false);
	CCLayer::onEnter();
	setAllChildernButtonPriority(this,-1);
	setTouchPriority(2);
	setTouchEnabled(true);
	TCP_CLIENT->register_net_cmd(NET_G2C_REQUEST_BUY_YUANBAO_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestBuyYuanBaoReward);
	TCP_CLIENT->register_net_cmd(NET_G2C_REQUEST_GET_YUANBAO_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetYuanBaoReward);
	TCP_CLIENT->register_net_cmd(NET_G2C_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetDayFirstRechargeRaward);
	TCP_CLIENT->register_net_cmd(NET_G2C_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetDaySecondRechargeRaward);
	TCP_CLIENT->register_net_cmd(NET_G2C_REQUEST_GET_TOTAL_RECHARGE_REWARD, this, &ChongZhiActivityFarmeUILayer::onRequestGetTotalRechargeReward);
	setChongzhiButton(CZA_Btn10, false);
	selectTab(CZA_ChongZhi);
	CCDirector::sharedDirector()->getScheduler()->scheduleSelector(SEL_SCHEDULE(&ChongZhiActivityFarmeUILayer::RefreshCurrentUI), this, 0.2f, false);

	REGISTER_EVENT(OpenChongZhiUI,ChongZhiActivityFarmeUILayer,getMaPai);
	REGISTER_EVENT(jump_to_recharge,ChongZhiActivityFarmeUILayer,on_event_jump_to_recharge);
	REGISTER_EVENT(refresh_second_recharge,ChongZhiActivityFarmeUILayer,on_refresh_second_recharge);
}

void ChongZhiActivityFarmeUILayer::getMaPai(OpenChongZhiUI* open)
{
	setChongzhiButton(CZA_Btn2,false);
	selectTab(CZA_ChongZhiHaoLi);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::RefreshCurrentUI(float dt)
{
	if (RewardMgr::getInstance()->GetGoToChongZHiHaoLi())
	{
		updateSelectTab();
		RewardMgr::getInstance()->SetGoToChongZhiHaoLi(false);
		CCDirector::sharedDirector()->getScheduler()->unscheduleSelector(SEL_SCHEDULE(&ChongZhiActivityFarmeUILayer::RefreshCurrentUI), this);
	}
}
unsigned int ChongZhiActivityFarmeUILayer::onRequestGetDayFirstRechargeRaward(s_net_cmd *cmd)
{//结果(DWORD)[0=成功,非0=错误代码]
	WorldPacket Msg((const void*)cmd);
	int success = -1;
	Msg >> success;
	switch(success)
	{
	case 0:
		{
			ToolTip::getInstance()->push(GET_STR(6011));
		}
		break;
	case E_Role_Day_First_Recharge_Reward_Is_Get: //本日已领取
		{
			ToolTip::getInstance()->push(GET_STR(7110));
		}
		break;
	case E_Role_Day_First_Recharge_Acct_Error: //账号异常
		{
			ToolTip::getInstance()->push(GET_STR(7111));
		}
		break;
	case E_Role_Day_First_Recharge_Bag_Not_Enougth://背包空间不足4个
		{
			ToolTip::getInstance()->push(GET_STR(7112));
		}
		break;
	}
	FirstRechargeUi* firstRechargeUi = (FirstRechargeUi*)_rechargeInternallUi[CZA_MeiRiShouChong];
	if(firstRechargeUi != NULL){
		firstRechargeUi->setFirstRechargeBtnEnabled(success != 0);
	}
	return 0;
}

unsigned int ChongZhiActivityFarmeUILayer::onRequestGetDaySecondRechargeRaward(s_net_cmd *cmd)
{
	WorldPacket Msg((const void*)cmd);
	int success = -1;
	Msg >> success;
// 	switch(success)
// 	{
// 	case 0:
// 		{
// 			ToolTip::getInstance()->push(GET_STR(6011));
// 		}
// 		break;
// 	case E_Role_Day_Second_Recharge_Reward_Is_Get: //本日已领取
// 		{
// 			ToolTip::getInstance()->push(GET_STR(7110));
// 		}
// 		break;
// 	case E_Role_Day_Second_Recharge_Acct_Error: //账号异常
// 		{
// 			ToolTip::getInstance()->push(GET_STR(7111));
// 		}
// 		break;
// 	case E_Role_Day_Second_Recharge_Bag_Not_Enougth://背包空间不足4个
// 		{
// 			ToolTip::getInstance()->push(GET_STR(7112));
// 		}
// 		break;
// 	case E_Role_Day_Second_Recharge_Not_First_Recharge://没有首冲
// 		{
// 			ToolTip::getInstance()->push(STRING_TABLE["not_second_recharge"]);
// 		}
// 		break;
// 	}

	std::stringstream ss;
	ss<<"second_recharge_error_"<<success;
	ToolTip::getInstance()->push(STRING_TABLE[ss.str().c_str()]);


	SecondRechargeUi* secondRechargeUi = (SecondRechargeUi*)_rechargeInternallUi[CZA_SecondRechargeCue];
	if(secondRechargeUi != NULL){
		secondRechargeUi->setFirstRechargeBtnEnabled(success != 0);
	}
	return 0;
}

unsigned int ChongZhiActivityFarmeUILayer::onRequestBuyYuanBaoReward(s_net_cmd *cmd)
{//聚划算购买的返回消息
	//结果(DWORD)[0=成功,非0=错误代码]
	WorldPacket Msg((const void*)cmd);
	int success = -1;
	Msg >> success;
	switch(success)
	{
	case 0:
		{
			ToolTip::getInstance()->push(GET_STR(7102));
			JuhuasuanUi::getInstance()->getUiLayer()->setQuicklyBuyeButtonState(true);
		}
		break;
	case E_Role_YuanBao_Reward_Need_YuanBao_Not_Enough:
		{
			//ToolTip::getInstance()->push(GET_STR(7105));
			RechargeNewUiMgr::GetInstance()->openRechargeNewUi();
		}
		break;
	case E_Role_YuanBao_Reward_Bag_Not_Enougth:
		{
			ToolTip::getInstance()->push(GET_STR(7104));
		}
		break;
	case E_Role_YuanBao_Reward_Day_Is_Get:
		{
			ToolTip::getInstance()->push(GET_STR(7101));
		}
		break;
	default:
		{
			ToolTip::getInstance()->push(GET_STR(7108));
		}
		break;
	}
	return 0;
}

unsigned int ChongZhiActivityFarmeUILayer::onRequestGetYuanBaoReward(s_net_cmd *cmd)
{//聚划算领取的返回结果信息
	//结果(DWORD)[0=成功,非0=错误代码]
	WorldPacket Msg((const void*)cmd);
	int success = -1;
	Msg >> success;
	switch(success)
	{
	case 0:
		{
			_rechargeInternallUi[CZA_JuHuaSuan]->updateDisplay();
			ToolTip::getInstance()->push(GET_STR(7103));
		}
		break;
	case E_Role_YuanBao_Reward_Need_YuanBao_Not_Enough:
		{
			//ToolTip::getInstance()->push(GET_STR(7105));
			RechargeNewUiMgr::GetInstance()->openRechargeNewUi();
		}
		break;
	case E_Role_YuanBao_Reward_Bag_Not_Enougth:
		{
			ToolTip::getInstance()->push(GET_STR(7104));
		}
		break;
	case E_Role_YuanBao_Reward_Day_Is_Get:
		{
			ToolTip::getInstance()->push(GET_STR(7249));
		}
		break;
	case E_Role_YuanBao_Reward_Not_Buy:
		{
			ToolTip::getInstance()->push(GET_STR(7248));
		}
		break;
	default:
		{
			ToolTip::getInstance()->push(GET_STR(7108));
		}
		break;
	}
	return 0;
}

void ChongZhiActivityFarmeUILayer::updateBtnIcon()
{//更新可领取的icon

}

unsigned int ChongZhiActivityFarmeUILayer::onRequestGetTotalRechargeReward( s_net_cmd* cmd )
{
	WorldPacket Msg((const void*)cmd);
	int nResult = -1;
	Msg >> nResult;
	switch(nResult)
	{
	case 0:
		{
			ToolTip::getInstance()->push(GET_STR(7119));
			_rechargeInternallUi[CZA_ChongZhiHaoLi]->updateDisplay();
		}
		break;
	case E_Role_Total_Recharge_Reward_Bag_Not_Enougth:
		{
			ToolTip::getInstance()->push(GET_STR(7121));
			_rechargeInternallUi[CZA_ChongZhiHaoLi]->updateDisplay();
		}
		break;
	case E_Role_Total_Recharge_Reward_Prev_Not_Get:
		{
			ToolTip::getInstance()->push(GET_STR(7120));
			_rechargeInternallUi[CZA_ChongZhiHaoLi]->updateDisplay();
		}
		break;
	case E_Role_Total_Recharge_Reward_Not_Enougth:
		{
			//int yuanbaoNum=PackageManager::getInstance()->getTotalChargeYuanBao();
			//if (yuanbaoNum<=0)
			//{
			//	OPEN_UI(WCT_ShouChongUi);
			//}
			//else
			//{
			//	OPEN_UI(WCT_StoreRechargeUi);
			//}
			//OPEN_UI(WCT_StoreRechargeUi);
			setChongzhiButton(CZA_Btn10,false);
			selectTab(CZA_ChongZhi);
			//ToolTip::getInstance()->push(GET_STR(7122));
			_rechargeInternallUi[CZA_ChongZhiHaoLi]->updateDisplay();
		}
		break;
	default:
		_rechargeInternallUi[CZA_ChongZhiHaoLi]->updateDisplay();
		break;
	}

	return 0;
}

void ChongZhiActivityFarmeUILayer::updateRebateUiLayer()
{
	_rechargeInternallUi[CZA_XiaoFeiFanLi]->updateDisplay();
}

void ChongZhiActivityFarmeUILayer::setChongzhiButton( int tag,bool visible )
{
	for ( int i = CZA_Btn1; i < CZA_SecondRechargeBtn + 1; ++i)
	{
		if (i == 9 || 11 == i || 12 == i)
		{
			continue;
		}
		CCControlButton *btn=(CCControlButton*)(getChildByTag(0)->getChildByTag(i));
		CC_ASSERT(btn!=NULL);
		if (tag==i)
		{
			btn->setEnabled(visible);
		}
		else
		{
			if (!btn->isEnabled())
			{
				btn->setEnabled(true);
			}
		}
	}
}

cocos2d::CCRect ChongZhiActivityFarmeUILayer::getGuildPosition( int tag )
{
	CCControlButton *btn=(CCControlButton*)(getChildByTag(0)->getChildByTag(tag));
	if (btn)
	{
		CCPoint pos = getChildByTag(0)->convertToWorldSpace(btn->getPosition());
		return CCRect(pos.x - 80, pos.y - 20, btn->getContentSize().width, btn->getContentSize().height);
	}
	return CCRect();
}

void ChongZhiActivityFarmeUILayer::setShowShouChong( bool visible )
{
	_isShowShouChong=visible;
	setChongzhiButton(CZA_Btn2,false);
	selectTab(CZA_ChongZhiHaoLi);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onshouchongfanbeiPressed( cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent )
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_FanBeiBtn,false);
	selectTab(CZA_Frame);
	_fanBeiBg->setVisible(true);
	_fanLiBg->setVisible(false);
}

void ChongZhiActivityFarmeUILayer::onfanliPressed( cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent )
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_11);//vv
	setChongzhiButton(CZA_FanLiBtn,false);
	selectTab(CZA_Frame);
	_fanBeiBg->setVisible(false);
	_fanLiBg->setVisible(true);
}

void ChongZhiActivityFarmeUILayer::hideIosRechargeFunction()
{
	CCControlButton *btn = NULL;
	btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_Btn1));
	if (btn)
	{
		btn->setVisible(false);
	}
	
	btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_Btn2));
	if (btn)
	{
		btn->setVisible(false);
	}

	btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_FanBeiBtn));
	if (btn)
	{
		btn->setVisible(false);
	}

	btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_FanLiBtn));
	if (btn)
	{
		btn->setVisible(false);
	}

	btn = dynamic_cast<CCControlButton*>(getChildByTag(0)->getChildByTag(CZA_SecondRechargeBtn));
	if (btn)
	{
		btn->setVisible(false);
	}

	if (_fanBeiBg)
	{
		_fanBeiBg->setVisible(false);
	}

	if (_fanLiBg)
	{
		_fanLiBg->setVisible(false);
	}

	CCNode* node = NULL;
	node = dynamic_cast<CCNode*>(getChildByTag(0)->getChildByTag(1));
	if (node)
	{
		node->setVisible(false);
	}

	node = dynamic_cast<CCNode*>(getChildByTag(0)->getChildByTag(2));
	if (node)
	{
		node->setVisible(false);
	}
}

void ChongZhiActivityFarmeUILayer::on_event_jump_to_recharge( jump_to_recharge* evt )
{
	if (_recharge_btn)
	{
		_recharge_btn->sendActionsForControlEvents(CCControlEventTouchUpInside);
	}
}

void ChongZhiActivityFarmeUILayer::on_refresh_second_recharge(refresh_second_recharge* evt)
{
	SecondRechargeUi* secondRechargeUi = (SecondRechargeUi*)_rechargeInternallUi[CZA_SecondRechargeCue];
	if(secondRechargeUi != NULL){
		secondRechargeUi->setFirstRechargeBtnEnabled(ChongZhiActivityMgr::getInstance()->get_second_recharge_state() != 2);
	}
}

RechargeItem::RechargeItem(): _uiFrame(NULL)
{
	CCNodeLoaderLibrary * ccNodeLoaderLibrary = CCNodeLoaderLibrary::newDefaultCCNodeLoaderLibrary();
	ccNodeLoaderLibrary->registerCCNodeLoader("RechargeitemUiLayer", RechargeitemUiLayerLoader::loader());
	cocos2d::extension::CCBReader * ccbReader = new cocos2d::extension::CCBReader(ccNodeLoaderLibrary);
	_uiFrame = dynamic_cast<RechargeitemUiLayer*>(ccbReader->readNodeGraphFromFile((CFGReader::instance()->get_profile_string("Art", "UI", "") + "rechargeitem.ccbi").c_str()));
	_usedPlistFile = ccbReader->getLoadedSpriteSheet();
	UiResourceMgr::getInstance()->retainPlistFile(_usedPlistFile);
	ccbReader->release();
	ccNodeLoaderLibrary->release();
	if(_uiFrame != NULL)
	{
		_uiFrame->retain();
		for (int i =0;i < 5; ++i)
		{
			CCNode* node = (CCNode*)_uiFrame->getChildByTag(EIT_Node1 + i);
			ItemNode* item = ItemNode::create();
			item->setClickable(true,1);
			item->hideItemOpBtn();
			item->setAnchorPoint(ccp(0.5f,0.5f));
			item->setPosition(node->getPosition());
			item->setVisible(true);
			_uiFrame->addChild(item,1,EIT_itemNode + i);
		}
		CCLabelTTF* bgYuanBao = (CCLabelTTF*)_uiFrame->getChildByTag(EIT_YuanBaoLabel);
		bgYuanBao->setVisible(false);
		CCLabelBMFont* NumBLabel = CCLabelBMFont::create();
		NumBLabel->setFntFile("Art/Scene/fontrechargeitem.fnt");
		NumBLabel->setPosition(bgYuanBao->getPosition());
		NumBLabel->setAnchorPoint(ccp(0.5f,0.5f));
		NumBLabel->setScale(1.0f);
		_uiFrame->addChild(NumBLabel,1,EIT_YuanBaoBM);
		_uiFrame->_getPrizeBtn = (CCControlButton*)_uiFrame->getChildByTag(EIT_Button);
		_uiFrame->_cRewardIdx = 0;

//		CCDirector::sharedDirector()->getTouchDispatcher()->addTargetedDelegate(_uiFrame, 1, true);
	}
}

RechargeItem::~RechargeItem()
{
	if(_uiFrame != NULL)
	{
//		CCDirector::sharedDirector()->getTouchDispatcher()->removeDelegate(_uiFrame);
		_uiFrame->removeAllChildrenWithCleanup(true);
		_uiFrame->release();
		_uiFrame = NULL;
	}

	UiResourceMgr::getInstance()->releasePlistFile(_usedPlistFile);
	_usedPlistFile.clear();
}

void RechargeItem::setTag(int tag)
{
	_uiFrame->setTag(tag);
}

void RechargeItem::setPosition( CCPoint pt )
{
	_uiFrame->setPosition(pt);
}

void RechargeItem::setRebateData( int boxIdx)
{
	_uiFrame->_cRewardIdx = boxIdx - 1;
	_uiFrame->_rewardType = ERT_Rebate;
	CCLabelTTF* label1 = (CCLabelTTF*)_uiFrame->getChildByTag(EIT_ChongZhiLabel);
	if (label1)
	{
		std::ostringstream oss;
		oss<<"\xE7\xB4\xAF\xE8\xAE\xA1\xE6\xB6\x88\xE8\xB4\xB9";
		label1->setString(oss.str().c_str());
	}
	CCLabelTTF* label2 = (CCLabelTTF*)_uiFrame->getChildByTag(EIT_YuanLabel);
	if (label2)
	{
		std::ostringstream oss;
		oss<<"\xE5\x85\x83\xE5\xAE\x9D";
		label2->setString(oss.str().c_str());
	}
	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM ConsumeReward WHERE ID = ?1");
	cmd->set_integer32(1 , boxIdx);
	c_sql_table* table = c_db_manager::getSingleton()->create_table();
	while(table->retrieve_row())
	{
		unsigned int idx = table->get_index("Item1");
		_rewardItemID[0] = table->get_integer32(idx);
		idx = table->get_index("Item2");
		_rewardItemID[1] = table->get_integer32(idx);
		idx = table->get_index("Item3");
		_rewardItemID[2] = table->get_integer32(idx);
		idx = table->get_index("Item4");
		_rewardItemID[3] = table->get_integer32(idx);
		idx = table->get_index("Item5");
		_rewardItemID[4] = table->get_integer32(idx);
		idx = table->get_index("Num1");
		_rewardItemNum[0] = table->get_integer32(idx);
		idx = table->get_index("Num2");
		_rewardItemNum[1] = table->get_integer32(idx);
		idx = table->get_index("Num3");
		_rewardItemNum[2] = table->get_integer32(idx);
		idx = table->get_index("Num4");
		_rewardItemNum[3] = table->get_integer32(idx);
		idx = table->get_index("Num5");
		_rewardItemNum[4] = table->get_integer32(idx);
		idx = table->get_index("YuanBao");
		_yuanBao = table->get_integer32(idx);
	}
	c_db_manager::getSingleton()->destroy_table(table);
	c_db_manager::getSingleton()->end_operation(cmd);
	for (int i =0;i < 5; ++i)
	{
		ItemNode* item = (ItemNode*)_uiFrame->getChildByTag(EIT_itemNode + i);
		item->setDataId(_rewardItemID[i]);
		item->setNum(_rewardItemNum[i]);
		//item->setClickable(false);
		_uiFrame->_rewardItemID[i] = _rewardItemID[i];
	}
	setYuanBao(_yuanBao);
	_uiFrame->_yuanBao = _yuanBao;
}

void RechargeItem::setYuanBao( int YuanBao )
{

	CCLabelBMFont* NumBLabel = (CCLabelBMFont*)_uiFrame->getChildByTag(EIT_YuanBaoBM);
	if (NumBLabel)
	{
		if (YuanBao < 10000)
		{
			CCString* str = CCString::createWithFormat("%d",YuanBao);
			NumBLabel->setString(str->getCString());
		}
		else
		{
			CCString* str = CCString::createWithFormat("%d\xE4\xB8\x87",YuanBao/10000);
			NumBLabel->setString(str->getCString());
		}
	}	
}

void RechargeItem::setGiftData( int boxIdx)
{
	_uiFrame->_cRewardIdx = boxIdx;
	_uiFrame->_rewardType = ERT_RechargeGift;
	CCLabelTTF* label1 = (CCLabelTTF*)_uiFrame->getChildByTag(EIT_ChongZhiLabel);
	if (label1)
	{
		std::ostringstream oss;
		oss<<"\xE7\xB4\xAF\xE8\xAE\xA1\xE5\x85\x85\xE5\x80\xBC";
		label1->setString(oss.str().c_str());
	}
	CCLabelTTF* label2 = (CCLabelTTF*)_uiFrame->getChildByTag(EIT_YuanLabel);
	if (label2)
	{
		std::ostringstream oss;
		oss<<"\xE5\x85\x83";
		label2->setString(oss.str().c_str());
	}
	LocalPlayer* loc = RoleManager::getInstance()->getLocalPlayer();
	if (!loc)
	{
		return;
	}
	int nSex = loc->getAttribute(RA_SEX);
	int nProfession = loc->getAttribute(RA_ROLETYPE);
	int nYBLv = this->getTotalRechargeRewardNeedYB(boxIdx);

	std::vector<st_item_group> rewards;
	World::getInstance()->get_recharge_rewards(nYBLv,nProfession,nSex,rewards);

	CC_ASSERT(rewards.size() >=5);
	for (int i = 0; i < 5 ; ++i)
	{
		_rewardItemID[i] = rewards[i].item_id;
		_rewardItemNum[i] = rewards[i].item_num;
	}

// 	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM RechargeReward WHERE YuanBao = ?1 AND Class = ?2 AND Sex = ?3");
// 	cmd->set_integer32(1 , nYBLv);
// 	cmd->set_integer32(2, nProfession);
// 	cmd->set_integer32(3, nSex);
// 	c_sql_table* table = c_db_manager::getSingleton()->create_table();
// 	while(table->retrieve_row())
// 	{
// 		unsigned int idx = table->get_index("Item1");
// 		_rewardItemID[0] = table->get_integer32(idx);
// 		idx = table->get_index("Item2");
// 		_rewardItemID[1] = table->get_integer32(idx);
// 		idx = table->get_index("Item3");
// 		_rewardItemID[2] = table->get_integer32(idx);
// 		idx = table->get_index("Item4");
// 		_rewardItemID[3] = table->get_integer32(idx);
// 		idx = table->get_index("Item5");
// 		_rewardItemID[4] = table->get_integer32(idx);
// 		idx = table->get_index("Num1");
// 		_rewardItemNum[0] = table->get_integer32(idx);
// 		idx = table->get_index("Num2");
// 		_rewardItemNum[1] = table->get_integer32(idx);
// 		idx = table->get_index("Num3");
// 		_rewardItemNum[2] = table->get_integer32(idx);
// 		idx = table->get_index("Num4");
// 		_rewardItemNum[3] = table->get_integer32(idx);
// 		idx = table->get_index("Num5");
// 		_rewardItemNum[4] = table->get_integer32(idx);
// 	}
// 	c_db_manager::getSingleton()->destroy_table(table);
// 	c_db_manager::getSingleton()->end_operation(cmd);

	for (int i =0;i < 5; ++i)
	{
		ItemNode* item = (ItemNode*)_uiFrame->getChildByTag(EIT_itemNode + i);
		item->setDataId(_rewardItemID[i]);
		if (_rewardItemID[i] == 1501002)//添加限量版人民币武器
		{
			item->runAnimation("E1_206");
		}
		item->setNum(_rewardItemNum[i]);
		item->setClickable(true,1);
		_uiFrame->_rewardItemID[i] = _rewardItemID[i];
	}
	setYuanBao(nYBLv/10);
	_uiFrame->_yuan = nYBLv/10;
}

int RechargeItem::getTotalRechargeRewardNeedYB( int boxLv )
{
// 	int needYB= 0;
// 	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM RechargeReward WHERE ID = ?1");
// 	cmd->set_integer32(1 , boxLv * 6);
// 	c_sql_table* table = c_db_manager::getSingleton()->create_table();
// 	while(table->retrieve_row())
// 	{
// 		unsigned int idx = table->get_index("YuanBao");
// 		needYB = table->get_integer32(idx);
// 	}
// 	c_db_manager::getSingleton()->destroy_table(table);
// 	c_db_manager::getSingleton()->end_operation(cmd);

	return World::getInstance()->get_recharge_yuanbao(boxLv * 6);
}

void RechargeItem::setEnabled( bool show )
{
	_uiFrame->_getPrizeBtn->setEnabled(show);
}

void RechargeItem::setTouchEnable( bool isEnable )
{
	for (int i =0;i < 5; ++i)
	{
		ItemNode* item = (ItemNode*)_uiFrame->getChildByTag(EIT_itemNode + i);
		if (item)
		{
			item->setClickable(isEnable);
		}
	}
}

cocos2d::SEL_MenuHandler RechargeitemUiLayer::onResolveCCBCCMenuItemSelector( CCObject * pTarget, const char* pSelectorName )
{
	return NULL;
}

cocos2d::extension::SEL_CCControlHandler RechargeitemUiLayer::onResolveCCBCCControlSelector( CCObject * pTarget, const char* pSelectorName )
{
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "onRechargeitemBtnPressed", RechargeitemUiLayer::onRechargeitemBtnPressed);
	return NULL;
}

void RechargeitemUiLayer::onRechargeitemBtnPressed( cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent )
{
	AudioPlayer::getSigletonPtr()->playerSoundUIEffect(SOUND_20);//vv
	if (_rewardType == RechargeItem::ERT_Rebate)
	{
		if (_yuanBao > PackageManager::getInstance()->GetToalConsumeYB())
		{
			OPEN_UI(WCT_STOREUI);
		}
		else
		{
			RewardMgr::getInstance()->getYBConsumeReplyReward(_cRewardIdx);
		}
	}
	else if (_rewardType = RechargeItem::ERT_RechargeGift)
	{
		int chargeYuanbao = PackageManager::getInstance()->getTotalChargeYuanBao();
		if (_yuan > chargeYuanbao/10)
		{
			//OPEN_UI(WCT_StoreRechargeUi);
			
			GET_UI(ChongZhiActivityFarmeUI, WCT_ChongZhiActivityFarmeUI)->getUiLayer()->setChongzhiButton(CZA_Btn10,false);
			GET_UI(ChongZhiActivityFarmeUI, WCT_ChongZhiActivityFarmeUI)->getUiLayer()->selectTab(CZA_ChongZhi);
		}
		else
		{
			WorldPacket C2G_Msg(NET_C2G_REQUEST_GET_TOTAL_RECHARGE_REWARD);
			C2G_Msg << _cRewardIdx;
			TCP_CLIENT->send_net_cmd((const s_net_cmd*)C2G_Msg.contents(), NP_IDLE, false);
		}
	}
	
}


bool RechargeitemUiLayer::ccTouchBegan( CCTouch *pTouch, CCEvent *pEvent )
{
	if ( !isVisible() || !isRunning() || !hasVisibleParents())
	{
		return false;
	}
	if ( isTouchOnNodeContent(bgNode,pTouch))
	{
		UiMgr::getInstance()->getCurScene()->convertTouchToNodeSpace(pTouch);
		for (int i = 0;i < 5; ++i)
		{
			CCNode *node = (CCNode*)getChildByTag(RechargeItem::EIT_itemNode + i);
			if (node)
			{
				if (isTouchOnNodeContent(node,pTouch))
				{
					return false;
				}
			}
		}
	}
	return false;
}

void RechargeitemUiLayer::onNodeLoaded( cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader )
{
	_buttonIsRunEffect = false;
	_cRewardIdx = -1;
	_rewardType = -1;
	_yuanBao = 0;
	_yuan = 0;
	setAllChildernButtonPriority(this,-1);
	//CCDirector::sharedDirector()->getTouchDispatcher()->addTargetedDelegate(this,1,true);
	bgNode = getChildByTag(RechargeItem::EIT_BackGroundNode);
}

void RechargeitemUiLayer::setEnabled( bool show )
{
	_getPrizeBtn->setVisible(show);
	if (!show)
	{
		CCSpriteFrame* havegot = PackageManager::getInstance()->getIconFrameByName("icon_havegot");
		CCSprite* spr = (CCSprite*)getChildByTag(RechargeItem::EIT_HaveGot);
		if (!spr)
		{
			spr = createWithSpriteFrame(havegot);
			spr->setPosition(_getPrizeBtn->getPosition());
			addChild(spr,1,RechargeItem::EIT_HaveGot);
		}
	}
}

void RechargeitemUiLayer::runRewardEffect(bool show)
{
	if (show)
	{
		if (!_buttonIsRunEffect)
		{
			_buttonIsRunEffect = true;
			AnimationCache::AnimateList anims;
			AnimationCache::createDefList(1, anims);
			AnimationCache::getInstance()->getSinEffect(0, "E1_145", anims);
			BSAnimate *animate = anims[0];
			CCSprite* spr = (CCSprite*)getChildByTag(RechargeItem::EIT_ButtonEffect);
			if (!spr)
			{
				spr =CCSprite::create();
				spr->setPosition(_getPrizeBtn->getPosition());
				addChild(spr,1,RechargeItem::EIT_ButtonEffect);
			}
			spr->runAction(CCRepeatForever::create(animate));
			spr->setVisible(true);
			
		}
	}
	else
	{
		CCSprite* spr = (CCSprite*)getChildByTag(RechargeItem::EIT_ButtonEffect);
		if (spr)
		{
			_buttonIsRunEffect = false;
			spr->stopAllActions();
			spr->setVisible(false);
			
		}
	}	
}

void RechargeitemUiLayer::onEnter()
{
	CCDirector::sharedDirector()->getTouchDispatcher()->addTargetedDelegate(this,1,true);
	CCSprite::onEnter();
}

void RechargeitemUiLayer::onExit()
{
	AnimationCache::getInstance()->releaseSinEffect("E1_145",true);
	CCSprite::onExit();
	CCDirector::sharedDirector()->getTouchDispatcher()->removeDelegate(this);
}

