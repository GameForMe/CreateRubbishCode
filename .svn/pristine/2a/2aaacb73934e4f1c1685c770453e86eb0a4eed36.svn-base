#ifndef CREATEROLE_H
#define CREATEROLE_H

#include "cocos2d.h"
#include "cocos-ext.h"
using namespace cocos2d;
#include "CmdAdapter.h"
#include "GameActionNode.h"
using namespace cocos2d::extension;

class CreateRoleUi;
class MovingBackGround;

class CreateRole
{
public:
	static CreateRole *getInstance();
	inline CCScene *getScene(bool bCreateIfNotExist = false) 
	{
		if(bCreateIfNotExist)
		{
			if(!_scene)
			{
				_scene = CCScene::create();
				//_scene->retain();
			}
			return _scene;
		}
		else
		{
			CC_ASSERT(_scene);
			return _scene;
		}
	}
	void open();
	void close();
	void onBackBtnPressed();
	void onBeginGameBtnPressed();
	void onRandNameBtnPressed();
	void runSelectjobAction();
	void setRoleAnim(GameActionNode* node,float action = 0.1f,bool isBegin = false,int Tag = 0,float xScale =0.0f,float yScale =0.0f);
private:
	unsigned int onCreateRole(s_net_cmd *cmd);
	unsigned int onSelectRole(s_net_cmd *cmd);
	unsigned int onGotoNewMap(s_net_cmd *cmd);
	unsigned int onRoleInitStateAtt(s_net_cmd *cmd);
	unsigned int onServerSynchronizeLine(s_net_cmd *cmd);

private:
	CCScene *_scene;
	CreateRoleUi *_createRoleUi;
	MovingBackGround *_moveBack;

	std::set<std::string> _plist;
	cocos2d::extension::CCBReader * ccbReader;
	string _userJob;
	std::map<unsigned int, int> m_roleCreateTimeMap;
};

#endif //CREATEROLE_H