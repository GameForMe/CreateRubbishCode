#pragma once
#include "CmdAdapter.h"
#include "BaseDefine.h"
#pragma pack(push, 1)
//!废弃
#define QUEST_CREATURES_COUNT				6			//任务怪物种类
#define QUEST_ITEMS_COUNT					8			//任务物品种类
#define QUEST_REW_ITEM						3			//任务奖励物品种类
#define DYNAMIC_TARGET_COUNT				4			//任务动态目标的数量
#define SCRIPTQUEST_VARIABLE_MAX			5

enum EQuestTargetType
{
	EQTT_NULL		=	0,
	EQTT_Kill		=	1,		// 击杀目标
	EQTT_Collect	=	2,		// 收集道具	
	EQTT_NPCTalk	=	3,		// NPC对话
	EQTT_Invest		=	4,		// 调查地物
};

//任务接取失败原因
enum
{
	E_QUEST_NOT_EXIST								= 1,		//任务不存在
	E_QUEST_NPC_NOT_EXIST							= 2,		//任务NPC不存在
	E_QUEST_NPC_TOO_FAR								= 3,		//任务NPC与玩家距离太远
	E_QUEST_FAILED_ADD 								= 4,        //增加任务失败
	E_QUEST_FATIGUEGUARD							= 5,		//防沉迷保护

	E_CanTakeQuest_FAILED_LOW_LEVEL					= 11,		//没有足够的等级
	E_CanTakeQuest_FAILED_LOW_REP					= 12,		//没有足够的声望
	E_CanTakeQuest_ALREADY_DONE						= 13,		//已经完成了
	E_CanTakeQuest_ALREADY_TAKE						= 14,		//已经接取了
	E_CanTakeQuest_FAILED_MISSING_ITEMS				= 15,		//没有任务所需要的物品
	E_CanTakeQuest_FAILED_MISSING_SKILLS			= 16,		//没有任务所需要的技能
	E_CanTakeQuest_FAILED_MISSING_Att				= 17,		//没有任务所需要的人物属性
	E_CanTakeQuest_FAILED_WRONG_SEX					= 18,       //任务所需要的性别
	E_CanTakeQuest_FAILED_WRONG_CLASS				= 19,       //任务所需要的职业
	E_CanTakeQuest_FAILED_NOT_ENOUGH_MONEY			= 20,       //没有任务所需要的金钱
	E_CanTakeQuest_FAILED_QUEST_NUM_FULL			= 21,		//任务满了，不能再接
	E_CanTakeQuest_FAILED_WRONG_MAP 				= 22, 		//地图不对
	E_CanTakeQuest_FAILED_PREV 						= 23,      	//任务前序不对
	E_CanTakeQuest_FAILED_NEXT 						= 24,      	//任务后续不对
	E_CanTakeQuest_FAILED_WRONG_TIME 				= 25,       //任务时间不对
	E_CanTakeQuest_FAILED_WRONG_TIMES 				= 26,       //任务接取次数不对
	E_CanTakeQuest_FAILED_MISS_ITEM_OF_QUEST 		= 27,       //没有任务物品
	E_CanTakeQuest_FAILED_WRONG_TRIGGER 			= 28,       //任务触发器不对
	E_CanTakeQuest_FAILED_SCRIPT					= 29,		//脚本判断失败，客户端不提供错误提示，服务器直接发送

	E_CanCompleteQuest_FAILED_MISSING_Creature		= 30,		//没有任务完成所需要的生物
	E_CanCompleteQuest_FAILED_MISSING_NPC			= 31,		//没有任务完成所需要的NPC
	E_CanCompleteQuest_FAILED_MISSING_ITEMS			= 32,		//没有任务完成所需要的物品
	E_CanCompleteQuest_FAILEDENOUGH_MONEY			= 33,		//没有任务完成所需要的金钱
	E_CanCompleteQuest_BAG_FULL						= 34,		//背包没有地方，放置奖励物品
	E_CanCompleteQuest_FALIED_SCRIPT				= 35,		//脚本判断失败，客户端不提供错误提示，服务器直接发送

	E_CanTakeQuest_Tomorrow							= 36,		//每天只能完成一次
	E_CanTakeQuest_Week								= 37,		//只能在星期×完成

	E_CanUpdateQuest_Fail							= 40,		//不能更新

	E_TakeLoopQuest_Failed_Num_Full 				= 41,		//循环随机任务满了

	EGDE_Put_Already								= 42,		// 已经发布悬赏
	EGDE_Put_Cant									= 43,		// 不能悬赏该任务
	EGDE_Put_OutOfNumber							= 44,		// 已经达到最大发数
	EGDE_Put_OutOfMoney								= 45,		// 钱不足以悬赏该任务
	EGDE_Put_OutOfYuanBao							= 46,		// 元宝不足
	EGDE_Put_CheckItem								= 47,		// 请检查奖励物品
	EGDE_Get_NotExist								= 48,		// 悬赏任务不存在
	EGDE_Get_BeTaked								= 49,		// 已经被接取
	EGDE_Get_Already								= 50,		// 已经接取同类悬赏任务
	EGDE_Get_OutOfNumber							= 51,		// 已经达到最大接取数
	EGDE_Get_OutOfMoney								= 52,		// 钱不足以接取该悬赏
	EGDE_NotBelongYou								= 53,		// 悬赏任务不属于你
	EGDE_CantGiveUp									= 54,		// 不能放弃悬赏
	EGDE_OnlyReciverComplete						= 55,		// 只有接取者才能完成悬赏任务
	EGDE_CantCancelPut								= 56,		// 不能取消发布悬赏
	EGDE_Get_OutOfVigour							= 57,		// 元气值不足
	EGDE_Get_OutOfLevel25						= 58,		// 等级低于25,不能接取悬赏

	E_FAILED_QUEST_FORBID_DELETE					= 60,		//不能删除
	E_Failed_Track_Number_Max						= 61,		// 不能追踪
	E_CanTakeQuest_FAILED_BAGFULL					= 62,		// 背包已满，无法接取该任务
	E_CanTakeQuest_FAILED_GUILD						= 63,		// 需要加入帮会 
	E_CanTakeQuest_FAILED_MASTER					= 64,		// 需要有师傅
	E_CanTakeQuest_FAILED_PRENTICE					= 65,		// 需要有徒弟
	E_CanTakeQuest_FAILED_OnlyBangZhu				= 66,		// 帮主才能接取

	E_CanCompleteQuest_NotCompleteAll				= 67,  		//未达成所有条件
	E_CanTakeQuest_FAILED_GUILD_LEVEL				= 68,		// 帮会没有足够等级

	EBuyFreshNumFull								= 69,
	EBuyFreshNumOutOfMoney							= 70,
	EBuyFreshNumOutOfNum							= 71,

	E_CanTakeQuest_FAILED_CantHasItem				= 72,		// 拥有某个道具不能接取该任务
	E_CanTakeQuest_FAILED_VIP_LEVEL					= 73,		// VIP等级不足
	E_CanTakeQuest_FAILED_Not_Find					= 74,		//没有发现该悬赏任务
	E_CanTakeQuest_FAILED_Not_Enough				= 75,		//该悬赏任务已被领取完
	E_CanTakeQuest_FAILED_Have_Quest				= 76,		//已经领取过悬赏任务
	E_CanTakeQuest_FAILED_Not_Complete				= 77,		//未达到完成该任务的条件
	E_CanTakeQuest_FAILED_Not_Accept				= 78,		//没有领取过该任务
	E_CanTakeQuest_FAILED_Not_Accept_Num			= 79,		//今日领取悬赏任务次数已达上限
	E_CanTakeQuest_FAILED_NotEnough_SpaceInBag		= 80,		//背包空间不足
	E_CanTakeQuest_FAILED_NotEnough_Level			= 81,		//等级不足

	E_CanTakeQuest_FAILED_BIQI_TASKS_COUNT          = 82,       //今日比奇任务次数已达上限，请明天再来

	E_CanTakeQuest_FAILED_Not_Need_Enter_Fuben		= 85,		//该任务不需要进入剧情副本
	E_CanTakeQuest_FAILED_Not_Find_Fuben			= 86,		//剧情副本不存在
	E_CanTakeQuest_FAILED_Not_Enter_Fuben			= 87,		//此处不可进入剧情副本

	E_CanTakeQuest_FAILED_Not_Get_Num				= 88,		// 领取帮派任务时，没有足够的领取次数
	E_CanTakeQuest_FAILED_Not_Enough_Mission		= 89,		// 领取帮派任务时，没有足够的任务内存
	E_CanTakeQuest_FAILED_Help_Accept_Limit			= 90,		//今日帮带任务领取次数已达上限
	E_Quset_Error_Max,
};
struct NET_SIS_get_Last_Huan_Task_info : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_get_Last_Huan_Task_info)
	unsigned short  questId;
	unsigned short  role_id;
};
struct NET_SIC_npc_accept_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_npc_accept_quest)
	unsigned int		dwNPCID;		// 接取任务NPC唯一ID 
	unsigned short		u16QuestID;		// 任务ID
};

struct NET_SIS_accept_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_accept_quest)
	unsigned short		u16QuestID;		// 任务ID
	unsigned int		dw_error_code;	// 错误码
};

struct NET_SIC_complete_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_complete_quest)
	unsigned int		dwNPCID;					// 完成任务NPC唯一ID 
	unsigned short		u16QuestID;					// 任务ID
	int		nRewChoicesItemIndex;		// 可选奖励物品序号
	unsigned int		dw_safe_code;
};

//-----------------------------------------------------------------------------
//	更新物品任务数据
//-----------------------------------------------------------------------------
struct NET_SIS_quest_update_item : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_quest_update_item)
	unsigned short		u16QuestID;						// 任务ID
	int			nItemIndex;						// 物品序号
	signed short		n16NewItemNum;					// 更新过后的物品计数
};

struct NET_SIS_complete_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_complete_quest)
	unsigned short			u16QuestID;					// 任务ID
	unsigned short          next_quest_id;               //下一任务id
	unsigned int			dw_error_code;				// 错误码
	int						nBeishu;
};

struct tagCompleteQuestMsgInfo
{
	unsigned short		u16QuestID;								// 任务ID
	unsigned int		dwStartTime;							// 记录任务中接受第一个任务的时间
	int		nTimes;									// 一个时期内完成的任务次数
};

//!废弃
struct tagQuestDynamicTarget
{
	EQuestTargetType	 eTargetType;							// 任务目标类型
	unsigned int				dwQuestTipsID;
	unsigned int				dwTargetID[DYNAMIC_TARGET_COUNT];		// 目标TypeID
	int					nTargetNum[DYNAMIC_TARGET_COUNT];		// 目标数量
	tagQuestDynamicTarget()
	{
		memset(dwTargetID, 0XFF, sizeof(unsigned int)*DYNAMIC_TARGET_COUNT);
	}
};

struct tagQuestDynamicReward
{
	int	rew_item[QUEST_REW_ITEM];						//任务奖励的物品ID
	char	rew_item_num[QUEST_REW_ITEM];					//任务奖励的物品数量
	char	rew_item_quality[QUEST_REW_ITEM];				//任务奖励的物品品级
	char		rew_item_bind[QUEST_REW_ITEM];				//是否绑定
	int	rew_choice_item[QUEST_REW_ITEM];			//任务奖励的可选物品ID
	char	rew_choice_item_num[QUEST_REW_ITEM];		//任务奖励的可选物品数量
	char	rew_choice_quality[QUEST_REW_ITEM];			//任务奖励的可选物品品级
	char		rew_choice_bind[QUEST_REW_ITEM];			//是否绑定
	tagQuestDynamicReward( )
	{
		memset(rew_item_bind,1, sizeof(rew_item_bind));
		memset(rew_choice_bind,1, sizeof(rew_item_bind));
	}
};

struct tagQuestVar
{
	//!完成条件描述
	int TargetMsgID;
	//!变量id
	short ID;
	//!值
	short  Value;
	//!完成值
	short  CompValue;
	//!失败值
	short  FailValue;
};

struct tagScriptQuestVar
{
	int OverviewMsgID;
	char   Number;
	tagQuestVar stVariable[SCRIPTQUEST_VARIABLE_MAX];
};


struct tagIncompleteQuestMsgInfo
{
	unsigned short		u16QuestID;								// 任务ID
	unsigned int	dwAcceptTime;							// 接收任务的时间
	unsigned int	dwQuestFlag;
	short	n16CreatureNum[QUEST_CREATURES_COUNT];	// 杀怪数量
	short	n16ItemNum[QUEST_ITEMS_COUNT];			// 物品数量
	//tagQuestDynamicTarget	DynamicTarget;			// 动态目标任务才会发给客户端
	//tagQuestDynamicReward	DynamicReward;			// 动态任务奖励
	//tagScriptQuestVar		ScriptQuestVar;			//脚本设置数据
};


struct NET_SIS_get_role_init_state_incomplete_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_get_role_init_state_incomplete_quest)
	int					n_num;						// 任务个数
	tagIncompleteQuestMsgInfo incompleteQuest[1];
};



struct NET_SIS_get_role_init_state_complete_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_get_role_init_state_complete_quest)
	int					n_num;						// 任务个数
	tagCompleteQuestMsgInfo completeQuest[1];
};

struct NET_SIS_add_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_add_quest)
	unsigned short		u16QuestID;							// 任务ID
	unsigned int		dwFlag;								//任务是否被追踪
};

struct NET_SIS_quest_update_kill_creature : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_quest_update_kill_creature)
	unsigned short		u16QuestID;						// 任务ID
	int			nCreatureIndex;					// 怪物序号
	DWORD       nMonsterTypeID;                 //被杀怪物类型ID
	unsigned short		n16NewKillNum;					// 更新过后的杀怪计数
};

//struct NET_SIC_posthouse : public s_net_cmd
//{
//	DECL_NETCMD(NET_SIC_posthouse)
//	unsigned int	dwNPCID;	// 职能NPC ID
//	int	nIndex;		// 驿站目的地在该NPC处索引
//	unsigned int	dwPosID;	// 驿站id
//	unsigned char	by_type;	// 副本类型0 普通1 精英（如果传入普通地图此值添）
//	unsigned int	dwMapID;	// 目的地Map ID
//};
//
struct NET_SIS_posthouse : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_posthouse)
	unsigned int	dw_error_code;
	DWORD	dw_role_id;
};

struct NET_SIS_delete_quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_delete_quest)
	short		u16QuestID;					// 任务ID
	unsigned int	dw_error_code;				// 错误码
};

//接受悬赏任务
struct NET_SIC_Accept_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Accept_Reward_Quest)
		short		questId;
};

struct NET_SIS_Accept_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Accept_Reward_Quest)
		short		questId;
	DWORD		dwError; // 0成功
};

//完成悬赏任务
struct NET_SIC_Complete_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Complete_Reward_Quest)
		short		questId;
};

struct NET_SIS_Complete_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Complete_Reward_Quest)
		short		questId;
	DWORD		dwError; // 0成功
};

//放弃悬赏任务
struct NET_SIC_Abandon_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Abandon_Reward_Quest)
		short		questId;
};

struct NET_SIS_Abandon_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Abandon_Reward_Quest)
		DWORD	dwError; // 0成功
};

//更新悬赏任务完成度
struct NET_SIC_Update_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Update_Reward_Quest)
};

struct NET_SIS_Update_Reward_Quest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Update_Reward_Quest)
	short		questId;
	int			completeNum;
};

//更新悬赏任务列表
struct NET_SIC_Update_Reward_Quest_List : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Update_Reward_Quest_List)
	short  type;
};

//马上传送到任务点
struct NET_SIC_Goto_Quest_Pos : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_Goto_Quest_Pos)
	int			npcid;
	DWORD		mapid;
	FLOAT		fX;
	FLOAT		fZ;
};

//马上传送到任务点结果返回
struct NET_SIS_Goto_Quest_Pos : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Goto_Quest_Pos)
	int			npcid;
	bool		isTherMap;
	DWORD		errinfo;
};

struct RewardQuestData
{
	short		questId;		//任务Id
	short		completeNum;	//完成数量			//（已领取数量）
	short		needNum;		//需要数量			//（可领取总数量）
	RewardQuestData()
	{
		questId = 0;
		completeNum = 0;
		needNum = 0;
	}
};

struct NET_SIS_Update_Reward_Quest_List : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_Update_Reward_Quest_List)
	DWORD		restTime;//剩余刷新时间
	int			num;
	RewardQuestData data[1];
};

#pragma pack(pop)
