#ifndef OFFFLINEEXPUI_H
#define OFFFLINEEXPUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "ProgressBar.h"
#include "BSAnimate.h"
#include "AnimationCache.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class OffLineExpUiLayer;
class LocalPlayer;

class OffLineExpUi : public UiInterface
{
	friend class OffLineExpUiLayer;
public:
	virtual CCNode *openUi();
	OffLineExpUiLayer *getUiLayer();
	void updateData();
};

class OffLineExpUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class OffLineExpUi;

public:
	OffLineExpUiLayer();
	~OffLineExpUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(OffLineExpUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void onFreeBackBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onDoubleBackBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void PlayGambleAn1();
	void PlayGambleAn2();
	void ShowFreeAwardUI(float dt);
	void updateData();
private:
	//设置面板上的离线时间和离线经验
	void setOffLineTime(unsigned int time,int exp);
	void setOffSelfExp(int exp);
	void setOffActivityExp(int exp);
	void setOffTotalExp(int exp);
	void setOffPercent(LocalPlayer* ploc);
	void setOffLineCoin(int money);
	void setOffLineNextTime(float dt);
	void animationCallback2(CCNode *node);
	void animationCallback1(CCNode *node);
	long GetOffLineLeaveTime();
	void ShowDiceAwardUI(float dt);
	void UpdateBtnImage(int exp);
	void CloseAwardUI(float dt);
protected:
	CCSprite *_frame;

	LabelFT *_offlineTimeExp; //离线时间时间
	LabelFT *_offactivityexp;//送花 双修 抢红包获得的经验
	LabelFT *_offselfexp;  //自身增长的经验
	LabelFT *_offPercent;//经验球百分比
	LabelFT *_offlineNextTime;//距离下次领奖的时间
	CCLabelBMFont * _offLineFreeFont; //免费领取要的经验
	CCLabelBMFont *_offLineGambleMoney;				///筛子得来的经验所需要的元宝label
	CCSprite * _offLineFreeSprite;

	ProgressBar *_expProgress;//进度条
	AnimationCache::AnimateList _animsList[2];
	CCSprite *shaizisprite[2];
	float _offselfexpPositionx;
	float _offselfexpPositiony;
	float _offactivityexpPositionx;
	float _offactivityexpPositiony;
	float _offlineTimePositionx;
	float _offlineTimePositiony;
	float _offPercentPositionx;
	float _offPercentPositiony;
	float _freespitePosx;
	float _freespitePosy;
	float _gambleMoneyPosx;
	float _gambleMoneyPosy;
	CCSprite * sprite1;
	CCSprite * sprite2;
};


#endif //OFFFLINEEXPUI_H