/**
 *	@file		AnswerUI.h
 *	@author		shenyaoyan
 *	@date		2016/06/07
 *	@version	
 *	@brief		趣味答题的界面
 */

#ifndef _ANSWERUI_H_
#define _ANSWERUI_H_

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "NormalLayer.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class ItemNode;
class CoverButton;
struct refresh_question_info;
struct get_right_answer;
struct answer_over;
struct refresh_lucky_star;
struct refresh_guild_help;

class AnswerUI
	:public UiInterface
{
public:
	AnswerUI();
	~AnswerUI();
	virtual CCNode* openUi();
};

class AnswerUiLayer
	: public NormalLayer
{
	enum NodeTag
	{
		NT_ExamCount_Label    = 1,
		NT_ExamTime_Label     = 2,
		NT_ExamTime_Show      = 3,
		NT_Title_Lable        = 4,
		NT_Title_Show         = 5,
		NT_AllExp_Label       = 6,
		NT_CurExp_Label       = 7,
		NT_Reward_Small       = 8,
		NT_Reward_Big         = 9,

		NT_Lucky_Star_1       = 11,
		NT_Lucky_Star_2	      = 12,
		NT_Lucky_Star_3       = 13,

		NT_GuildHelp_1        = 15,
		NT_GuildHelp_2        = 16,
		NT_GuildHelp_3        = 17,
	};
public:
	AnswerUiLayer();
	~AnswerUiLayer();

	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(AnswerUiLayer,create);

	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(CCNode* pNode,CCNodeLoader* pNodeLoader);

	virtual void onEnter();
	virtual void onExit();

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	virtual void close();

	void updateUI();

	virtual void onClosedBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onGuildHelpBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onAnserABtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onAnserBBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onAnserCBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onAnserDBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);
	virtual void onLuckyBtnPressed(CCObject* pSender,CCControlEvent pCCControlEvent);

	void timeCount(float dt);
	void setTime(unsigned int time);
	void setLuckyStar();
	void setGuildHelp();

	void setLoadingImage();

	void getRefresh(refresh_question_info* trans);
	void getRightAnswer(get_right_answer* trans);
	void getAnswerOver(answer_over* trans);
	void usedLuckyStar(refresh_lucky_star* trans);
	void usedGuildHelp(refresh_guild_help* trans);

	void randAnswerLabel();

	void askNextQuestion(float dt);
	bool canTouch();
	void answerOver(float dt);

private:
	LabelFT* m_examCount;
	LabelFT* m_examTime;
	LabelFT* m_titleShow;
	LabelFT* m_titleLabel;
	LabelFT* m_allExp;
	LabelFT* m_curExp;

	CCLabelTTF* m_answerALabel;
	CCLabelTTF* m_answerBLabel;
	CCLabelTTF* m_answerCLabel;
	CCLabelTTF* m_answerDLabel;

	LabelFT* m_answerA;
	LabelFT* m_answerB;
	LabelFT* m_answerC;
	LabelFT* m_answerD;

	CCControlButton* m_guildHelpButton;
	CCControlButton* m_luckyStarButton;

	ItemNode* m_reward10;
	ItemNode* m_reward20;

	CoverButton* m_coverButton[4];
	CoverButton* m_coverButton1;
	CoverButton* m_coverButton2;
	CoverButton* m_coverButton3;
	CoverButton* m_coverButton4;

	CCSprite* m_loadingSprite;

	CCSprite* m_luckyStar[3];
	CCSprite* m_guildHelp[3];
	int titleNumber[4];

	int m_selectIndex;

	CCNode* m_overNode;

	CCSprite* m_rewardSprite;
	ItemNode* m_rewardItem;
	LabelFT* m_rewardLabel;

	bool m_isFirstShow;
	bool m_isLockButton;
};

#endif