#ifndef BUFF_EFFECT_SHOW_H
#define BUFF_EFFECT_SHOW_H

#include "cocos2d.h"
#include "cocos-ext.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class BuffEffectShow : public CCNode
{
public:
	CREATE_FUNC(BuffEffectShow);
	bool init();
	virtual void onExit();
		
	void run_effect(std::string pic_name);

private:
	void effect_end();

private:
	std::set<std::string> _loadSpriteSheet;
	cocos2d::extension::CCBReader * _ccbReader;

	CCSprite* m_effect_pic;
};

class BuffEffectShowLayer
	: public CCNode
	//, public cocos2d::extension::CCBSelectorResolver
	//, public cocos2d::extension::CCBMemberVariableAssigner
	//, public cocos2d::extension::CCNodeLoaderListener
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(BuffEffectShowLayer,create);

	//virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	//virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	//virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	//virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
};

class BuffEffectShowLoader : public cocos2d::extension::CCNodeLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(BuffEffectShowLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(BuffEffectShowLayer);
};

#endif