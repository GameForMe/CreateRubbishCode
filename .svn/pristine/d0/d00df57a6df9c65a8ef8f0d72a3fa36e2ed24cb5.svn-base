#ifndef ARENAPKUI_H
#define ARENAPKUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiTools.h"
#include "UiInterface.h"
#include "ProgressBar.h"
#include "GameActionNode.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class ArenaPKUiLayer;

enum ArenaPKUiTag
{	
	LIFTBG = 0,//左边所有
	RIGHTBG = 1,//右边所有
	V = 3,//V
	S = 4//S
};

enum ArenaPKUiLRTag
{	
	ROLENAMELR = 1,
	ROLEBODY = 2,
	ROLEPOWER = 3,
	ROLEWINSTREAK = 4,//连胜
	ROLERANK = 5,//排名
	HOTPROGRESSLR = 6,//热力条
	HOT = 7//热力百分比
};

class ArenaPKUi : public UiInterface
{
public:
	ArenaPKUi();
	~ArenaPKUi();

	CCNode* openUi();
};

class ArenaPKUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	enum eArenaPKTag
	{
		APKT_FightNumValue = 3,				//战斗力label
		APKT_FightNumSE = 30,				//战斗力特效
		APKT_FightNumSP,					//战斗力字体
		APKT_BattlePointLab=82						//战斗力数值	82

	};

	ArenaPKUiLayer(){};
	~ArenaPKUiLayer()
	{
		CC_SAFE_DELETE(_hotProgressL);
		CC_SAFE_DELETE(_hotProgressR);
	};
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(ArenaPKUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);

	//界面初始化加载时执行
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	//界面退出后执行
	virtual void onExit();
	virtual void onEnter();
	void sendPkMsg();
	void setUiData();
	//std::string getChangeRoleNameType(wchar_t* roleName);
	GameActionNode* getFightSuperEffect();					//创建一个战斗力特效

private:
	CCLabelBMFont* _fightNumBLabelL;					//战斗力艺术字//add by vvv 2014.11.19
	CCLabelBMFont* _fightNumBLabelR;					//战斗力艺术字//add by vvv 2014.11.19
	CCSprite* rightBg;//右边所有
	CCSprite* liftBg;//左边所有
	CCSprite* vBg;//v
	CCSprite* sBg;//s
	//左边人物
	LabelFT* roleNameL;
	CCSprite* roleBodyL;
	LabelFT* rolePowerL;
	LabelFT* roleWinStreakL;//连胜
	LabelFT* roleRankL;//排名
	ProgressBar* _hotProgressL;//热力条
	LabelFT* hotL;//热力百分比
	//右边人物
	LabelFT* roleNameR;
	CCSprite* roleBodyR;
	LabelFT* rolePowerR;
	LabelFT* roleWinStreakR;//连胜
	LabelFT* roleRankR;//排名
	ProgressBar* _hotProgressR;//热力条
	LabelFT* hotR;//热力百分比
	GameActionNode* _fightNumAcNode1;				//左侧战斗力特效
	GameActionNode* _fightNumAcNode2;				//右侧战斗力特效
	std::set<std::string> _plist;				//保存特效plist名称
};

#endif //FUBENRANKUI_H