/*******************************************************************************

Copyright 2010 by tiankong Interactive Game Co., Ltd.
All rights reserved.

This software is the confidential and proprietary information of
tiankong Interactive Game Co., Ltd. ('Confidential Information'). You shall
not disclose such Confidential Information and shall use it only in
accordance with the terms of the license agreement you entered into with
tiankong Interactive  Co., Ltd.

*******************************************************************************/

/**
*	@file		common_msg_define.h
*	@author		lc
*	@date		2014/06/23	initial
*	@version	0.0.1.0
*	@brief		消息流协议
*/

#ifndef COMMON_MSG_DEFINE
#define COMMON_MSG_DEFINE
//协议必须大写

//**************************************************************************************************//
//													快速领悟相关														 //
//**************************************************************************************************//
//空协议
#define NET_C2G_PROC_SKILL_ADD_EXP "NET_C2G_PROC_SKILL_ADD_EXP" // 客户端通知服务器执行快速领悟

//-----------------------------------------华丽的分割线--------------------------------------------//

//快速修炼结果(DWORD) + 本日领悟次数(INT) + 暴击倍数(INT) + 加了多少技能点(DWORD)
#define NET_G2C_PROC_SKILL_ADD_EXP_RESULT "NET_G2C_PROC_SKILL_ADD_EXP_RESULT" // 服务器通知客户端快速领悟结果

//技能点上限(DWORD) + 本日领悟次数(INT)
#define NET_G2C_SKILL_EXP_INFO "NET_G2C_SKILL_EXP_INFO"		// 服务器通知客户端技能点相关信息

//**************************************************************************************************//
//													装备融合相关														 //
//**************************************************************************************************//
//Src装备ID(INT64) + 类型(INT)[1=普通融合 + 数量(INT) + <<tagItemSerial(struct)>>,2=加速融合,3=高级融合] 
#define NET_C2G_PROC_EQUIP_FUSION "NET_C2G_PROC_EQUIP_FUSION"	// 客户端通知服务器执行装备融合

//Src装备ID(INT64)
#define NET_C2G_PROC_EQUIP_FUSION_LVUP "NET_C2G_PROC_EQUIP_FUSION_LVUP"	// 客户端通知服务器执行融合升阶

//Src装备ID(INT64)
#define NET_C2G_PROC_EQUIP_ATTR_RANDOM "NET_C2G_PROC_EQUIP_ATTR_RANDOM" // 客户端通知服务器执行洗炼

#define NET_C2G_PROC_FUSION_DEGREES "NET_C2G_PROC_FUSION_DEGREES" // 客户端请求熔炉温度
// 升阶锁定
#define NET_C2G_PROC_EQUIP_FUSION_LOCK "NET_C2G_PROC_EQUIP_FUSION_LOCK" //客户端通知服务器锁定属性

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误编号] + 类型(INT)[1=普通融合,2=加速融合 + 暴击数(INT),3=高级融合,4=物品融合] + 当前融合经验(DWORD)
#define NET_G2C_PROC_EQUIP_FUSION_RESULT "NET_G2C_PROC_EQUIP_FUSION_RESULT"	// 服务器通知客户端执行装备融合结果

//结果(DWORD)[0=成功 + Src装备ID(INT64),非0=错误编号]
#define NET_G2C_PROC_EQUIP_FUSION_LVUP_RESULT "NET_G2C_PROC_EQUIP_FUSION_LVUP_RESULT" // 服务器通知客户端执行装备融合升阶结果

//结果(DWORD)[0=成功 + Src装备ID(INT64),非0=错误编号]
#define NET_G2C_PROC_EQUIP_ATTR_RANDOM_RESULT "NET_G2C_PROC_EQUIP_ATTR_RANDOM_RESULT" // 服务器通知客户端洗炼结果

#define NET_G2C_PROC_FUSION_DEGREES_RESULT "NET_G2C_PROC_FUSION_DEGREES" // 服务器通知客户端熔炉温度
// 升阶锁定
#define NET_G2C_PROC_EQUIP_FUSION_LOCK "NET_G2C_PROC_EQUIP_FUSION_LOCK" //服务器通知客户端锁定结果
//**************************************************************************************************//
//													装备升星相关														 //
//**************************************************************************************************//
//Src装备ID(INT64)
#define NET_C2G_REQUEST_EQUIP_STAR_LEVEL_UP "NET_C2G_REQUEST_EQUIP_STAR_LEVEL_UP" //客户端通知服务器请求升星

//Src装备ID(INT64) + Use装备ID1(INT64) + Use装备ID2(INT64) + Use装备ID3(INT64)
#define NET_C2G_PROC_EQUIP_STAR_LEVEL_UP "NET_C2G_PROC_EQUIP_STAR_LEVEL_UP" //客户端通知服务器执行升星

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功 + 属性个数(INT) + <<属性类型(INT) + 附加值(INT32)>> + 战斗力(INT),非0=错误编号]
#define NET_G2C_REQUEST_EQUIP_STAR_LEVEL_UP_RESULT "NET_G2C_REQUEST_EQUIP_STAR_LEVEL_UP_RESULT" //服务器通知客户端请求升星结果

//结果(DWORD)[0=成功 + SrcEquipID(INT64), 1=失败, 其他=错误编号]
#define NET_G2C_PROC_EQUIP_STAR_LEVEL_UP_RESULT "NET_G2C_PROC_EQUIP_STAR_LEVEL_UP_RESULT" //服务器通知客户端升星结果

//**************************************************************************************************//
//													装备升级相关														 //
//**************************************************************************************************//
//Src装备ID(INT64)
#define NET_C2G_REQUEST_EQUIP_LEVEL_UP "NET_C2G_REQUEST_EQUIP_LEVEL_UP" //客户端请求装备升级

//ItemID(DWORD) + Count(INT16) + 物品在服务器的位置(Byte)
#define NET_C2G_PROC_BUY_EQUIP_LEVEL_UP_ITEM "NET_C2G_PROC_BUY_EQUIP_LEVEL_UP_ITEM" //客户端通知服务器购买装备升级材料

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功 + 属性个数(INT) + << 属性类型(INT) + 附加值(INT32) >>，非0=错误编号 ]
#define NET_G2C_REQUEST_EQUIP_LEVEL_UP_RESULT "NET_G2C_REQUEST_EQUIP_LEVEL_UP_RESULT" //客户端请求装备升级结果

//Kind(INT)[0=成功,非0=错误代码]
#define NET_G2C_PROC_BUY_EQUIP_LEVEL_UP_ITEM_RESULT "NET_G2C_PROC_BUY_EQUIP_LEVEL_UP_ITEM_RESULT" //购买装备材料结果

//**************************************************************************************************//
//													物品合成相关														 //
//**************************************************************************************************//
//ItemID(DWORD) + ItemSID(INT64) + 合成类型(INT)[0=普通合成,1=一键合成 + 堆叠数(DWORD)]
#define NET_C2G_PROC_ITEM_COMPOSE "NET_C2G_PROC_ITEM_COMPOSE" //客户端通知服务器执行物品合成

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误编号]
#define NET_G2C_PROC_ITEM_COMPOSE_RESULT "NET_G2C_PROC_ITEM_COMPOSE_RESULT" //服务器通知客户端物品合成结果

//**************************************************************************************************//
//													功法融合相关														 //
//**************************************************************************************************//
//Kind(INT)[1=功法背包，2=功法临时背包]
#define NET_C2G_PROC_KUNGFU_ONE_KEY_FUSION "NET_C2G_PROC_KUNGFU_ONE_KEY_FUSION" //客户端请求功法一键融合

//Index(INT16)
#define NET_C2G_PROC_KUNGFU_PICK_UP "NET_C2G_PROC_KUNGFU_PICK_UP" //客户端请求功法拾取

//-----------------------------------------华丽的分割线--------------------------------------------//

//Kind(INT)[0=成功,非0=错误代码] + MainConType(BYTE) + MainPos(INT16) + BackPos(INT16)
#define NET_G2C_PROC_KUNGFU_FUSION_RESULT "NET_G2C_PROC_KUNGFU_FUSION_RESULT" //功法融合结果

//Kind(INT)[0=成功,非0=错误代码]
#define NET_G2C_PROC_KUNGFU_ONE_KEY_FUSION_RESULT "NET_G2C_PROC_KUNGFU_ONE_KEY_FUSION_RESULT" //客户端请求功法一键融合结果

//结果(DWORD)[0=成功 + Index(INT16),1=错误代码]
#define NET_G2C_PROC_KUNGFU_PICK_UP_RESULT "NET_G2C_PROC_KUNGFU_PICK_UP_RESULT" //客户端请求功法拾取结果


//**************************************************************************************************//
//													游戏副本相关														 //
//**************************************************************************************************//
//[bing] todo:
#define NET_C2G_ENTER_FUBEN "NET_C2G_ENTER_FUBEN" //进入副本

//空协议
#define NET_C2G_REQUEST_LEAVE_INSTANCE "NET_C2G_REQUEST_LEAVE_INSTANCE" //请求离开副本

//-----------------------------------------华丽的分割线--------------------------------------------//

//数量(DWORD) + s_enter_map_limit
#define NET_G2C_PROC_MAP_LIMIT_INFO "NET_G2C_PROC_MAP_LIMIT_INFO" //服务器通知客户端MapLimit信息 包括副本进入次数与星级评价

//todo: 
#define NET_G2C_PROC_SAODANG_INFO "NET_G2C_PROC_SAODANG_INFO" //服务器通知客户端扫荡结果

//todo: 
#define NET_G2C_PROC_FUBEN_FINAL_INFO "NET_G2C_PROC_FUBEN_FINAL_INFO" //服务器通知客户端副本完成结果

//todo: 1 = 副本不存在 2 = 扫荡次数已到10次 3 = 体力值不足 4 = 已加入到多人副本等待列表内 5 = 不满足进入多人副本条件 6 = 这个人不是队长 7 = 有队友条件不符合进入条件 8 = 扫荡副本没有达到3星评价 9 = 进入等级不符合 10 = 进入次数已满 11 = 体力已达上限 12 = 购买次数已达上限 13 = 元宝不足
#define NET_G2C_PROC_FUBEN_RET "NET_G2C_PROC_FUBEN_RET" //服务器通知客户端扫荡结果

//参与多人副本返回消息
#define NET_G2C_PROC_DUORENFUBEN_RET "NET_G2C_PROC_DUORENFUBEN_RET"

//结果(DWORD)[0=成功,1=错误代码]
#define NET_G2C_REQUEST_LEAVE_INSTANCE_RESULT "NET_G2C_REQUEST_LEAVE_INSTANCE_RESULT" //请求离开副本结果

//**************************************************************************************************//
//													游戏坐骑相关														 //
//**************************************************************************************************//
//坐骑等级(INT)
#define NET_C2G_PROC_RIDING_BY_RIDE_LV "NET_C2G_PROC_RIDING_BY_RIDE_LV" //客户端通知服务器骑乘

//-----------------------------------------华丽的分割线--------------------------------------------//

//Kind(INT)[0=成功 + 要骑的坐骑等级(INT) + 角色ID(DWORD),非0=错误代码]
#define NET_G2C_PROC_RIDING_BY_RIDE_LV "NET_G2C_PROC_RIDING_BY_RIDE_LV" //服务器通知客户端骑乘结果

//**************************************************************************************************//
//													BOSS挑战相关													 //
//**************************************************************************************************//
//请求服务器返回BOSS信息列表 目前只有时间信息
#define NET_C2G_REQUEST_BOSS_LIST "NET_C2G_REQUEST_BOSS_LIST"

//-----------------------------------------华丽的分割线--------------------------------------------//

//服务器返回给客户端BOSS信息列表  数量(INT) + [NPCTypeID(INT) + 剩余重生时间(INT)] 
#define NET_G2C_REQUEST_BOSS_LIST "NET_G2C_REQUEST_BOSS_LIST"
// 返回是否启用新版本BOSS列表界面 [2016-1-18 by willing]
#define NET_G2C_ASK_USE_NEW_BOSS_LIST   "NET_G2C_ASK_USE_NEW_BOSS_LIST"

//**************************************************************************************************//
//														竞技场相关														 //
//**************************************************************************************************//
//OP(INT)[0=验证,1=进入] + 对手角色ID(DWORD) + 排名(INT)
#define NET_C2G_REQUEST_JJC_PK "NET_C2G_REQUEST_JJC_PK" //竞技场请求挑战

//空协议
#define NET_C2G_REQUEST_JJC_POWER_UP "NET_C2G_REQUEST_JJC_POWER_UP" //竞技场请求觉醒

//空协议
#define NET_C2G_REQUEST_JJC_ADD_PK_COUNT "NET_C2G_REQUEST_JJC_ADD_PK_COUNT" //竞技场请求增加挑战次数

//空协议
#define NET_C2G_REQUEST_JJC_RESET_PK_CD "NET_C2G_REQUEST_JJC_RESET_PK_CD" //竞技场请求重置挑战CD时间

//空协议
#define NET_C2G_REQUEST_JJC_CHANGE_ENEMY "NET_C2G_REQUEST_JJC_CHANGE_ENEMY" //竞技场请求换一批对手

//空协议
#define NET_C2G_REQUEST_JJC_RANK "NET_C2G_REQUEST_JJC_RANK" //竞技场请求排行榜信息

//空协议
#define NET_C2G_REQUEST_JJC_JOIN_AI "NET_C2G_REQUEST_JJC_JOIN_AI" //请求加载竞技场AI

//-----------------------------------------华丽的分割线--------------------------------------------//

//<< tagJJCTargetRoleInfo(struct) >> + tagJJCRoleInfo(struct) + 可挑战次数(INT) + CD(INT)  
#define NET_G2C_SEND_JJC_INFO "NET_G2C_SEND_JJC_INFO" //服务器发送给客户端JJC信息

//Count(INT) + << tagJJCTargetRoleInfo(struct) >>
#define NET_G2C_SEND_JJC_RANK "NET_G2C_SEND_JJC_RANK" //服务器送给客户端JJC排行榜信息

//结果(DWORD)[0=成功 + OP(INT)[0=验证,1=进入],非0=错误代码]
#define NET_G2C_REQUEST_JJC_PK_RESULT "NET_G2C_REQUEST_JJC_PK_RESULT" //服务器通知客户端竞技场请求挑战结果

//结果(DWORD)[0 = 胜利,1 = 失败 + tagJJCRoleInfo(struct) + 可挑战次数(INT) + CD(INT)] 
#define NET_G2C_SEND_JJC_PK_RESULT "NET_G2C_SEND_JJC_PK_RESULT" //服务器通知客户端竞技场战斗结果

//结果(DWORD)[0 = 成功 + 当前觉醒次数(INT),非0 = 错误代码]
#define NET_G2C_REQUEST_JJC_POWER_UP_RESULT "NET_G2C_REQUEST_JJC_POWER_UP_RESULT" //服务器通知客户端请求竞技场觉醒结果

//结果(DWORD)[0 = 成功 + 当前可挑战次数(INT) + 本日已附加次数(INT),非0 = 错误代码]
#define NET_G2C_REQUEST_JJC_ADD_PK_COUNT_RESULT "NET_G2C_REQUEST_JJC_ADD_PK_COUNT_RESULT" //服务器通知客户端请求增加竞技场挑战次数结果

//结果(DWORD)[0 = 成功, 非 0 = 错误代码]
#define NET_G2C_REQUEST_JJC_RESET_PK_CD_RESULT "NET_G2C_REQUEST_JJC_RESET_PK_CD_RESULT" //服务器通知客户端竞技场请求重置挑战CD时间结果

//结果(DWORD)[0 = 成功, 非 0 = 错误代码]
#define NET_G2C_REQUEST_JJC_CHANGE_ENEMY_RESULT "NET_G2C_REQUEST_JJC_CHANGE_ENEMY_RESULT" //竞技场请求换一批对手结果

//金币(INT) + 经验(INT) + 钻石(INT) + 最高排名(INT)
#define NET_G2C_SEND_JJC_WIN_REWARD_INFO "NET_G2C_SEND_JJC_WIN_REWARD_INFO" //发送给客户端竞技场挑战胜利奖励信息

//-----------------------------------------华丽的分割线--------------------------------------------//

//tagJJCRoleInfo(struct)
#define NET_G2D_ADD_JJC_INFO "NET_G2D_ADD_JJC_INFO" //GS通知DB新增一笔竞技场信息

//RoleID(DWORD) + tagJJCRoleInfo(struct)
#define NET_G2D_UPD_JJC_INFO "NET_G2D_UPD_JJC_INFO" //GS通知DB更新一笔竞技场信息

//-----------------------------------------华丽的分割线--------------------------------------------//

//tagJJCRoleInfo(struct)
#define NET_D2G_SEND_JJC_INFO "NET_D2G_SEND_JJC_INFO" //DB向服务器发送JJC信息 //不能加分号 讨厌！@！@！@！@！@！@！@！@！@！

//AI个数(INT)
#define NET_D2G_SEND_JJC_AI "NET_D2G_SEND_JJC_AI" //DB向服务器发送JJCAI个数

//**************************************************************************************************//
//													邮件奖励相关														 //
//**************************************************************************************************//
//MailID(INT64)
#define NET_C2G_REQUEST_GET_MAIL_REWARD "NET_C2G_REQUEST_GET_MAIL_REWARD" //请求领取邮件奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//tagMailReward(struct)
#define NET_G2C_SEND_ADD_MAIL_REWARD "NET_G2C_SEND_ADD_MAIL_REWARD" //服务器通知客户端获得邮件奖励

//Count(INT) + tagMailReward(struct)
#define NET_G2C_SEND_ALL_MAIL_REWARD "NET_G2C_SEND_ALL_MAIL_REWARD" //服务器发给客户端所有邮件奖励

//结果(DWORD[0 = 成功, 非 0 = 错误代码]
#define NET_G2C_SEND_GET_MAIL_REWARD_RESULT "NET_G2C_SEND_GET_MAIL_REWARD_RESULT" //服务器通知客户端请求领取邮件奖励结果

//-----------------------------------------华丽的分割线--------------------------------------------//

//RoleID(DWORD)
#define NET_G2D_GET_ROLE_MAIL_REWARD_INFO "NET_G2D_GET_ROLE_MAIL_REWARD_INFO" //GS通知DB获取角色邮件奖励信息

//tagMailReward(struct)
#define NET_G2D_ADD_MAIL_REWARD_INFO "NET_G2D_ADD_MAIL_REWARD_INFO" //GS通知DB新增一笔邮件奖励信息

//MailID(INT64)
#define NET_G2D_DEL_MAIL_REWARD_INFO "NET_G2D_DEL_MAIL_REWARD_INFO" //GS通知DB删除一笔邮件奖励信息

//tagMailReward(struct)
#define NET_G2D_CHECK_MAIL_REWARD_COUNT "NET_G2D_CHECK_MAIL_REWARD_COUNT" //GS通知DB检查某不在线角色邮件奖励数量

//-----------------------------------------华丽的分割线--------------------------------------------//

//tagMailReward(struct)
#define NET_D2G_SEND_MAIL_REWARD_INFO "NET_D2G_SEND_MAIL_REWARD_INFO" //DB向服务器发送邮件奖励信息

//MaxSerialID(INT64)
#define NET_D2G_SEND_MAIL_REWARD_SERIAL "NET_D2G_SEND_MAIL_REWARD_SERIAL" //DB向服务器发送最大邮件ID

//tagMailReward(struct)
#define NET_D2G_SEND_ADD_MAIL_REWARD_INFO "NET_D2G_SEND_ADD_MAIL_REWARD_INFO" //DB通知GS将一笔邮件奖励信息加入容器

//**************************************************************************************************//
//													摆摊兑换相关														 //
//**************************************************************************************************//
//摆摊栏位IDX(INT) + 兑换物品数量(INT) + << ItemID(DWORD) + Count(INT16) >>
#define NET_C2G_CONFIRM_STALL_ITEM "NET_C2G_CONFIRM_STALL_ITEM" //客户端请求确认摆摊物品

//摊位名称(TCHAR 10)
#define NET_C2G_REQUEST_STALL_START "NET_C2G_REQUEST_STALL_START" //客户端请求开始摆摊

//摊主ID(DWORD)
#define NET_C2G_REQUEST_LOOK_OTHER_STALL "NET_C2G_REQUEST_LOOK_OTHER_STALL" //客户端请求查看他人摊位信息

//摆摊栏位IDX(INT)
#define NET_C2G_REQUEST_STALL_DOWN "NET_C2G_REQUEST_STALL_DOWN" //客户端请求摆摊下架

//摊主ID(DWORD) + 摆摊栏位IDX(INT)
#define NET_C2G_REQUEST_STALL_BUY "NET_C2G_REQUEST_STALL_BUY" //客户端请求摆摊购买

//空协议
#define NET_C2G_REQUEST_STALL_END "NET_C2G_REQUEST_STALL_END" //客户端请求收摊

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果[0 = 成功,非0 = 错误代码]
#define NET_G2C_CONFIRM_STALL_ITEM_RESULT "NET_G2C_CONFIRM_STALL_ITEM_RESULT" //服务器发给客户端确认摆摊物品结果

//结果[0 = 成功,非0 = 错误代码]
#define NET_G2C_REQUEST_STALL_START_RESULT "NET_G2C_REQUEST_STALL_START_RESULT" //服务器发给客户端开始摆摊结果

//摊主ID(DWORD) + Count(INT) + << type(0 = Item,1 = Equip) + 物品结构(struct) + 价格(INT32) + 栏位索引(INT16)>>
#define NET_G2C_REQUEST_LOOK_OTHER_STALL_RESULT "NET_G2C_REQUEST_LOOK_OTHER_STALL_RESULT" //服务器发给客户端查看摊位信息

//结果[0 = 成功,非0 = 错误代码]
#define NET_G2C_REQUEST_STALL_DOWN_RESULT "NET_G2C_REQUEST_STALL_DOWN_RESULT" //服务器发给客户端摆摊下架结果

//结果[0 = 成功 + 摆摊栏位IDX(INT),非0 = 错误代码]
#define NET_G2C_REQUEST_STALL_BUY_RESULT "NET_G2C_REQUEST_STALL_BUY_RESULT" //服务器发给客户端购买结果

//结果[0 = 成功,非0 = 错误代码]
#define NET_G2C_REQUEST_STALL_END_RESULT "NET_G2C_REQUEST_STALL_END_RESULT" //服务器发给客户端收摊结果

//空协议
#define NET_G2C_SEND_STALL_BAG_NOT_ENOUGH "NET_G2C_SEND_STALL_BAG_NOT_ENOUGH" //服务器通知摊主背包空间不足

//**************************************************************************************************//
//													摆摊贩卖相关														 //
//**************************************************************************************************//
//摊位名称(TCHAR 10) +  商品个数(BYTE) + tagNewStallData(struct)
//xy modify
#define NET_C2G_REQUEST_NEW_STALL_START "NET_C2G_REQUEST_NEW_STALL_START" //客户端请求服务器开始摆摊

//tagNewStallData(struct)
#define NET_C2G_REQUEST_NEW_STALL_UP "NET_C2G_REQUEST_NEW_STALL_UP" //客户端请求服务器摆摊上架

//摆摊栏索引(BYTE)
#define NET_C2G_REQUEST_NEW_STALL_DOWN "NET_C2G_REQUEST_NEW_STALL_DOWN" //客户端请求服务器摆摊下架

//空协议
#define NET_C2G_REQUEST_NEW_STALL_END "NET_C2G_REQUEST_NEW_STALL_END" //客户端请求服务器摆摊结束

//摊主ID(DWORD)
#define NET_C2G_REQUEST_NEW_STALL_LOOK_OTHER "NET_C2G_REQUEST_NEW_STALL_LOOK_OTHER" //客户端请求服务器查看他人摊位

//摊主ID(DWORD) + 购买栏位索引(BYTE) + 购买个数(INT16)
#define NET_C2G_REQUEST_NEW_STALL_BUY "NET_C2G_REQUEST_NEW_STALL_BUY" //客户端请求服务器摆摊购买

//-----------------------------------------华丽的分割线--------------------------------------------//
//结果(DWORD)[0=摆摊成功, 非0=错误代码]
#define NET_G2C_REQUEST_NEW_STALL_START_RESULT "NET_G2C_REQUEST_NEW_STALL_START_RESULT" //服务器通知客户端开始摆摊结果

//结果(DWORD)[0=上架成功, 非0=错误代码]
#define NET_G2C_REQUEST_NEW_STALL_UP_RESULT "NET_G2C_REQUEST_NEW_STALL_UP_RESULT" //服务器通知客户端摆摊上架结果

//结果(DWORD)[0=下架成功, 非0=错误代码]
#define NET_G2C_REQUEST_NEW_STALL_DOWN_RESULT "NET_G2C_REQUEST_NEW_STALL_DOWN_RESULT" //服务器通知客户端摆摊下架结果

//结果(DWORD)[0=收摊成功, 非0=错误代码]
#define NET_G2C_REQUEST_NEW_STALL_END_RESULT "NET_G2C_REQUEST_NEW_STALL_END_RESULT" //服务器通知客户端收摊结果

//摊主ID(DWORD) + Count(BYTE) + << type(0 = Item,1 = Equip) + tagNewStallData(struct)>>
#define NET_G2C_REQUEST_NEW_STALL_LOOK_OTHER_RESULT "NET_G2C_REQUEST_NEW_STALL_LOOK_OTHER_RESULT" //服务器通知客户端查看他人摊位结果

//结果(DWORD)[0=购买成功 + 购买栏位索引(BYTE) + 剩余个数(INT16), 非0=错误代码] 
#define NET_G2C_REQUEST_NEW_STALL_BUY_RESULT "NET_G2C_REQUEST_NEW_STALL_BUY_RESULT" //服务器通知客户端摆摊购买结果

#define NET_G2C_NEW_STALL_UPDATE_ITEM "NET_G2C_NEW_STALL_UPDATE_ITEM"
//**************************************************************************************************//
//													神秘宝箱相关														 //
//**************************************************************************************************//
//kind(BYTE)[1=免费白银,2=免费黄金,3=钻石白银,4=元宝黄金,5=元宝白金十连抽]  
#define NET_C2G_REQUEST_OPEN_TREASURE "NET_C2G_REQUEST_OPEN_TREASURE" //请求打开宝箱
#define NET_C2G_BUY_TREASURESHOP "NET_C2G_BUY_TREASURESHOP" //神秘宝箱购买请求
//kind(BYTE)[1=免费白银,2=免费黄金,3=钻石白银,4=元宝黄金,5=元宝白金十连抽] + RewardID(DWORD)
#define NET_C2G_REQUEST_TREASURE_GET_REWARD "NET_C2G_REQUEST_TREASURE_GET_REWARD" //领取宝箱奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0 = 成功 + kind(BYTE)[1=免费白银,2=免费黄金,3=钻石白银,4=元宝黄金,5=元宝白金十连抽] + Count(BYTE) + <<ItemID(DWORD)>> + RewardID(DWORD), 非 0 = 错误代码]ps:第一个物品是抽中的奖励
#define NET_G2C_REQUEST_OPEN_TREASURE_RESULT "NET_G2C_REQUEST_OPEN_TREASURE_RESULT" //请求打开宝箱
#define NET_G2C_REQUEST_OPEN_TREASURESHOP_RESULT "NET_G2C_REQUEST_OPEN_TREASURESHOP_RESULT" //请求打开宝箱
#define NET_G2C_OPEN_TREASURESHOP "NET_G2C_OPEN_TREASURESHOP" //是否打开宝箱
#define NET_G2C_BUY_TREASURESHOP "NET_G2C_BUY_TREASURESHOP"
//结果(DWORD)[0 = 成功 + kind(BYTE)[1=免费白银 + 免费最后领取时间(DWORD),2=免费黄金 + 免费最后领取时间(DWORD),3=钻石白银,4=元宝黄金,5=元宝白金十连抽] + IsExpCard(BOOL), 非0=失败]
#define NET_G2C_REQUEST_TREASURE_GET_REWARD_RESULT "NET_G2C_REQUEST_TREASURE_GET_REWARD_RESULT" //领取宝箱奖励结果

//**************************************************************************************************//
//													等级目标奖励相关												 //
//**************************************************************************************************//
//奖励索引(BYTE)从1开始
#define NET_C2G_REQUEST_GET_ROLE_LEVEL_REWARD "NET_C2G_REQUEST_GET_ROLE_LEVEL_REWARD" //请求领取角色等级奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误代码]
#define NET_G2C_REQUEST_GET_ROLE_LEVEL_REWARD "NET_G2C_REQUEST_GET_ROLE_LEVEL_REWARD" //请求领取角色等级奖励

//**************************************************************************************************//
//														聚划算相关														 //
//**************************************************************************************************//
//空协议
#define NET_C2G_REQUEST_BUY_YUANBAO_REWARD "NET_C2G_REQUEST_BUY_YUANBAO_REWARD" //请求购买聚划算

//奖励索引(BYTE)从1开始
#define NET_C2G_REQUEST_GET_YUANBAO_REWARD "NET_C2G_REQUEST_GET_YUANBAO_REWARD" //请求领取聚划算元宝奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误代码]
#define NET_G2C_REQUEST_BUY_YUANBAO_REWARD "NET_G2C_REQUEST_BUY_YUANBAO_REWARD" //请求购买聚划算结果

//结果(DWORD)[0=成功,非0=错误代码]
#define NET_G2C_REQUEST_GET_YUANBAO_REWARD "NET_G2C_REQUEST_GET_YUANBAO_REWARD" //请求领取聚划算元宝奖励结果

//**************************************************************************************************//
//													每日首充相关														 //
//**************************************************************************************************//
//空协议
#define NET_C2G_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD "NET_C2G_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD" //请求领取每日首冲奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误代码]
#define NET_G2C_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD "NET_G2C_REQUEST_GET_DAY_FIRST_RECHARGE_REWARD" //请求领取每日首冲奖励结果

//每日首冲状态(BYTE)[0=未首冲,1=已首冲,2=已领取首冲]
#define NET_G2C_DAY_FIRST_RECHARGE_STATE "NET_G2C_DAY_FIRST_RECHARGE_STATE" //服务器通知客户端每日首冲状态

//-----------------------------------------华丽的分割线--------------------------------------------//

//AcctID(DWORD)+每日首冲状态(BYTE)[0=未首冲,1=已首冲,2=已领取首冲]
#define NET_G2D_DAY_FIRST_RECHARGE_STATE "NET_G2D_DAY_FIRST_RECHARGE_STATE" //服务器通知DB每日首冲状态


// ------------------------------------------------次冲豪礼---------------------------------------------
#define NET_G2C_DAY_SECOND_RECHARGE_STATE "NET_G2C_DAY_SECOND_RECHARGE_STATE"
#define NET_C2G_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD "NET_C2G_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD"
#define NET_G2C_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD "NET_G2C_REQUEST_GET_DAY_SECOND_RECHARGE_REWARD"
//------------------------------------------------------------------------------------------------------


//**************************************************************************************************//
//													充值赠礼相关														 //
//**************************************************************************************************//
//奖励索引(BYTE)从1开始
#define NET_C2G_REQUEST_GET_TOTAL_RECHARGE_REWARD "NET_C2G_REQUEST_GET_TOTAL_RECHARGE_REWARD" //请求领取充值赠礼奖励

//-----------------------------------------华丽的分割线--------------------------------------------//

//结果(DWORD)[0=成功,非0=错误代码]
#define NET_G2C_REQUEST_GET_TOTAL_RECHARGE_REWARD "NET_G2C_REQUEST_GET_TOTAL_RECHARGE_REWARD" //请求领取充值赠礼奖励结果

//充值赠礼状态(BYTE)[1-12表示领取到第几个奖励]
#define NET_G2C_TOTAL_RECHARGE_REWARD_STATE "NET_G2C_TOTAL_RECHARGE_REWARD_STATE" //服务器通知客户端充值赠礼状态

//充值总数(DWORD)
#define NET_G2C_TOTAL_RECHARGE_CHANGE "NET_G2C_TOTAL_RECHARGE_CHANGE" //通知客户端充值总数改变

//-----------------------------------------华丽的分割线--------------------------------------------//

//AcctID(DWORD)+充值赠礼状态(BYTE)[1-12表示领取到第几个奖励]
#define NET_G2D_TOTAL_RECHARGE_REWARD_STATE "NET_G2D_TOTAL_RECHARGE_REWARD_STATE" //服务器通知DB充值赠礼状态

//**************************************************************************************************//
//														摇钱树相关														 //
//**************************************************************************************************//
//剩余天数(DWORD)
#define NET_C2G_REQUEST_MONEY_TREE_OVER_DAYS "NET_C2G_REQUEST_MONEY_TREE_OVER_DAYS" //客户端请求摇钱树剩余天数

//-----------------------------------------华丽的分割线--------------------------------------------//

//剩余天数(DWORD)
#define NET_G2C_SEND_MONEY_TREE_OVER_DAYS "NET_G2C_SEND_MONEY_TREE_OVER_DAYS" //服务器通知客户端摇钱树剩余天数

//**************************************************************************************************//
//														其他相关														 //
//**************************************************************************************************//
//Movie 
#define NET_C2G_MOVIE_STATE "NET_C2G_MOVIE_STATE" //通知服务器 客户端动画播放状态

//-----------------------------------------华丽的分割线--------------------------------------------//

//服务器通知客户端开始剧情对话 talkid(INT)
#define NET_G2C_PLAY_TALK "NET_G2C_PLAY_TALK"

//RoleID(DWORD) + x(float) + z(float)
#define NET_G2C_SEND_ROLE_TELEPORT "NET_G2C_SEND_ROLE_TELEPORT" //通知客户端传送

//副本免费扫荡次数(INT) + 技能点领悟上限(DWORD) + 技能快速领悟次数(INT) + 双修次数(INT) + 每日任务次数(军需)(INT) 
//+ 体力上限(INT) + 购买体力次数上限(INT) + 饮酒次数(INT) + 上香次数(INT) + 打怪附加经验系数(float)
//+ 经验副本附加系数(float) + 金钱副本附加系数(float)
#define NET_G2C_SEND_VIPLV_CHANGE_INFO "NET_G2C_SEND_VIPLV_CHANGE_INFO" //服务器送VIP改变相关信息

//特效编号(INT) + 目标x(INT) + 目标y(INT)  
#define NET_G2C_PLAY_SCENE_EFFECT "NET_G2C_PLAY_SCENE_EFFECT" // 服务器通知客户端播特效

//msgid(INT)
#define NET_G2C_SEND_TIP_MSG "NET_G2C_SEND_TIP_MSG" //服务器向客户端发送提示信息

//-----------------------------------------华丽的分割线--------------------------------------------//

//空协议
#define NET_G2D_REQUEST_INFO "NET_G2D_REQUEST_INFO" //GS向DB请求连接后需要的信息

//-----------------------------------------华丽的分割线--------------------------------------------//

//空协议
#define  NET_D2G_SEND_INFO_OVER "NET_D2G_SEND_INFO_OVER" //DB通知GS连接后要丢的信息已发送完毕

//////////////////////////////////////背包容器相关
#define  NET_G2C_ROLE_UPDATE_CONTYPE_ITEM "NET_G2C_ROLE_UPDATE_CONTYPE_ITEM"

//////////////////////////////////////副本boss奖励
#define  NET_G2C_FUBEN_BOSS_REWARD "NET_G2C_FUBEN_BOSS_REWARD"


//////////////////////////////////沙巴克攻城战报/////////////////////////////////////////////

//#define NET_G2C_End_sbk "NET_G2C_End_sbk" //服务器通知客户端沙巴克攻城结束时，行会队员显示攻城结果界面

////////////福利活动
#define  NET_G2C_ProtoKaifuActivity "NET_G2C_ProtoKaifuActivity"
#define  NET_G2C_ProtoKaifuItemActivity "NET_G2C_ProtoKaifuItemActivity"

//运营活动
#define  NET_G2C_ProtoYunYingActivity "NET_G2C_ProtoYunYingActivity"//运营活动标签
#define  NET_G2C_ProtoYunYingItemActivity "NET_G2C_ProtoYunYingItemActivity"//运营活动详细信息
#define  NET_G2C_ActivityBuyResult "NET_G2C_ActivityBuyResult"//运营活动限时购买返回
#define  NET_C2G_ProtoYunYingActivity "NET_C2G_ProtoYunYingActivity"//活动中心请求所有活动

//行会商店
//获取行会商店数据列表
//客户端请求
#define NET_C2S_GET_GUILDSHOP_ITEM_LIST "NET_C2S_GET_GUILDSHOP_ITEM_LIST"
//服务器返回结果
#define NET_S2C_GUILDSHOP_ITEM_LIST "NET_S2C_GUILDSHOP_ITEM_LIST"

//行会商店购买相关
// 客户端请求购买行会商店中的物品
#define  NET_C2S_BUY_GUILDSHOP_ITEM         "NET_C2S_BUY_GUILDSHOP_ITEM"
// 客户端购买行会商店物品的结果信息
#define  NET_S2C_BUY_GUILDSHOP_ITEM_RST     "NET_S2C_BUY_GUILDSHOP_ITEM_RST"
// 服务器返回30级装备结果
#define NET_S2C_Level30_Promote_Equip "NET_S2C_Level30_Promote_Equip"
#define NET_C2S_Buy_Level30_Promote_Equip "NET_C2S_Buy_Level30_Promote_Equip"
#define NET_S2C_Buy_Level30_Promote_Equip_RST "NET_S2C_Buy_Level30_Promote_Equip_RST"

// 推送羽翼促销 [2016-4-26 by willing]
#define NET_S2C_Promote_YuYi                "NET_S2C_Promote_YuYi"
// 客户端购买推送的羽翼 [2016-5-26 by willing]
#define NET_C2S_Buy_Promote_YuYi            "NET_C2S_Buy_Promote_YuYi"
// 客户端购买 推送的羽翼 的 结果 [2016-5-26 by willing]
#define NET_S2C_Buy_Promote_YuYi_Rst        "NET_S2C_Buy_Promote_YuYi_Rst"

// 请求充值档配置 [2016-2-29 by willing]
#define NET_C2S_REQUEST_BILL_CONFIG         "NET_C2S_REQUEST_BILL_CONFIG"
// 向服务器回应充值档配置 [2016-2-29 by willing]
#define NET_S2C_BILL_CONFIG                 "NET_S2C_BILL_CONFIG"

//////////////////////////////////////////////////////////////////////////
//                     活动中心点击按钮时通信的消息                     //
//////////////////////////////////////////////////////////////////////////
// 客户端请求所有正在进行中的活动 摘要信息
#define NET_C2S_Tidy_Act                    "NET_C2S_Tidy_Act"
//------------------------------不知道怎么形容的华丽的分割线--------------------------------------------//
// 服务器向客户端回应活动的摘要信息 [2016-4-29 by willing]
#define NET_S2C_Tidy_Act                    "NET_S2C_Tidy_Act"

#endif