#ifndef JOYSTICK_H
#define JOYSTICK_H

#include "cocos2d.h"
#include "UiInterface.h"
#include "BaseDefine.h"
using namespace cocos2d;

class JoyMessagePressedData
{
public:
	JoyMessagePressedData() { }
	void setDirection(const CCPoint &dir) { direction = dir; }
	CCPoint direction;
};

class JoyStickUi : public UiInterface
{
public:
	virtual CCNode *openUi();
	virtual void showUi(bool show);
	virtual bool showState() { return _showState; }
	virtual eWorldZorder getZorder() { return WZ_POPUI; }
	virtual bool canClose() { return false; }

	void setActivity(bool a);

private:
	bool _showState;
};

class Joystick :public CCLayer
{
public :
	Joystick():changeRocker(true) {}
	void Active();                                
	void Inactive();
	void stopAct();
	CCPoint getDirection();
	float getVelocity();
	void  updatePos(float dt);
	virtual void onExit();
	//初始化 aPoint是摇杆中心 aRadius是摇杆半径 aJsSprite是摇杆控制点 aJsBg是摇杆背景
	static Joystick*  JoystickWithCenter(CCPoint aPoint ,float aRadius);
	Joystick * initWithCenter(CCPoint aPoint ,float aRadius);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	CREATE_FUNC(Joystick);
	void showUi(bool show);
private:
	JoyMessagePressedData _data;
	CCPoint centerPoint;//摇杆中心
	CCPoint currentPoint;//摇杆当前位置
	bool active;//是否激活摇杆
	float radius;//摇杆半径
	CCSprite *jsSprite;
	CCSprite *jsSmallSprite;
	bool _push;
	CCSprite *aJsBg;
	CCSprite *aJsSprite;
	bool changeRocker;
};

#endif //JOYSTICK_H