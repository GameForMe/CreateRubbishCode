#ifndef F_BTN_FUNC_COMPONENT_H__
#define F_BTN_FUNC_COMPONENT_H__

#include "cocos2d.h"
#include "cocos-ext.h"
#include <functional>

using namespace cocos2d;
using namespace cocos2d::extension;

enum EBTN_TYPE
{
	eUseBtn =0,
	eToStorage,
	eToPackage,
	eHideAll,
};
class f_btn_func_component 
	: public CCLayer
	, public CCBMemberVariableAssigner
	, public CCBSelectorResolver
	, public CCNodeLoaderListener
{
public:
	f_btn_func_component();
	virtual ~f_btn_func_component();

	void add_btn(CCControlButton* btn,EBTN_TYPE type);
	
	void set_btn_type(EBTN_TYPE type);

	void set_close_fn(std::function<void(void)> fn){m_close_fn = fn;}

	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName){return NULL;}
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(CCNode * pNode, CCNodeLoader * pNodeLoader){}
public:
	void on_to_storage(CCObject * pSender, CCControlEvent pCCControlEvent);
	void on_to_package(CCObject * pSender, CCControlEvent pCCControlEvent);
protected:
	std::map<EBTN_TYPE,CCControlButton*>		m_btns;
	short										m_idx;

	std::function<void(void)>						m_close_fn;
};

#endif // F_BTN_FUNC_COMPONENT_H__
