#ifndef REWARDUI_H
#define REWARDUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"
#include "RewardProto.h"
#include "UiInterface.h"
#include "AnimationCache.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class RewardUiLayer;
class ItemNode;

class RewardUi : public UiInterface
{
public:
	virtual CCNode *openUi();
	RewardUiLayer *getUiLayer();
	void setTitle(const std::string &title);
	void setItemData(short index, unsigned int typeId, int num);
};

class RewardUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class RewardUi;

	enum eNodeTag
	{
		NT_Frame = 0,
		NT_Title = 5,
		NT_ItemBegin = 0,
		NT_ItemNum = 5,
		NT_ItemNodeBegin = 10
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(RewardUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onGetBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

protected:
	ItemNode *getItemNode(int index);
	void setTitle(const std::string &title);
	void setItemData(short index, unsigned int typeId, int num);

protected:
	CCSprite *_frame;
public:
	E_REWARDFROM type;
};


class WanMeiGiftUiMgr
{
public:
	WanMeiGiftUiMgr();
	~WanMeiGiftUiMgr();
	static WanMeiGiftUiMgr* GetInstance();		
	void openWanMeiGiftUi();
	void SetItemId(long long _itemId){itemId = _itemId; }
	long long GetItemId(){return itemId;};
private:
	long long itemId;
};

class WanMeiGiftUi : public UiInterface
{
public:
	WanMeiGiftUi();
	~WanMeiGiftUi();
	CCNode* openUi();
};

class WanMeiGiftUiLayer 
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class WanMeiGiftUi;
public:
	
public:
	WanMeiGiftUiLayer(){}
	~WanMeiGiftUiLayer() {}
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(WanMeiGiftUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	void onDakailibaoBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	virtual void onExit();
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	//virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	virtual void onEnter();
	void animationCallback(CCNode *node);
	int getWanMeiId() {return i_WanMeiId;}
	void showNumberCorner(CCNode *node);
protected:
	void SetData(CCSprite* node,CCLabelTTF* label,int dw_id,int num);
private:
	CCSprite* _frame;
	CCSprite* _topSprite;
	CCNode* _centerNode;
	CCNode* _resultNode;
	CCLabelTTF* _lbDescribe;
	CCControlButton* _btnShouChong;
	CCControlButton* _btnVip;
	INT64 _id;
	AnimationCache::AnimateList animList[6];
	int i_WanMeiId;
	int itemNodeId;
public:
	void setSelectTable();
	void updateAllItemNode();
	void updateOne(int page,int i, bool isVisible);
	void changeSpriteTexture(const char* imgName1, const char* imgName2);
	void playBoxOpenAnims();
	void showContentSwitch(bool isShowContent);
};


#endif //REWARDUI_H