/**
 *	@file		SBKShouTongShowUI.h
 *	@author		shenyaoyan
 *	@date		2016/07/28
 *	@version	
 *	@brief		沙巴克首通奖励查看界面
 */

#ifndef _SBKSHOUTONGSHOWUI_H_
#define _SBKSHOUTONGSHOWUI_H_

#include "UiInterface.h"
#include "NormalLayer.h"
#include "SBKSDManager.h"

#define SHENDIANSHOUTONGMAX 3

class SBKShouTongShowUI
	: public UiInterface
{
public:
	SBKShouTongShowUI();
	~SBKShouTongShowUI();
	virtual CCNode* openUi();
};

class ListControl;

class SBKShouTongShowUILayer
	: public NormalLayer
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(SBKShouTongShowUILayer,create);

	SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	SBKShouTongShowUILayer();
	~SBKShouTongShowUILayer();

	void setData();

	void onCloseBtnPressed(CCObject* pSender, CCControlEvent pCCControlEvent);

private:
	ListControl* m_list;
	CCLabelTTF* m_descLabel;
};

class ItemNode;

class SBKShouTongItem
	: public CCNode
	, public CCBSelectorResolver
	, public CCBMemberVariableAssigner
	, public CCNodeLoaderListener
{
public:

	enum
	{
		ENT_CheckLabel = 1,
		ENT_ItemNode1  = 11,
		ENT_ItemNode2  = 12,
		ENT_ItemNode3  = 13,
	};
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(SBKShouTongItem,create);

	SBKShouTongItem();
	~SBKShouTongItem();

	static SBKShouTongItem* createItem();

	SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	bool onAssignCCBMemberVariable(CCObject* pTarget,const char* pMemberVariableName, CCNode* pNode);
	void onNodeLoaded(CCNode * pNode, CCNodeLoader * pNodeLoader);

	void setData(shendian_check_data const& item,bool isPass);

private:
	CCNode* m_frame;
	LabelFT* m_checkLabel;
	ItemNode* m_itemNode[SHENDIANSHOUTONGMAX];
	CCSprite* m_getSprite;
	CCSprite* m_unGetSprite;
};

#endif