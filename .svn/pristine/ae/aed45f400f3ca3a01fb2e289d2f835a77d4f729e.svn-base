#ifndef SONGHUAUI_H
#define SONGHUAUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class SonghuaUiLayer;
class ItemNode;

class SonghuaUi : public UiInterface
{
public:
	virtual CCNode *openUi();
	SonghuaUiLayer *getUiLayer();
	void setRoleId(unsigned int roleId);
	void setUserName(const std::string &name);
	void setRoleName(std::string& roleName);
};

class SonghuaUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class SonghuaUi;

	enum eNodeTag
	{
		NT_Frame = 0,
		NT_UserName = 2,
		NT_Desc = 3,
		NT_NodeBegin = 6,
		NT_NodeNum = 3,
		NT_ItemNodeBegin = 15
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(SonghuaUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onSendBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
protected:
	ItemNode *getItemNode(int index);
	void setUserName(const std::string &name);
	void setDesc( int num );
	void setRoleId(unsigned int roleId);
	void setRoleName(std::string& roleName);
	int getIndexUnderPoint(const CCPoint &pt);
	void setSelectIndex(int index);
protected:
	CCSprite *_frame;
	CCPoint _pos[NT_NodeNum];
	CCSprite *_selectSprite;
	unsigned int _roleId;
	int _seleceIndex;
	std::string _shName;
};


#endif //SONGHUAUI_H