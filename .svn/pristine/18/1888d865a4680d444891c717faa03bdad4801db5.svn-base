#include "f_btn_func_component.h"
#include "PackageManager.h"
#include "ToolTip.h"

f_btn_func_component::f_btn_func_component()
	:m_idx(0)
{

}

f_btn_func_component::~f_btn_func_component()
{

}

void f_btn_func_component::add_btn( CCControlButton* btn,EBTN_TYPE type )
{
	m_btns[type] = btn;
}

void f_btn_func_component::set_btn_type( EBTN_TYPE type )
{
	EBTN_TYPE tmp = type;
	typedef std::map<EBTN_TYPE,CCControlButton*> ThisMap;
	std::for_each(m_btns.begin(),m_btns.end(),[=](ThisMap::value_type const&kv)
	{
		bool ret = kv.first == tmp;
		kv.second->setVisible(ret);
	});
}

void f_btn_func_component::on_to_storage( CCObject * pSender, CCControlEvent pCCControlEvent )
{
	PackageManager::getInstance()->try_to_move_item_from_bag_to_storage(m_idx);
	if (m_close_fn)
	{
		m_close_fn();
	}
}

void f_btn_func_component::on_to_package( CCObject * pSender, CCControlEvent pCCControlEvent )
{
	PackageManager::getInstance()->try_to_move_item_from_storage_to_bag(m_idx);

	if (m_close_fn)
	{
		m_close_fn();
	}
}

bool f_btn_func_component::onAssignCCBMemberVariable( CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode )
{
	CCB_MEMBERVARIABLEASSIGNER_GLUE_WEAK(this,"use_btn",CCControlButton*,m_btns[eUseBtn]);
	CCB_MEMBERVARIABLEASSIGNER_GLUE_WEAK(this,"storage_btn",CCControlButton*,m_btns[eToStorage]);
	CCB_MEMBERVARIABLEASSIGNER_GLUE_WEAK(this,"package_btn",CCControlButton*,m_btns[eToPackage]);
	return false;
}

cocos2d::extension::SEL_CCControlHandler f_btn_func_component::onResolveCCBCCControlSelector( CCObject * pTarget, const char* pSelectorName )
{
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "on_to_storage", f_btn_func_component::on_to_storage);
	CCB_SELECTORRESOLVER_CCCONTROL_GLUE(this, "on_to_package", f_btn_func_component::on_to_package);
	return NULL;
}

