#ifndef	TREASURELOFTUI_H
#define TREASURELOFTUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "GameActionNode.h"

using namespace cocos2d;
using namespace cocos2d::extension;

#define REWARDNUM 26
#define TREALOFTMAXGRID 26
#define BIGREWARDNUM 4

class TreasureLoftUiLayer;
class ItemNode;

struct TreasureLoftReward 
{
	int level;
	std::string title;
	int RewardIndex[REWARDNUM];
	std::string RewardName[REWARDNUM];
	unsigned int BigRewardId[BIGREWARDNUM];
	int BigRewardNum[BIGREWARDNUM];
	TreasureLoftReward()
		:level(0)
	{
		memset(RewardIndex, 0, sizeof(RewardIndex));
		memset(BigRewardId,0, sizeof(BigRewardId));
		memset(BigRewardNum,0,sizeof(BigRewardNum));
	}
};

class TreasureLoftUi: public UiInterface
{
public:
	virtual CCNode* openUi();
	TreasureLoftUiLayer *getUiLayer();
	void updateData();
	void setRandDiceNum(int i);
	void runAnimation();
	void onGetReward();
};

class TreasureLoftUiLayer
	:public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class TreasureLoftUi;
	 
	enum eNodeTag
	{
		NT_Frame = 0,
		NT_InstructFrame = 1,
	};

	enum eTreaLoftTag
	{
		TLU_InitStart = 0,
		TLU_RewardStart = 1,
		TLU_RewardEnd = 27,

		TLU_ItemBegin = 30,
		TLU_ItemEnd = 34,

		TLU_DiceSprite = 80,
		TLU_RoleImage = 40,
		TLU_RollDiceBtn = 50,
		TLU_RollDangQianBtn = 51,
		TLU_LevelStart = 60,
		TLU_AnimateNode = 71,
		TLU_DoubleRewardEffect,
		TLU_ThreeRewardEffect,
		TLU_ItemNodeSprite = 100,
		TLU_RewardItemNode = 200
	};

public:
	TreasureLoftUiLayer();
	~TreasureLoftUiLayer();
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(TreasureLoftUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onCloseBtn2Pressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onInstructBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onRolldiceBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onDangQIBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);

	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	 void update(float dt);
	void setRandDiceNum(int i);
	void runAnimation();//骰子播放动画;

	CCRect GetBtnPos( int nTag );
	void onGetReward();
	void setEnableDiceBtnClick(bool enable);
private:
	void updateData();
	void showInstructFrame(bool show);
	void runMoveAnimation(CCPoint selfpos,CCPoint targetpos); //角色移动;
	void runRewardBoxAnimate();//开宝箱动画;
	void showPassLevelPrompt(CCNode* node);
// 	void runLevel2Anim();
// 	void runLevel3Anim();
// 	void stopLevel2Animation();
// 	void stopLevel3Animation();
//	bool setItemSelect(int index);
	void stopRewardBoxAnimate();
	void AnimationCallBack(CCNode* node);
	void runRewardBoxAniCallback(CCNode* node);
	void setEnableDianQianBtnClick(bool enable);
	void sendRollMessageToServer();
	int getItemUnderPoint(const CCPoint &point);
	TreasureLoftReward getRewardForLevel(int level); //level 表示第几层，根据层数确定奖励;
	GameActionNode* getRewardAcNode();
private:
	CCSprite* _frame;
	CCSprite* _levelsprite;////add by vvv 2014.12.16
	CCSprite* _diceSprite;
	CCSprite* _roleImage;
	CCSprite* _leverlStart;
	CCSprite* _doubleEffect;
	CCSprite* _threeEffece;
	CCNode* _initStart;
	int m_selfPosIndex; // 记录当前玩家所在藏宝阁的格数;
	int m_targetPosIndex; //记录目标（移动到）的格数;
	int _randDice;  //接收服务器发来的随机骰子数;
	int m_floor;  //玩家所在藏宝阁层数;
	int _initIndex;
	CCSprite* _rewardboxAnim;
	CCNode* _rewardboxAnimNode;
	CCSprite m_sprite[30];
	CCPoint m_ItemPos[30];
	int m_ItemIndex[29];
	bool _rolldiceEnable;
	bool _rolldangqianEnable;
	CCPoint _stPt;
	TreasureLoftReward _treasurLoftList;
	ItemNode* m_RewardItem[4];
	std::set<std::string> _plist;						//保存特效plist资源名称
	GameActionNode* _rewardAcNode;							//移动到目的地特效
	bool isRunAnmiation;
};

#endif //TREASURELOFTUI_H