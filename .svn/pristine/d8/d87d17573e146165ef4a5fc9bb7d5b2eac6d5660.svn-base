#pragma once
#include "CmdAdapter.h"
#include "RewardProto.h"
#include <map>
#include <vector>
#include <string>

#define  ONLINEUI_RECEIVEBTN_N  "onlineui_receivebtnn"
#define AWARD_ITEM_NUM 6
#define MAX_SIGN_DAY_NUM 28	//最大签到天数
struct AwardInfo
{
	int _day;
	int _id;
	unsigned int ItemId[AWARD_ITEM_NUM];
	int ItemNum[AWARD_ITEM_NUM];
	int _vipReward;
	int _vipLevel;
	AwardInfo()
		: _day(0)
		, _id(0)
		, _vipReward(0)
		, _vipLevel(0)
	{
		memset(ItemId, 0, sizeof(AWARD_ITEM_NUM));
		memset(ItemId, 0, sizeof(AWARD_ITEM_NUM));
	}
};
struct SendRewardMgrInfo
{
	int _receiveGiftID;
	int _receiveLastTime;
	int _receivebCal;
	int _receiveStep;
};

class RewardMgr
{
public:
	RewardMgr();
	~RewardMgr();
	void init();
	void destroy();
public:
	static RewardMgr* getInstance();
	const tagRewardData *getRewardData(E_REWARDFROM rf) { return _rewardData[rf]; }
	bool isTimeArrivalOfOnlineReward();
	bool isHasOnlineReward();
	void resetBCal();
	int getRewardCount(E_REWARDFROM rf);
public:
	bool sendOnlineReward();//!发送在线奖励道具
	void sendRewardItems();//!发送奖励道具
	void sendSignReward();//!发送签到奖励
	void getSubReward(E_REWARDFROM rew_);//!领取奖励
	void getNewbeeReward();//!领取新手奖励
	void update(float dt);
	void sendSerialReward(std::string strInput);

	//2013 12.23 ssb add 开服七天活动
	void sendServerActivityNotice(bool bInstant = true);//发送开服活动通知;
	void getServerActivityReward(int day); //领取第几天奖励;
	//消费返利
	void getYBConsumeReplyReward(unsigned char byState);

	//签到奖励
	AwardInfo getAwardInfoByIndex(int index);

	//签到所需
public:
	bool canSign(int nSelectDay);//能否签到
	bool canNormalSign(int nSelectDay);//是正常签到还是补签
	bool isSignedCurDay(int nDay);//选中的这一天是否已经签到过啦
	bool isLeakSign(int nDay);//是否漏签
	void sendSign2Server(int nSelectDay,unsigned char byType);
	bool isNeedShowSign();//判断是否需要闪烁签到的特效
	bool isGetBigSignReward(int nSelectDay);//签到大奖是否已经领取

private:
	unsigned int onFretchReward(s_net_cmd* cmd);//!服务器通知我获得奖励了
	unsigned int onGetSubReward(s_net_cmd* cmd);//!!领取奖励
	unsigned int onGetRewardItems(s_net_cmd* cmd);//!获取了奖励道具
	unsigned int onSignReward(s_net_cmd* cmd);//!获取了签到奖励
	unsigned int onNewRoleGift(s_net_cmd* cmd);//!在线时间
	unsigned int onOnlineReward(s_net_cmd* cmd);//!在线奖励
	unsigned int onGetSerialReward(s_net_cmd* cmd);
	unsigned int onGetActivityReward(s_net_cmd* cmd);//领取活跃度奖励
	unsigned int onUpdateSigneLevel(s_net_cmd* cmd);
	unsigned int onGetActivityDone( s_net_cmd* cmd );

	//开服七天活动 ssb add 2013.12.23
	unsigned int onUpdateServerActivityDay(s_net_cmd* cmd);  //服务器通知此时是开服第几天,开服活动期间当前排名
//	unsigned int onLevelServerActivity(s_net_cmd* cmd); // 开服活动期间当前排名
	unsigned int onGetServerActivityReward(s_net_cmd* cmd); //领取开服活动奖励;

	//消费返利
	unsigned int onGetYBConsumeReplyReward(s_net_cmd* cmd);


private:
	unsigned int _giftID;
	int _num;
	DWORD  m_nDestTime;
	unsigned int m_nLastTime;
	int _bCal;
	int _step;
	bool _onlineAnim;
	
private:
	tagRewardData	_rewardData[RF_NUM][MAX_REWARD_NUMBER];
private:
	bool _bRewardScriptInited;//玩家领奖脚本数据是否初始化
	bool _bNeedRefreshServerActivity;
	bool _bNeedRefreshSign; //刷新签到
	std::list<eWroldChildTag> activitySignList;
	bool isGoToChongZhiHaoLi;  //是否打开充值好礼界面
public:
	inline void setRewardScriptInitFlag(bool bflag) {_bRewardScriptInited = bflag;}
	void refreshServerActivity();//零点向服务器请求七天乐数据
	bool canGetRewardFromChannel(E_REWARDFROM eType,int nNum);
	bool deleteActivitySignList( eWroldChildTag tag );
	void setActivitySignList( eWroldChildTag tag );
	void clearActivitySignList();
	SendRewardMgrInfo GetReceiveRewardInfo();
	std::list<eWroldChildTag> getActivitySignList(){return activitySignList;};
	//标识背包是否已满
	bool _isBagEmpty;
	void SetGoToChongZhiHaoLi(bool _isGoToChongZhiHaoLi){isGoToChongZhiHaoLi = _isGoToChongZhiHaoLi;}
	bool GetGoToChongZHiHaoLi(){return isGoToChongZhiHaoLi;}
};