#ifndef SELECTROLE_H
#define SELECTROLE_H

#include "cocos2d.h"
using namespace cocos2d;

#include "SelectRoleViewNode.h"
#include "GameActionNode.h"
class SelectRoleUi;
struct s_net_cmd;

struct RoleInfoUiAttr
{
	int roleId;
	int roleLevel;
	std::string roleName;
	LabelFT *name;
	CCLabelTTF* sex;
	CCLabelTTF* job;
	LabelFT *level;
	CCSprite* playerIcon;
	CCSprite* selectBtn;
	CCSprite* jobnew;//vvv
	CCSprite* createrole;//vvv 增加创建角色 2014.10.11
	CCSprite* line;//vv         2014.10.11
	eRoleTypeEnum type;
};

struct RoleInfoUiAttrs
{
	RoleInfoUiAttr roleInfo[3];
};

class MovingBackGround;

class SelectRole:public CCObject
{
public:
	SelectRole();
	~SelectRole();
	static SelectRole *getInstance();
public:
	inline CCScene *getScene() 
	{
		if(!_scene)
		{
			_scene = CCScene::create();
			_scene->retain();
		}
		return _scene;
	}
	RoleInfoUiAttrs *roleInfos;
	RoleInfoUiAttrs* getRoleAttr(){return roleInfos;};
	void setRoleIndex(int index){roleIndex = index;};
	void setrolebody(GameActionNode* index, int Tag = 0,float xScale =0.0f,float yScale =0.0f);
	void open();
	void close();
	void onChangeServerBtnPressed();
	void onBeginGameBtnPressed();
	void onCreateNewBtnPressed();
	void onBackBtnPressed();
	void onNextBtnPressed();
	void clearRole();
	void addRole(RoleInfo roleInfo);
	void initWithRoleExistInfo();
	void onRolePage();
	const char* getRoleJob(unsigned int roleType);
	unsigned int onSelectRole(s_net_cmd *cmd);
	unsigned int onGotoNewMap(s_net_cmd *cmd);
	unsigned int onRoleInitStateAtt(s_net_cmd *cmd);
	unsigned int OnSeverGotoInstancemap(s_net_cmd *cmd);
	unsigned int onServerSynchronizeLine(s_net_cmd *cmd);
	int getRoleCreateTime(unsigned int roleId);
	void addRoleCreatTime(unsigned int roleId, tagDWORDTime td);

	void dumpTexture(CCObject* pSender);
	SelectRoleUi* getSelectRoleUi()
	{
		return _selectRoleUi;
	}
protected:
	int roleIndex;
	SelectRoleUi *_selectRoleUi;
	unsigned int _sumRolePage;
	unsigned int _nowRolePage;
	CCScene *_scene;
	MovingBackGround *_movingBack;
	std::vector<RoleInfo> _roleInfoVector;
	std::string _userLevel;
	std::map<unsigned int, tagDWORDTime> _roleCreateTimeMap;
};

#endif //SELECTROLE_H