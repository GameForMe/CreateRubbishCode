#ifndef LEVELUPGUIDESHOW_H__
#define LEVELUPGUIDESHOW_H__

#include "CommonClient.h"
#include "NormalLayer.h"
#include <boost/function.hpp>

class LevelUpGuideShowLayer
	:public NormalLayer
	,public CCBAnimationManagerDelegate
{
public:
	typedef boost::function<void(void)> ShowCallback;	
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(LevelUpGuideShowLayer, create);

	LevelUpGuideShowLayer();
	~LevelUpGuideShowLayer();

	//virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual bool onAssignCCBMemberVariable(CCObject* pTarget, const char* pMemberVariableName, CCNode* pNode);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();

	void show(int nIndex);

	void setAniMgr(CCBAnimationManager* pMgr);

	static LevelUpGuideShowLayer* createFromCCB(const char* szFile,CCObject* pOwner);
public:
	 virtual void completedAnimationSequenceNamed(const char *name) ;
private:
	void realShow(float);

	void playAni();
	void flyingToNode(CCNode* node);
	void playFlying();
	void flyingEnd();
	void setup(float& fDelay);

	void continueGuideWhenFinished();
private:
	CCSprite*			mpIcon;
	CCNode*			mpEftRoot;
	CCNode*			mpFlyingNode;

	CCNode*			mpRootNode;

	ShowCallback			mcb;

	CCBAnimationManager*		mpMgr;

	int					mnIndex;
};

#endif // LEVELUPGUIDESHOW_H__
