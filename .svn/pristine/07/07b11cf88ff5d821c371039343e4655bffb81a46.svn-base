#ifndef STOREUI_H
#define STOREUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "UiInterface.h"
#include "MallMgr.h"
#include "GameActionNode.h"
using namespace cocos2d;
using namespace cocos2d::extension;

class StoreUiItemFrame;
class StoreUiLayer;
class TouchSprite;
struct SELECTPAGE;
#define INVALID_STOREITEM_ID (unsigned int)(-1)
#define STORE_ITEM_SPACE 4//8
#define STORE_ITEM_WIDTH 169
#define STORE_ITEM_HEIGHT 93

#define WEEK_CARD_TYPE_ID  1102228 //周卡的类型id
#define MONTH_CARD_TYPE_ID 1102227 //月卡的类型id

class StoreUiItemFrame;

class StoreUiItem
{
	friend class StoreUiItemFrame;

	enum eStoreUiItemTag
	{
		SUT_IconNode = 0,
		SUT_Name,
		SUT_Level,
		SUT_Money,
		SUT_IconSprite,
		SUT_Rongyudian = 6,
		SUT_Btn = 10,
	};
public:
	StoreUiItem();
	~StoreUiItem();
	CCSize getContentSize();
	StoreUiItemFrame *getUiFrame() { return _uiFrame; }
	unsigned int getId() const { return _dataInfo.uItemTypeID; }
	void setData(const Tag_MallItemInfo &dataInfo);
	const Tag_MallItemInfo &getData() const { return _dataInfo; }
	void setPosition(const CCPoint &pos);
	void buy(int num);
	CCPoint getBtnPostion();
protected:
	void setName(const std::string &name);
	void setLevel(int level);
	void setMoney(int money);
	//限时，打折商品限时标签;
	void setLimitGoods(bool isshow);
	void setDiscountGood(bool isshow);
	void setIcon(const std::string &frameName);
	int getIconNodeTag() { return SUT_IconNode; }
	void showItemTip(const CCPoint &pos);
private:
	StoreUiItemFrame *_uiFrame;
	Tag_MallItemInfo _dataInfo;
	std::set<std::string> _usedPlistFile;
};

class StoreUiItemFrame 
	: public CCSprite
	, public cocos2d::extension::CCBSelectorResolver
	, public CCTouchDelegate
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class StoreUiItem;
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StoreUiItemFrame, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);

	void onBuyBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onOkBtnPressed(bool isOk, int num);
protected:
	StoreUiItem *_item;
	CCPoint _stPt;
};

class StoreUiItemLoader : public CCSpriteLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(StoreUiItemLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(StoreUiItemFrame);
};

class StoreUi : public UiInterface
{
public:
	StoreUi();
	~StoreUi();
	virtual CCNode *openUi();
	StoreUiLayer *getUiLayer();
	void updateData();
	void updateMoney();
	void updateDiamond();
	void updateRongyu();
	CCRect getGuildBtnPos(int tag);
};

class StoreUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
public:
	enum eStoreUiTag
	{
		SUT_Frame = 0,
		SUT_HeadPhoto = 0,	//头像;
		SUT_TabRemai,	//热卖;
		SUT_TabChangyong,	//常用;
		SUT_TabZhuangban,	//装扮;
		SUT_TabDiamond=4,//钻石
		SUT_TabDiamondNum=5,//钻石数目
		SUT_TabQianghua,	//强化;
		SUT_TabBaoshi,	//宝石;
		SUT_Yuanbao=7,	//显示元宝;
		SUT_TabDuihuan,	//兑换;
		SUT_ContentLayer = 8,
		SUT_Rongyudian, //显示荣誉点;
		SUT_RechargeBtn = 31,				//充值按钮tag	【J】特效要用2014.12.29
		SUT_Close = 32,
		BT_ReMai=11,
		BT_ChangYong=12,
	//	BT_Qianghua=13,
		BT_Diamond=14,
		BT_ZhuangBan=15,
	//	BT_Stone=16,
		BT_End=16,
		//SUT_RechargeBtn
	};

	friend class StoreUi;

public:
	static eStoreUiTag m_willShowTag;  //当前需要跳转到的商店界面
	void showStore();
#ifndef STORE_BTN
#define STORE_BTN (10)
#endif

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(StoreUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);

	virtual void onEnter();
	virtual void onExit();
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);

	void onCloseBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onChongzhiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onStoneBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onZhuangbanBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onReMaiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onChangYongBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	//void onQiangHuaBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onDiamondBtnPressed(cocos2d::CCObject * pSender,cocos2d::extension::CCControlEvent pCCControlEvent);
	void addContentItem(CCNode *item);
	void removeContentItem(CCNode *item);
	CCRect getGuildBtnPos(int tag);
	void setSelectPage(SELECTPAGE* sel);
protected:
	float getContentLayerHeight();
	CCNode *getContainer();
	eStoreUiTag getCurrentSelect() const { return _curentSelect; }
	void resetScrollPosition();

	void onRemaiLabelTouched(TouchSprite*, bool);	//热卖
	void onChangyongLabelTouched(TouchSprite*, bool);	//常用
	void onQianghuaLabelTouched(TouchSprite*, bool);	//强化
	void onBaoshiLabelTouched(TouchSprite*, bool);	//宝石
	void onZhuangbanLabelTouched(TouchSprite*, bool);	//装扮
	void onDuihuanLabelTouched(TouchSprite*, bool);	//兑换
	void onDiamondLabelTouched(TouchSprite*, bool);//钻石

	void onTabSelectChanged(eStoreUiTag src, eStoreUiTag cur);

	TouchSprite *getTabSprite(eStoreUiTag tag);
	void setTabSpriteSelect(eStoreUiTag tabTag, bool select);
	//CCNode *getHeadPhotoNode();
	LabelFT *getMoneyLabel();
	LabelFT *getDiamondLabel();
	LabelFT *getRongyudianLabel();
	void updateMoney();
	void updateDiamond(); //更新钻石信息
	void updateRongyu();
	void setButtonEndble(int tag,bool visible);
private:
	void addItem(StoreUiItem *item);
	void removeItem(unsigned int itemId);
	void removeAllItem();
	void updateList();
	void updateData();
	void displaySE( float dt);								//展示定时播放的特效
private:
	CCSprite *_frame;
	CCLayer *_contentLayer;
	CCNode *_container;
	GameActionNode* _rechargeAcNode;							//充值闪光特效
	CCScrollView *_scrollView;
/*	NCSScrollViewWithBar* _scrollViewBar;*/
	eStoreUiTag _curentSelect;
	CCControlButton* _rechargeBtn;
	CCSprite *_rechargeEffect;
	std::map<eStoreUiTag, std::string> _highlightLab;
	std::map<eStoreUiTag, std::string> _normalLab;
	std::string m_sBlingSEName;									//特效名称

	typedef std::list<StoreUiItem*> StoreUiItemList;
	StoreUiItemList _items;
};

#endif //STOREUI_H