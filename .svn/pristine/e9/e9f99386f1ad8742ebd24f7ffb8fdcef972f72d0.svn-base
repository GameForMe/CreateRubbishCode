#include "StringMgr.h"
#include "DBMgr.h"
#include "CommonClient.h"
#include <algorithm>
#include "f_string_table.h"

StringMgr * StringMgr::getInstance()
{
	static StringMgr instance;
	return &instance;
}

std::string StringMgr::getString( int id )
{
// 	std::map<int, std::string>::iterator iter = _strMap.find(id);
// 	if(iter != _strMap.end())
// 		return iter->second;

// 	c_sql_command* cmd = c_db_manager::getSingleton()->begin_operation("SELECT * FROM String WHERE ID = ?1");
// 	cmd->set_integer32(1 , id);
// 	c_sql_table* table = c_db_manager::getSingleton()->create_table();
// 	std::string str;
// 	while(table->retrieve_row())
// 	{
// 		unsigned int idx = table->get_index("str");
// 		str = table->get_text(idx);
// 	}
// 	c_db_manager::getSingleton()->destroy_table(table);
// 	c_db_manager::getSingleton()->end_operation(cmd);
// 
// 	_strMap[id] = str;

	stringstream ss;
	ss<<id;
	return STRING_TABLE[ss.str().c_str()];
}

void StringMgr::setTip( const std::string &tip )
{
	_tip = tip;
	std::replace(_tip.begin(), _tip.end(), '/', '\n');
	std::ostringstream str;
	str << _tip;
	str << '\0';
	_tip = str.str();
}

void StringMgr::init()
{
	/*
	int nKey=0;
	std::string strVal;
	SQL_START(String); 
	SQL_EXTRA_INT(nKey ,ID);
	SQL_EXTRA_STRING(strVal ,str);

	_strMap[nKey] = strVal;

	SQL_END;
	*/
}
