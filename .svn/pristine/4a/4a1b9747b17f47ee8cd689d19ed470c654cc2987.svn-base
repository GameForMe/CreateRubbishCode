#ifndef RECHARGEGIFTUI_H
#define RECHARGEGIFTUI_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "ChongZhiActivityFarmeUI.h"
#include "AnimationCache.h"
using namespace cocos2d;
using namespace cocos2d::extension;


//#define GIFTBOXNUM	11
#define GIFTITEMNUM	5

class RechargeGiftUiLayer;

class RechargeGiftUi : public ChongZhiInternalUi
{
	friend class ChongZhiActivityFarmeUI;
	friend class ChongZhiActivityFarmeUILayer;
protected:
	static RechargeGiftUi *getInstance();
	RechargeGiftUi();
	~RechargeGiftUi();
	virtual void open();
	virtual void close();
	virtual bool isOpen();
	RechargeGiftUiLayer *getUiLayer();
	virtual void setVisible(bool isVisible);
	virtual void updateDisplay();
private:
	std::set<std::string> _usedPlistFile;
};

class RechargeGiftUiLayer
	: public CCLayer
	, public cocos2d::extension::CCBSelectorResolver
	, public cocos2d::extension::CCNodeLoaderListener
{
	friend class RechargeGiftUi;
	enum eRechargeGiftUiTag
	{
		RGUIT_ZEffect = 1,									//可领奖特效Zorder		1
		RGUIT_RechargeBar = 2,								//目前充值到下等级经验条	2
		RGUIT_ExpBarDes,									//经验条label		3
		RGUIT_Content,										//拖动层
		RGUIT_BG,
		RGUIT_LevelBox = 100,								//充值等级奖励	101-112
	};
	enum eItemPositon
	{
		EIP_width = 150,
		EIP_height = 390,
		EIP_interval = 83,
	};

public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(RechargeGiftUiLayer, create);
	virtual SEL_MenuHandler onResolveCCBCCMenuItemSelector(CCObject * pTarget, const char* pSelectorName);
	virtual SEL_CCControlHandler onResolveCCBCCControlSelector(CCObject * pTarget, const char* pSelectorName);
	virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
	virtual void onEnter();
	virtual void onExit();

	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	void updateUIDisplay();
	void update(float dt);
	void updataButtonState(int index);
	void updataExp();
	//virtual void setTouchEnabled(bool value);
private:
	void onChongZhiBtnPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void onToGetRewardsPressed(cocos2d::CCObject * pSender, cocos2d::extension::CCControlEvent pCCControlEvent);
	void showGiftsItem(int boxIdx);
	void toGetGifts();
	int getTotalRechargeRewardNeedYB(int boxLv);
private:
	DWORD m_dwTotalChargeYB;			//已经充值元宝

	float m_fNowGiftLvYB;			//当前奖励等级需要的元宝
	float m_fNextGiftLvYB;			//下一等级奖励需要的元宝
	float m_fBarLength;				//用来控制进度条长度
	unsigned char m_cRechargeLv;	//当前已经领完的奖品等级
	unsigned char m_cToGetGift;		//用来发送领奖协议
	std::string m_sSEName;			//保存特效名称

	CCSprite* _expBarSp;			//充值进度条
	CCLabelTTF* _expBarLabel;		//充值经验label

	std::map<int, bool> _giftsPermissionMap;		//保存各个宝箱的领奖资格
	std::set<std::string> _plist;				//保存特效plist资源名称

	CCScrollView *_scrollView;
	CCNode* _content;
	CCNode* _container;
	CCSprite* _uiBgSp;
	CCNode* _containNode;
	int _itemNodeCount;
	//RechargeItem* _rechargeItem[GIFTBOXNUM];
	std::vector<RechargeItem*>	_rechargeItem;
//	bool _canTouch;
};

class RechargeGiftUiLoader : public cocos2d::extension::CCLayerLoader {
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(RechargeGiftUiLoader, loader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(RechargeGiftUiLayer);
};


#endif	//RECHARGEGIFTUI_H