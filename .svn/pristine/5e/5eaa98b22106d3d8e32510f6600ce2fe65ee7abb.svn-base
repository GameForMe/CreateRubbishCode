#ifndef EXCHANGEPROTO_H
#define EXCHANGEPROTO_H
#include "BaseDefine.h"
#include "CmdAdapter.h"
#include "ItemDefine.h"
#pragma pack(push, 1)
//常量定义
#define Role_Exchange_Min_Level		10//玩家直接交易最低等级
#define Role_Exchange_Max_Distance	48*5//玩家直接交易最远距离
#define Role_Exchange_Max_Num		5//玩家交易界面显示的格子数
//----------------------------------------------------------------------------
// 错误码枚举
//----------------------------------------------------------------------------
enum
{
	E_Exchange_Accept				= 0,	// 对方同意交易
	E_Exchange_Refuse				= 1,	// 对方拒绝		
	E_Exchange_NotEnough_BagSpace	= 2,	// 背包空间不足
	E_Exchange_RoleBusy				= 3,	// 被申请方忙	
	E_Exchange_WithMore				= 4,	// 不能和多人同时交易
	E_Exchange_OutOfRange			= 5,	// 交易距离范围之外
	E_Exchange_NotInSame_Map		= 6,	// 不在同一区域
	E_Exchange_ItemCanNot_Exchange	= 7,	// 物品不能交易
	E_Exchange_ItemCanNot_Find		= 8,	// 没有找到指定数量的物品
	E_Exchange_NotEnough_Money		= 9,	// 交易的金钱不足
	E_Exchange_ApplicantTgt_Change	= 10,	// 交易申请的交易目标发生变化
	E_Exchange_NotAnswer			= 11,	// 对方没有响应
	E_Exchange_SelfBusy				= 12,	// 玩家自己忙
	E_Exchange_Trage_InDuel = 13, // 对方正在进行切磋。
	E_Exchange_NotInSafearea = 14,//交易双方需均在安全区内
	E_Exchange_Map_Limt				= 15,	// 该地图无法交易
	E_Exchange_NotFaceDeal          = 16, //该商品禁止面对面交易
	E_Exchange_HoleGem              = 17,   // 镶嵌了宝石的装备不允许交易 [2016-5-3 by willing]
	E_Exchange_ComPractice			= 18,     // 双修中不允许交易 
};



// 玩家请求交换物品
struct NET_SIC_exchange_request : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_request)
	unsigned int	dwDstID;	// 消息目标ID
};

struct NET_SIS_exchange_request : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_request)
	unsigned int	dwSrcID;	// 消息发起者ID
};

// 目标玩家交易请求反馈
struct NET_SIC_exchange_request_result : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_request_result)
	unsigned int	dw_error_code;
	unsigned int	dwDstID;
};

// 服务器转发给目标玩家交易请求反馈
struct NET_SIS_exchange_request_result : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_request_result)
	unsigned int	dw_error_code;
	unsigned int	dwSrcID;
	unsigned int	dwDstID;
};

// 添加交易的物品装备
struct NET_SIC_add_exchange : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_add_exchange)
	INT64	n64_serial;	// 只需要64位序号,服务器负责初始化物品具体信息
};

struct NET_SIS_add_exchange_to_src : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_add_exchange_to_src)
	unsigned int	dw_error_code;
	unsigned int	dwDstID;
	INT64	n64_serial;
	unsigned int	nIndex;
};

struct NET_SIS_add_exchange_to_dest : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_add_exchange_to_dest)
	unsigned int	dwSrcID;
	unsigned int	nIndex;
	unsigned char	byData[SIZE_EQUIP];	// 物品或装备(需要通知对方装备的详细信息)
};

// 取消交易的物品装备
struct NET_SIC_cancel_exchange_item : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_cancel_exchange_item)
	INT64	n64_serial;
};

struct NET_SIS_cancel_exchange_item : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_cancel_exchange_item)
	unsigned int	dw_error_code;
	unsigned int	dwSrcID;
	unsigned int	dwDstID;
	INT64	n64_serial;
};

struct NET_SIC_exchange_money : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_money)
	INT64	n64Money;
};

struct NET_SIS_exchange_money : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_money)
	unsigned int	dw_error_code;	
	INT64	n64Money;
	unsigned int	dwSrcID;
};

struct NET_SIC_exchange_item_lock : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_item_lock)
};

struct NET_SIS_exchange_item_lock : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_item_lock)
	unsigned int	dw_error_code;
	unsigned int	dwSrcID;
};

// 取消交易
struct NET_SIC_exchange_cancel : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_cancel)
};

struct NET_SIS_exchange_cancel : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_cancel)
	unsigned int	dwSrcID;
};

// 玩家确认交易
struct NET_SIC_exchange_verify : public s_net_cmd
{
	DECL_NETCMD(NET_SIC_exchange_verify)
	unsigned int	dw_safe_code;
};

// 交易完成
struct NET_SIS_exchange_finish : public s_net_cmd
{
	DECL_NETCMD(NET_SIS_exchange_finish)
	unsigned int	dw_error_code;
	unsigned int	dwFailedRoleID;		// 导致失败者ID
};


//----------------------------------------------------------------------------


#pragma pack(pop)
#endif