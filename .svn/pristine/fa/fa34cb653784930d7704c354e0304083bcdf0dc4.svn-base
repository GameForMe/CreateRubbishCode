#ifndef _SHOP_DEFINE_H_
#define _SHOP_DEFINE_H_

#include "BaseDefine.h"
#include <string>
//-----------------------------------------------------------------------------
// 常量
//-----------------------------------------------------------------------------
const int MAX_SHOP_SHELF_NUM		= 4;	// 商店界面最大Tab页数
const int MAX_SHOP_COMMON_ITEM		= 100;	// 出售的最大普通物品类型数
const int MAX_SHOP_RARE_ITEM		= 30;	// 出售的最大稀有物品类型数
const int MAX_SHOP_ONE_SHELF		= 14;	// 单页货架格数
const int MAX_SHOP_TOTAL_ITEM		= MAX_SHOP_COMMON_ITEM + MAX_SHOP_RARE_ITEM;


enum ECurCostType
{
	ECCT_Null				= 0,	// 无

	ECCT_BagSilver			= 1,	// 金币	-- 背包中
	ECCT_BagDiamond			= 2,	// 钻石 -- 背包中
	ECCT_WareSilver			= 3,	// 银	-- 角色仓库中
	ECCT_BaiBaoYuanBao		= 4,	// 元宝 -- 角色仓库中
	ECCT_ExchangeVolume		= 5,	// 兑换券 -- 角色商城
	ECCT_BagBindSilver		= 6,	// 银	-- 背包中绑定的
	ECCT_Exploits			= 7,	// 战功

	ECCT_GuildContribe		= 10,	// 帮派贡献
	ECCT_GuildExploit		= 11,	// 帮派功勋

	ECCT_ClanConXuanYuan	= 120,	// 轩辕贡献
	ECCT_ClanConShenNong	= 121,	// 神农贡献
	ECCT_ClanConFuXi		= 122,	// 伏羲贡献
	ECCT_ClanConSanMiao		= 123,	// 三苗贡献
	ECCT_ClanConJiuLi		= 124,	// 九黎贡献
	ECCT_ClanConYueZhi		= 125,	// 月氏贡献
	ECCT_ClanConNvWa		= 126,	// 女娲贡献
	ECCT_ClanConGongGong	= 127,	// 共工贡献

	ECCT_ItemExchange		= 40,	// 物品兑换
};

enum MoneyTpye
{
	SILVER = 1,
	YUANBAO,
	DIAMOND
};
// 普通商品
struct tagShopItemProto
{
	unsigned int				dw_data_id;   	// 固定商品ID
	int				nSilver;		// 消耗金钱数
	int				nCostNum;		// 特殊消耗
	int             nMoneyType;
	tagShopItemProto() { memset(this, 0, sizeof(*this)); dw_data_id = -1; }
};


// 商店静态结构
struct tagShopProto
{
	unsigned int			dwID;							// 商店编号
	ECurCostType			eCostType;						// 商店特殊消耗类型

	tagShopItemProto		Item[MAX_SHOP_COMMON_ITEM];		// 普通商品
};

struct tagRingShopItemProto
{
	unsigned int send_id; //发送给服务器的Id;
	unsigned int dw_data_id; //魔石商店商品Id;
	std::string nCurrency; //货币名称;
	int index;   //数组index;
	int nMoney; // 价格;
	int nCount;  //数量;

	tagRingShopItemProto() { /*memset(this, 0, sizeof(*this));*/ send_id = -1; dw_data_id = -1; index = -1;}

};

//魔戒和灵石商店;
struct tagRingShopProto  
{
	unsigned int dwID;  //魔石商店编号;
	ECurCostType eCostType; //商店特殊消耗;

	tagRingShopItemProto Item[MAX_SHOP_COMMON_ITEM];
};


#endif