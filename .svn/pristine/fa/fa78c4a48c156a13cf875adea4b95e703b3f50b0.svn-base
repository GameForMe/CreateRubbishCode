#ifndef DBMGR_H_INCLUDE
#define DBMGR_H_INCLUDE
#include "SQLTable.h"
#include <map>
using namespace std;

#define SQLITE_DBNAME0 "CQ_SS0953.db"
#define SQLITE_DBNAME1 "CQ_SS0953.esdb"
#define SQLITE_DBNAME2 "CQ_SS0953.ecdb"
#define SQLITE_DBNAME3 "CQ_SS0953.eldb"

class c_db_manager
{
private:
	sqlite3* m_db;
	int m_ref;
	static c_db_manager* inst;

	c_sql_command* m_tmpCmd;	//[bing] 临时记录的cmd 注意一定不要嵌套在begin_operation和create_table之间又出现一个begin_operation!
public:
	c_db_manager();
	virtual ~c_db_manager();
	static c_db_manager* getSingleton();
	static void destroy_instance(){if(inst) delete inst;}
public:
	bool initialize();
	void shutdown();
public:
	bool create_a_connection(const std::string& dbname_, const char* pwd_, bool inmem_);
	void destroy_a_connection(const std::string& dbname_);
	c_sql_command* begin_operation(const std::string& cmd_);
	void end_operation(c_sql_command* cmd_);
	c_sql_table* create_table();
	void destroy_table(c_sql_table* reader_);
};
#endif