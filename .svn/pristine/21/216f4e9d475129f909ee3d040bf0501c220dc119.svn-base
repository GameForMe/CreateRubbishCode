#ifndef TOUCHSPRITE_H
#define TOUCHSPRITE_H

#include "cocos2d.h"
#include "cocos-ext.h"
#include "Signals.h"

using namespace cocos2d;
using namespace cocos2d::extension;

class TouchSprite : public CCSprite, public CCTouchDelegate
{
	friend class TouchSpriteLoader;
public:
	TouchSprite();
	~TouchSprite();
	CREATE_FUNC(TouchSprite);
	bool init();
	void setEmitWhenNotTouched(bool v) { _signalWhenNotTouched = v; }
	virtual void onEnter();
	virtual void onExit();
	virtual void ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
	virtual bool ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
	virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
	void setTouchEnable(bool enable) { _touchEnable = enable; }
	bool isTouched(CCTouch *pTouch);
	void setPriority(int pPriority);
SIGNALS:
	c_signal<void, TouchSprite*, bool> signalTouched;
protected:
	bool _signalWhenNotTouched;
	int _touchPriority;
	bool _isMoved;
	CCPoint _touchPt;
	bool _touchEnable;
};

class TouchSpriteLoader : public cocos2d::extension::CCSpriteLoader
{
public:
	CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD(TouchSpriteLoader, loader);
	virtual void onHandlePropTypeInteger(CCNode * pNode, CCNode * pParent, const char* pPropertyName, int pInteger, CCBReader * pCCBReader);
protected:
	CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD(TouchSprite);
};

#endif //TOUCHSPRITE_H